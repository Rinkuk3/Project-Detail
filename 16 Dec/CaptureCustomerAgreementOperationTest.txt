package com.td.mbna.msec.midtier.customerprofile;

import com.td.mbna.msec.midtier.customerprofile.payload.customeragreement.CaptureAgreementRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.customeragreement.CaptureAgreementResponse;
import com.td.mbna.msec.midtier.service.EmailInfo;
import com.td.mbna.msec.midtier.types.common.BaseRequest;
import com.td.mbna.msec.midtier.types.common.BaseResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class CaptureCustomerAgreementOperationTest {

    private CaptureCustomerAgreementOperation operation;

    @BeforeEach
    void setUp() {
        operation = new CaptureCustomerAgreementOperation();
    }

    @Test
    void testInvokeService() {
        CaptureAgreementRequest request = new CaptureAgreementRequest();
        CaptureAgreementResponse response = operation.invokeService(request);
        assertNotNull(response, "Response should not be null");
    }

    @Test
    void testRequiresDisclosureConsent() {
        assertTrue(operation.requiresDisclosureConsent(), "Disclosure consent should be required");
    }

    @Test
    void testGetConsentDisclosureFailedMsgCode() {
        assertNull(operation.getConsentDisclosureFailedMsgCode(), "Consent disclosure failed message code should be null");
    }

    @Test
    void testGenerateAutoComment() {
        assertFalse(operation.generateAutoComment(), "Auto comment generation should be false");
    }

    @Test
    void testCreateAutoComment() {
        BaseRequest request = new BaseRequest();
        BaseResponse response = new BaseResponse();
        List<String> comments = operation.createAutoComment(request, response);
        assertNull(comments, "Auto comments should be null");
    }

    @Test
    void testGetEmailInfoBean() {
        BaseRequest request = new BaseRequest();
        BaseResponse response = new BaseResponse();
        EmailInfo emailInfo = operation.getEmailInfoBean(request, response);
        assertNull(emailInfo, "EmailInfoBean should be null");
    }

    @Test
    void testGetValidator() {
        assertNull(operation.getValidator(), "Validator should be null");
    }
}
