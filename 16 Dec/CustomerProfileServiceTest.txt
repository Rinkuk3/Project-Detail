package com.td.mbna.msec.midtier.customerprofile;

import com.td.mbna.msec.midtier.customerprofile.payload.addauthorizeduser.AddAuthorizedUserRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.addauthorizeduser.AddAuthorizedUserResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.customeragreement.CaptureAgreementRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.customeragreement.CaptureAgreementResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.getkycacctsinfo.GetKycAcctsInfoRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.getkycacctsinfo.GetKycAcctsInfoResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.getuserinfoandaccounts.GetUserInfoAndAccountsRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.getuserinfoandaccounts.GetUserInfoAndAccountsResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.retrievecapd.RetrieveCapdRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.retrievecapd.RetrieveCapdResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.retrievecustomerprofile.RetrieveCustomerProfileRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.retrievecustomerprofile.RetrieveCustomerProfileResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.retrieveenrollment.RetrieveEnrollmentRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.retrieveenrollment.RetrieveEnrollmentResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.retrievevaletdata.RetrieveValetDataRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.retrievevaletdata.RetrieveValetDataResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.savevaletdata.SaveValetDataRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.savevaletdata.SaveValetDataResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.setkycacctsinfo.SetKycAcctsInfoRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.setkycacctsinfo.SetKycAcctsInfoResponse;
import com.td.mbna.msec.midtier.customerprofile.payload.updatecustomerprofile.UpdateCustomerProfileRequest;
import com.td.mbna.msec.midtier.customerprofile.payload.updatecustomerprofile.UpdateCustomerProfileResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

class CustomerProfileServiceTest {

    @InjectMocks
    private CustomerProfileServiceImpl service;

    @Mock
    private GetUserInfoAndAccountsOperation getUserInfoAndAccountsOperation;

    @Mock
    private RetrieveEnrollmentOperation retrieveEnrollmentOperation;

    @Mock
    private AddAuthorizedUserOperation addAuthorizedUserOperation;

    @Mock
    private RetrieveCustomerProfileOperation retrieveCustomerProfileOperation;

    @Mock
    private UpdateCustomerProfileOperation updateCustomerProfileOperation;

    @Mock
    private GetKycAcctsInfoOperation getKycAcctsInfoOperation;

    @Mock
    private SetKycAcctsInfoOperation setKycAcctsInfoOperation;

    @Mock
    private RetrieveCapdOperation retrieveCapdOperation;

    @Mock
    private SaveValetDataOperation saveValetDataOperation;

    @Mock
    private RetrieveValetDataOperation retrieveValetDataOperation;

    @Mock
    private CaptureCustomerAgreementOperation captureCustomerAgreementOperation;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testRetrieveEnrollment() {
        RetrieveEnrollmentRequest request = new RetrieveEnrollmentRequest();
        RetrieveEnrollmentResponse response = new RetrieveEnrollmentResponse();
        when(retrieveEnrollmentOperation.invokeService(request, null)).thenReturn(response);

        RetrieveEnrollmentResponse result = service.retrieveEnrollment(request);

        assertNotNull(result);
        verify(retrieveEnrollmentOperation).invokeService(request, null);
    }

    @Test
    void testAddAuthorizedUser() {
        AddAuthorizedUserRequest request = new AddAuthorizedUserRequest();
        AddAuthorizedUserResponse response = new AddAuthorizedUserResponse();
        when(addAuthorizedUserOperation.invokeService(request, null)).thenReturn(response);

        AddAuthorizedUserResponse result = service.addAuthorizedUser(request);

        assertNotNull(result);
        verify(addAuthorizedUserOperation).invokeService(request, null);
    }

    @Test
    void testRetrieveCustomerProfile() {
        RetrieveCustomerProfileRequest request = new RetrieveCustomerProfileRequest();
        RetrieveCustomerProfileResponse response = new RetrieveCustomerProfileResponse();
        when(retrieveCustomerProfileOperation.invokeService(request, null)).thenReturn(response);

        RetrieveCustomerProfileResponse result = service.retrieveCustomerProfile(request);

        assertNotNull(result);
        verify(retrieveCustomerProfileOperation).invokeService(request, null);
    }

    @Test
    void testUpdateCustomerProfile() {
        UpdateCustomerProfileRequest request = new UpdateCustomerProfileRequest();
        UpdateCustomerProfileResponse response = new UpdateCustomerProfileResponse();
        when(updateCustomerProfileOperation.invokeService(request, null)).thenReturn(response);

        UpdateCustomerProfileResponse result = service.updateCustomerProfile(request);

        assertNotNull(result);
        verify(updateCustomerProfileOperation).invokeService(request, null);
    }

    @Test
    void testGetUserInfoAndAccounts() {
        GetUserInfoAndAccountsRequest request = new GetUserInfoAndAccountsRequest();
        GetUserInfoAndAccountsResponse response = new GetUserInfoAndAccountsResponse();
        when(getUserInfoAndAccountsOperation.invokeService(request, null)).thenReturn(response);

        GetUserInfoAndAccountsResponse result = service.getUserInfoAndAccounts(request);

        assertNotNull(result);
        verify(getUserInfoAndAccountsOperation).invokeService(request, null);
    }

    @Test
    void testGetKycAcctsInfo() {
        GetKycAcctsInfoRequest request = new GetKycAcctsInfoRequest();
        GetKycAcctsInfoResponse response = new GetKycAcctsInfoResponse();
        when(getKycAcctsInfoOperation.invokeService(request, null)).thenReturn(response);

        GetKycAcctsInfoResponse result = service.getKycAcctsInfo(request);

        assertNotNull(result);
        verify(getKycAcctsInfoOperation).invokeService(request, null);
    }

    @Test
    void testSetKycAcctsInfo() {
        SetKycAcctsInfoRequest request = new SetKycAcctsInfoRequest();
        SetKycAcctsInfoResponse response = new SetKycAcctsInfoResponse();
        when(setKycAcctsInfoOperation.invokeService(request, null)).thenReturn(response);

        SetKycAcctsInfoResponse result = service.setKycAcctsInfo(request);

        assertNotNull(result);
        verify(setKycAcctsInfoOperation).invokeService(request, null);
    }

    @Test
    void testRetrieveCapd() {
        RetrieveCapdRequest request = new RetrieveCapdRequest();
        RetrieveCapdResponse response = new RetrieveCapdResponse();
        when(retrieveCapdOperation.invokeService(request, null)).thenReturn(response);

        RetrieveCapdResponse result = service.retrieveCapd(request);

        assertNotNull(result);
        verify(retrieveCapdOperation).invokeService(request, null);
    }

    @Test
    void testSaveValetData() {
        SaveValetDataRequest request = new SaveValetDataRequest();
        SaveValetDataResponse response = new SaveValetDataResponse();
        when(saveValetDataOperation.invokeService(request, null)).thenReturn(response);

        SaveValetDataResponse result = service.saveValetData(request);

        assertNotNull(result);
        verify(saveValetDataOperation).invokeService(request, null);
    }

    @Test
    void testRetrieveValetData() {
        RetrieveValetDataRequest request = new RetrieveValetDataRequest();
        RetrieveValetDataResponse response = new RetrieveValetDataResponse();
        when(retrieveValetDataOperation.invokeService(request, null)).thenReturn(response);

        RetrieveValetDataResponse result = service.retrieveValetData(request);

        assertNotNull(result);
        verify(retrieveValetDataOperation).invokeService(request, null);
    }

    @Test
    void testCaptureAgreement() {
        CaptureAgreementRequest request = new CaptureAgreementRequest();
        CaptureAgreementResponse response = new CaptureAgreementResponse();
        when(captureCustomerAgreementOperation.invokeService(request, null)).thenReturn(response);

        CaptureAgreementResponse result = service.captureAgreement(request);

        assertNotNull(result);
        verify(captureCustomerAgreementOperation).invokeService(request, null);
    }
}
