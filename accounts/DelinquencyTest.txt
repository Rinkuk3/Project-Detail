import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class DelinquencyTest {

    private Delinquency delinquency;

    @BeforeEach
    void setUp() {
        delinquency = new Delinquency();
    }

    @Test
    void testGetAndSetDelinquencyLevelCd() {
        delinquency.setDelinquencyLevelCd("High");
        assertEquals("High", delinquency.getDelinquencyLevelCd());
    }

    @Test
    void testGetAndSetDelinquencyCnt() {
        delinquency.setDelinquencyCnt(10);
        assertEquals(10, delinquency.getDelinquencyCnt());
    }

    @Test
    void testToString() {
        delinquency.setDelinquencyLevelCd("High");
        delinquency.setDelinquencyCnt(10);
        
        String expectedString = "com.td.api.mbcca.response.account.Delinquency@" + 
                Integer.toHexString(System.identityHashCode(delinquency)) + 
                "[delinquencyLevelCd=High,delinquencyCnt=10]";
        
        assertEquals(expectedString, delinquency.toString());
    }

    @Test
    void testHashCode() {
        delinquency.setDelinquencyLevelCd("High");
        delinquency.setDelinquencyCnt(10);
        
        int expectedHashCode = 1;
        expectedHashCode = ((expectedHashCode * 31) + (10 == null ? 0 : Integer.valueOf(10).hashCode()));
        expectedHashCode = ((expectedHashCode * 31) + ("High" == null ? 0 : "High".hashCode()));

        assertEquals(expectedHashCode, delinquency.hashCode());
    }

    @Test
    void testEquals() {
        Delinquency anotherDelinquency = new Delinquency();
        delinquency.setDelinquencyLevelCd("High");
        delinquency.setDelinquencyCnt(10);

        anotherDelinquency.setDelinquencyLevelCd("High");
        anotherDelinquency.setDelinquencyCnt(10);

        assertTrue(delinquency.equals(anotherDelinquency));
        
        anotherDelinquency.setDelinquencyLevelCd("Low");
        assertFalse(delinquency.equals(anotherDelinquency));
    }
}
