package com.td.api.mbcca.response.account;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AgreementTSYSExtensionTest {

    private AgreementTSYSExtension agreementTSYSExtension;

    @BeforeEach
    void setUp() {
        agreementTSYSExtension = new AgreementTSYSExtension();
    }

    @Test
    void testGetAndSetSecurityFraudStatusReasonCd() {
        agreementTSYSExtension.setSecurityFraudStatusReasonCd("fraudStatus");
        assertEquals("fraudStatus", agreementTSYSExtension.getSecurityFraudStatusReasonCd());
    }

    @Test
    void testGetAndSetFraudStatusReasonCd() {
        agreementTSYSExtension.setFraudStatusReasonCd("fraudReason");
        assertEquals("fraudReason", agreementTSYSExtension.getFraudStatusReasonCd());
    }

    @Test
    void testGetAndSetTransferStatusReasonCd() {
        agreementTSYSExtension.setTransferStatusReasonCd("transferReason");
        assertEquals("transferReason", agreementTSYSExtension.getTransferStatusReasonCd());
    }

    @Test
    void testGetAndSetChargeOffStatusReasonCd() {
        agreementTSYSExtension.setChargeOffStatusReasonCd("chargeOffReason");
        assertEquals("chargeOffReason", agreementTSYSExtension.getChargeOffStatusReasonCd());
    }

    @Test
    void testGetAndSetCreditCounsellingStatusReasonCd() {
        agreementTSYSExtension.setCreditCounsellingStatusReasonCd("counselingReason");
        assertEquals("counselingReason", agreementTSYSExtension.getCreditCounsellingStatusReasonCd());
    }

    @Test
    void testGetAndSetPurgeStatusReasonCd() {
        agreementTSYSExtension.setPurgeStatusReasonCd("purgeReason");
        assertEquals("purgeReason", agreementTSYSExtension.getPurgeStatusReasonCd());
    }

    @Test
    void testGetAndSetBankruptStatusReasonCd() {
        agreementTSYSExtension.setBankruptStatusReasonCd("bankruptReason");
        assertEquals("bankruptReason", agreementTSYSExtension.getBankruptStatusReasonCd());
    }

    @Test
    void testGetAndSetClosedStatusReasonCd() {
        agreementTSYSExtension.setClosedStatusReasonCd("closedReason");
        assertEquals("closedReason", agreementTSYSExtension.getClosedStatusReasonCd());
    }

    @Test
    void testGetAndSetCreditRevokedStatusReasonCd() {
        agreementTSYSExtension.setCreditRevokedStatusReasonCd("revokedReason");
        assertEquals("revokedReason", agreementTSYSExtension.getCreditRevokedStatusReasonCd());
    }

    @Test
    void testGetAndSetLegalStatusReasonCd() {
        agreementTSYSExtension.setLegalStatusReasonCd("legalReason");
        assertEquals("legalReason", agreementTSYSExtension.getLegalStatusReasonCd());
    }

    @Test
    void testGetAndSetPotentialChargeOffStatusReasonCd() {
        agreementTSYSExtension.setPotentialChargeOffStatusReasonCd("potentialChargeOff");
        assertEquals("potentialChargeOff", agreementTSYSExtension.getPotentialChargeOffStatusReasonCd());
    }

    @Test
    void testGetAndSetRecoveryStatusReasonCd() {
        agreementTSYSExtension.setRecoveryStatusReasonCd("recoveryReason");
        assertEquals("recoveryReason", agreementTSYSExtension.getRecoveryStatusReasonCd());
    }

    @Test
    void testGetAndSetPrivacyInd() {
        agreementTSYSExtension.setPrivacyInd(true);
        assertTrue(agreementTSYSExtension.getPrivacyInd());
    }

    @Test
    void testGetAndSetDelinquentStatusReasonCd() {
        agreementTSYSExtension.setDelinquentStatusReasonCd("delinquentReason");
        assertEquals("delinquentReason", agreementTSYSExtension.getDelinquentStatusReasonCd());
    }

    @Test
    void testGetAndSetPrivacyCd() {
        agreementTSYSExtension.setPrivacyCd("privacyCode");
        assertEquals("privacyCode", agreementTSYSExtension.getPrivacyCd());
    }

    @Test
    void testGetAndSetAttentionLineTxt() {
        agreementTSYSExtension.setAttentionLineTxt("attentionText");
        assertEquals("attentionText", agreementTSYSExtension.getAttentionLineTxt());
    }

    @Test
    void testGetAndSetGroupCd() {
        agreementTSYSExtension.setGroupCd("groupCode");
        assertEquals("groupCode", agreementTSYSExtension.getGroupCd());
    }

    @Test
    void testGetAndSetProductFamilyCd() {
        agreementTSYSExtension.setProductFamilyCd("productFamily");
        assertEquals("productFamily", agreementTSYSExtension.getProductFamilyCd());
    }

    @Test
    void testGetAndSetCardLevelCd() {
        agreementTSYSExtension.setCardLevelCd("cardLevel");
        assertEquals("cardLevel", agreementTSYSExtension.getCardLevelCd());
    }

    @Test
    void testGetAndSetOverLimitStatusReasonCd() {
        agreementTSYSExtension.setOverLimitStatusReasonCd("overLimit");
        assertEquals("overLimit", agreementTSYSExtension.getOverLimitStatusReasonCd());
    }

    @Test
    void testToString() {
        agreementTSYSExtension.setSecurityFraudStatusReasonCd("fraudStatus");
        assertNotNull(agreementTSYSExtension.toString());
    }

    @Test
    void testHashCode() {
        AgreementTSYSExtension extension2 = new AgreementTSYSExtension();
        extension2.setSecurityFraudStatusReasonCd("fraudStatus");
        agreementTSYSExtension.setSecurityFraudStatusReasonCd("fraudStatus");
        assertEquals(agreementTSYSExtension.hashCode(), extension2.hashCode());
    }

    @Test
    void testEquals() {
        AgreementTSYSExtension extension2 = new AgreementTSYSExtension();
        extension2.setSecurityFraudStatusReasonCd("fraudStatus");
        agreementTSYSExtension.setSecurityFraudStatusReasonCd("fraudStatus");
        assertTrue(agreementTSYSExtension.equals(extension2));

        extension2.setSecurityFraudStatusReasonCd("otherFraudStatus");
        assertFalse(agreementTSYSExtension.equals(extension2));
    }
}
