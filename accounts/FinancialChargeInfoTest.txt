import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class FinancialChargeInfoTest {

    private FinancialChargeInfo financialChargeInfo;

    @BeforeEach
    void setUp() {
        financialChargeInfo = new FinancialChargeInfo();
    }

    @Test
    void testGetAndSetPurchaseChargeCccyamt() {
        Cccyamt purchaseCharge = new Cccyamt();
        financialChargeInfo.setPurchaseChargeCccyamt(purchaseCharge);
        assertEquals(purchaseCharge, financialChargeInfo.getPurchaseChargeCccyamt());
    }

    @Test
    void testGetAndSetCashAdvanceChargeCccyamt() {
        Cccyamt cashAdvanceCharge = new Cccyamt();
        financialChargeInfo.setCashAdvanceChargeCccyamt(cashAdvanceCharge);
        assertEquals(cashAdvanceCharge, financialChargeInfo.getCashAdvanceChargeCccyamt());
    }

    @Test
    void testGetAndSetOtherChargeCccyamt() {
        Cccyamt otherCharge = new Cccyamt();
        financialChargeInfo.setOtherChargeCccyamt(otherCharge);
        assertEquals(otherCharge, financialChargeInfo.getOtherChargeCccyamt());
    }

    @Test
    void testToString() {
        Cccyamt purchaseCharge = new Cccyamt();
        Cccyamt cashAdvanceCharge = new Cccyamt();
        Cccyamt otherCharge = new Cccyamt();
        financialChargeInfo.setPurchaseChargeCccyamt(purchaseCharge);
        financialChargeInfo.setCashAdvanceChargeCccyamt(cashAdvanceCharge);
        financialChargeInfo.setOtherChargeCccyamt(otherCharge);
        
        String expectedString = "com.td.api.mbcca.response.account.FinancialChargeInfo@" + 
                Integer.toHexString(System.identityHashCode(financialChargeInfo)) + 
                "[purchaseChargeCccyamt=" + purchaseCharge + 
                ",cashAdvanceChargeCccyamt=" + cashAdvanceCharge + 
                ",otherChargeCccyamt=" + otherCharge + "]";
        assertEquals(expectedString, financialChargeInfo.toString());
    }

    @Test
    void testHashCode() {
        Cccyamt purchaseCharge = new Cccyamt();
        Cccyamt cashAdvanceCharge = new Cccyamt();
        Cccyamt otherCharge = new Cccyamt();
        financialChargeInfo.setPurchaseChargeCccyamt(purchaseCharge);
        financialChargeInfo.setCashAdvanceChargeCccyamt(cashAdvanceCharge);
        financialChargeInfo.setOtherChargeCccyamt(otherCharge);

        FinancialChargeInfo anotherInfo = new FinancialChargeInfo();
        anotherInfo.setPurchaseChargeCccyamt(purchaseCharge);
        anotherInfo.setCashAdvanceChargeCccyamt(cashAdvanceCharge);
        anotherInfo.setOtherChargeCccyamt(otherCharge);
        
        assertEquals(financialChargeInfo.hashCode(), anotherInfo.hashCode());
    }

    @Test
    void testEquals() {
        Cccyamt purchaseCharge = new Cccyamt();
        Cccyamt cashAdvanceCharge = new Cccyamt();
        Cccyamt otherCharge = new Cccyamt();
        financialChargeInfo.setPurchaseChargeCccyamt(purchaseCharge);
        financialChargeInfo.setCashAdvanceChargeCccyamt(cashAdvanceCharge);
        financialChargeInfo.setOtherChargeCccyamt(otherCharge);
        
        FinancialChargeInfo anotherInfo = new FinancialChargeInfo();
        anotherInfo.setPurchaseChargeCccyamt(purchaseCharge);
        anotherInfo.setCashAdvanceChargeCccyamt(cashAdvanceCharge);
        anotherInfo.setOtherChargeCccyamt(otherCharge);
        
        assertTrue(financialChargeInfo.equals(anotherInfo));

        anotherInfo.setPurchaseChargeCccyamt(new Cccyamt());
        assertFalse(financialChargeInfo.equals(anotherInfo));
    }
}
