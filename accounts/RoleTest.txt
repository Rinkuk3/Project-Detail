import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.*;

public class RoleTest {

    private Role role;

    @BeforeEach
    public void setUp() {
        role = new Role();
        role.setRoleCd("PRIM");
        role.setStartDt("2025-01-01");
        role.setEndDt("2025-12-31");
        role.setAmt(new BigDecimal("1000.00"));
        role.setPct(new BigDecimal("10.00"));
        role.setStatusCd("ACTIVE");
    }

    @Test
    public void testGettersAndSetters() {
        assertEquals("PRIM", role.getRoleCd());
        assertEquals("2025-01-01", role.getStartDt());
        assertEquals("2025-12-31", role.getEndDt());
        assertEquals(new BigDecimal("1000.00"), role.getAmt());
        assertEquals(new BigDecimal("10.00"), role.getPct());
        assertEquals("ACTIVE", role.getStatusCd());
    }

    @Test
    public void testToString() {
        String expectedToString = "com.td.api.mbcca.response.account.Role@" + Integer.toHexString(System.identityHashCode(role)) +
                "[roleCd=" + role.getRoleCd() +
                ",startDt=" + role.getStartDt() +
                ",endDt=" + role.getEndDt() +
                ",amt=" + role.getAmt() +
                ",pct=" + role.getPct() +
                ",statusCd=" + role.getStatusCd() +
                "]";
        
        assertTrue(role.toString().contains("com.td.api.mbcca.response.account.Role"));
        assertTrue(role.toString().contains("roleCd"));
        assertTrue(role.toString().contains("startDt"));
        assertTrue(role.toString().contains("endDt"));
        assertTrue(role.toString().contains("amt"));
        assertTrue(role.toString().contains("pct"));
        assertTrue(role.toString().contains("statusCd"));
    }

    @Test
    public void testHashCode() {
        int expectedHashCode = role.hashCode();

        Role anotherRole = new Role();
        anotherRole.setRoleCd("PRIM");
        anotherRole.setStartDt("2025-01-01");
        anotherRole.setEndDt("2025-12-31");
        anotherRole.setAmt(new BigDecimal("1000.00"));
        anotherRole.setPct(new BigDecimal("10.00"));
        anotherRole.setStatusCd("ACTIVE");

        assertEquals(expectedHashCode, anotherRole.hashCode());
    }

    @Test
    public void testEquals() {
        Role equalRole = new Role();
        equalRole.setRoleCd("PRIM");
        equalRole.setStartDt("2025-01-01");
        equalRole.setEndDt("2025-12-31");
        equalRole.setAmt(new BigDecimal("1000.00"));
        equalRole.setPct(new BigDecimal("10.00"));
        equalRole.setStatusCd("ACTIVE");

        assertTrue(role.equals(equalRole));

        Role notEqualRole = new Role();
        notEqualRole.setRoleCd("AUTH");
        assertFalse(role.equals(notEqualRole));
    }
}
