import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ProductFeatureTest {

    private ProductFeature productFeature;

    @BeforeEach
    void setUp() {
        productFeature = new ProductFeature();
    }

    @Test
    void testGetAndSetFeatureDesc() {
        String featureDesc = "Feature Description";
        productFeature.setFeatureDesc(featureDesc);
        assertEquals(featureDesc, productFeature.getFeatureDesc());
    }

    @Test
    void testGetAndSetActiveInd() {
        Boolean activeInd = true;
        productFeature.setActiveInd(activeInd);
        assertEquals(activeInd, productFeature.getActiveInd());
    }

    @Test
    void testGetAndSetInsurableInterestCoverageTypeCd() {
        String coverageTypeCd = "Coverage Code";
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);
        assertEquals(coverageTypeCd, productFeature.getInsurableInterestCoverageTypeCd());
    }

    @Test
    void testToString() {
        String featureDesc = "Feature Description";
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";
        
        productFeature.setFeatureDesc(featureDesc);
        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        String expected = "com.td.api.mbcca.response.account.ProductFeature@" + Integer.toHexString(productFeature.hashCode()) +
                "[featureDesc=" + featureDesc + ",activeInd=" + activeInd + ",insurableInterestCoverageTypeCd=" + coverageTypeCd + "]";
        assertEquals(expected, productFeature.toString());
    }

    @Test
    void testHashCode() {
        ProductFeature anotherProductFeature = new ProductFeature();
        String featureDesc = "Feature Description";
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";

        productFeature.setFeatureDesc(featureDesc);
        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        anotherProductFeature.setFeatureDesc(featureDesc);
        anotherProductFeature.setActiveInd(activeInd);
        anotherProductFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        assertEquals(productFeature.hashCode(), anotherProductFeature.hashCode());
    }

    @Test
    void testEquals() {
        ProductFeature anotherProductFeature = new ProductFeature();
        String featureDesc = "Feature Description";
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";

        productFeature.setFeatureDesc(featureDesc);
        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        anotherProductFeature.setFeatureDesc(featureDesc);
        anotherProductFeature.setActiveInd(activeInd);
        anotherProductFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        assertTrue(productFeature.equals(anotherProductFeature));
    }

    @Test
    void testEqualsWithDifferentFeatureDesc() {
        ProductFeature anotherProductFeature = new ProductFeature();
        String featureDesc = "Feature Description";
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";

        productFeature.setFeatureDesc(featureDesc);
        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        anotherProductFeature.setFeatureDesc("Different Description");
        anotherProductFeature.setActiveInd(activeInd);
        anotherProductFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        assertFalse(productFeature.equals(anotherProductFeature));
    }

    @Test
    void testEqualsWithDifferentActiveInd() {
        ProductFeature anotherProductFeature = new ProductFeature();
        String featureDesc = "Feature Description";
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";

        productFeature.setFeatureDesc(featureDesc);
        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        anotherProductFeature.setFeatureDesc(featureDesc);
        anotherProductFeature.setActiveInd(false);
        anotherProductFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        assertFalse(productFeature.equals(anotherProductFeature));
    }

    @Test
    void testEqualsWithDifferentCoverageTypeCd() {
        ProductFeature anotherProductFeature = new ProductFeature();
        String featureDesc = "Feature Description";
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";

        productFeature.setFeatureDesc(featureDesc);
        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        anotherProductFeature.setFeatureDesc(featureDesc);
        anotherProductFeature.setActiveInd(activeInd);
        anotherProductFeature.setInsurableInterestCoverageTypeCd("Different Coverage Code");

        assertFalse(productFeature.equals(anotherProductFeature));
    }

    @Test
    void testEqualsWithNullFeatureDesc() {
        ProductFeature anotherProductFeature = new ProductFeature();
        productFeature.setFeatureDesc(null);
        Boolean activeInd = true;
        String coverageTypeCd = "Coverage Code";

        productFeature.setActiveInd(activeInd);
        productFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        anotherProductFeature.setFeatureDesc(null);
        anotherProductFeature.setActiveInd(activeInd);
        anotherProductFeature.setInsurableInterestCoverageTypeCd(coverageTypeCd);

        assertTrue(productFeature.equals(anotherProductFeature));
    }

    @Test
    void testEqualsWithNull() {
        assertFalse(productFeature.equals(null));
    }

    @Test
    void testEqualsWithDifferentClass() {
        String notAProductFeature = "Not a ProductFeature";
        assertFalse(productFeature.equals(notAProductFeature));
    }
}
