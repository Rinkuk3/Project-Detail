import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class StatusChangesInfoTest {

    private StatusChangesInfo statusChangesInfo;

    @BeforeEach
    public void setUp() {
        statusChangesInfo = new StatusChangesInfo();
        statusChangesInfo.setProductChangeStatusLastChangedDt("2025-03-01");
        statusChangesInfo.setAgreementClosedStatusDt("2025-02-15");
        statusChangesInfo.setCreditRevokedStatusLastChangedDt("2025-01-20");
        statusChangesInfo.setCollectionStatusLastChangedDt("2025-01-10");
        statusChangesInfo.setAgreementStatusLastChangedDt("2025-02-01");
        statusChangesInfo.setCreditBureauStatusLastChangedDt("2025-02-25");
        statusChangesInfo.setSecurityFraudStatusLastChangedDt("2025-02-05");
        statusChangesInfo.setWatchStatusLastChangedDt("2025-03-03");
        statusChangesInfo.setAgreementClosedStatusLastChangedDt("2025-03-02");
        statusChangesInfo.setPotentialPurgeStatusLastChangedDt("2025-03-04");
    }

    @Test
    public void testGettersAndSetters() {
        assertEquals("2025-03-01", statusChangesInfo.getProductChangeStatusLastChangedDt());
        assertEquals("2025-02-15", statusChangesInfo.getAgreementClosedStatusDt());
        assertEquals("2025-01-20", statusChangesInfo.getCreditRevokedStatusLastChangedDt());
        assertEquals("2025-01-10", statusChangesInfo.getCollectionStatusLastChangedDt());
        assertEquals("2025-02-01", statusChangesInfo.getAgreementStatusLastChangedDt());
        assertEquals("2025-02-25", statusChangesInfo.getCreditBureauStatusLastChangedDt());
        assertEquals("2025-02-05", statusChangesInfo.getSecurityFraudStatusLastChangedDt());
        assertEquals("2025-03-03", statusChangesInfo.getWatchStatusLastChangedDt());
        assertEquals("2025-03-02", statusChangesInfo.getAgreementClosedStatusLastChangedDt());
        assertEquals("2025-03-04", statusChangesInfo.getPotentialPurgeStatusLastChangedDt());
    }

    @Test
    public void testToString() {
        String expectedToString = "com.td.api.mbcca.response.account.StatusChangesInfo@" + Integer.toHexString(System.identityHashCode(statusChangesInfo)) +
                "[productChangeStatusLastChangedDt=2025-03-01," +
                "agreementClosedStatusDt=2025-02-15," +
                "creditRevokedStatusLastChangedDt=2025-01-20," +
                "collectionStatusLastChangedDt=2025-01-10," +
                "agreementStatusLastChangedDt=2025-02-01," +
                "creditBureauStatusLastChangedDt=2025-02-25," +
                "securityFraudStatusLastChangedDt=2025-02-05," +
                "watchStatusLastChangedDt=2025-03-03," +
                "agreementClosedStatusLastChangedDt=2025-03-02," +
                "potentialPurgeStatusLastChangedDt=2025-03-04]";
        
        assertTrue(statusChangesInfo.toString().contains("StatusChangesInfo"));
        assertTrue(statusChangesInfo.toString().contains("productChangeStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("agreementClosedStatusDt"));
        assertTrue(statusChangesInfo.toString().contains("creditRevokedStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("collectionStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("agreementStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("creditBureauStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("securityFraudStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("watchStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("agreementClosedStatusLastChangedDt"));
        assertTrue(statusChangesInfo.toString().contains("potentialPurgeStatusLastChangedDt"));
    }

    @Test
    public void testHashCode() {
        int expectedHashCode = statusChangesInfo.hashCode();

        StatusChangesInfo anotherStatusChangesInfo = new StatusChangesInfo();
        anotherStatusChangesInfo.setProductChangeStatusLastChangedDt("2025-03-01");
        anotherStatusChangesInfo.setAgreementClosedStatusDt("2025-02-15");
        anotherStatusChangesInfo.setCreditRevokedStatusLastChangedDt("2025-01-20");
        anotherStatusChangesInfo.setCollectionStatusLastChangedDt("2025-01-10");
        anotherStatusChangesInfo.setAgreementStatusLastChangedDt("2025-02-01");
        anotherStatusChangesInfo.setCreditBureauStatusLastChangedDt("2025-02-25");
        anotherStatusChangesInfo.setSecurityFraudStatusLastChangedDt("2025-02-05");
        anotherStatusChangesInfo.setWatchStatusLastChangedDt("2025-03-03");
        anotherStatusChangesInfo.setAgreementClosedStatusLastChangedDt("2025-03-02");
        anotherStatusChangesInfo.setPotentialPurgeStatusLastChangedDt("2025-03-04");

        assertEquals(expectedHashCode, anotherStatusChangesInfo.hashCode());
    }

    @Test
    public void testEquals() {
        StatusChangesInfo equalStatusChangesInfo = new StatusChangesInfo();
        equalStatusChangesInfo.setProductChangeStatusLastChangedDt("2025-03-01");
        equalStatusChangesInfo.setAgreementClosedStatusDt("2025-02-15");
        equalStatusChangesInfo.setCreditRevokedStatusLastChangedDt("2025-01-20");
        equalStatusChangesInfo.setCollectionStatusLastChangedDt("2025-01-10");
        equalStatusChangesInfo.setAgreementStatusLastChangedDt("2025-02-01");
        equalStatusChangesInfo.setCreditBureauStatusLastChangedDt("2025-02-25");
        equalStatusChangesInfo.setSecurityFraudStatusLastChangedDt("2025-02-05");
        equalStatusChangesInfo.setWatchStatusLastChangedDt("2025-03-03");
        equalStatusChangesInfo.setAgreementClosedStatusLastChangedDt("2025-03-02");
        equalStatusChangesInfo.setPotentialPurgeStatusLastChangedDt("2025-03-04");

        assertTrue(statusChangesInfo.equals(equalStatusChangesInfo));

        StatusChangesInfo notEqualStatusChangesInfo = new StatusChangesInfo();
        notEqualStatusChangesInfo.setProductChangeStatusLastChangedDt("2025-04-01");
        assertFalse(statusChangesInfo.equals(notEqualStatusChangesInfo));
    }
}
