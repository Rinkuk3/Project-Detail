import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class OriginalAuthorizationEventTest {

    private OriginalAuthorizationEvent originalAuthorizationEvent;

    @BeforeEach
    void setUp() {
        originalAuthorizationEvent = new OriginalAuthorizationEvent();
    }

    @Test
    void testGetAndSetTerminalChannelTypeCd() {
        originalAuthorizationEvent.setTerminalChannelTypeCd("Terminal1");
        assertEquals("Terminal1", originalAuthorizationEvent.getTerminalChannelTypeCd());
    }

    @Test
    void testGetAndSetTransactionDetailAvailableTypeCd() {
        originalAuthorizationEvent.setTransactionDetailAvailableTypeCd("DetailType1");
        assertEquals("DetailType1", originalAuthorizationEvent.getTransactionDetailAvailableTypeCd());
    }

    @Test
    void testGetAndSetMerchantPointOfServiceTerminalCapabilityCd() {
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalCapabilityCd("Capability1");
        assertEquals("Capability1", originalAuthorizationEvent.getMerchantPointOfServiceTerminalCapabilityCd());
    }

    @Test
    void testGetAndSetMerchantPointOfServiceTerminalEntryCd() {
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalEntryCd("Entry1");
        assertEquals("Entry1", originalAuthorizationEvent.getMerchantPointOfServiceTerminalEntryCd());
    }

    @Test
    void testGetAndSetMailTelephoneOrderTransactionCd() {
        originalAuthorizationEvent.setMailTelephoneOrderTransactionCd("MailOrder1");
        assertEquals("MailOrder1", originalAuthorizationEvent.getMailTelephoneOrderTransactionCd());
    }

    @Test
    void testGetAndSetChargeBackRightsIndicatorCd() {
        originalAuthorizationEvent.setChargeBackRightsIndicatorCd("ChargeBack1");
        assertEquals("ChargeBack1", originalAuthorizationEvent.getChargeBackRightsIndicatorCd());
    }

    @Test
    void testGetAndSetPrepaidCardIndicatorCd() {
        originalAuthorizationEvent.setPrepaidCardIndicatorCd("PrepaidCard1");
        assertEquals("PrepaidCard1", originalAuthorizationEvent.getPrepaidCardIndicatorCd());
    }

    @Test
    void testToString() {
        originalAuthorizationEvent.setTerminalChannelTypeCd("Terminal1");
        originalAuthorizationEvent.setTransactionDetailAvailableTypeCd("DetailType1");
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalCapabilityCd("Capability1");
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalEntryCd("Entry1");
        originalAuthorizationEvent.setMailTelephoneOrderTransactionCd("MailOrder1");
        originalAuthorizationEvent.setChargeBackRightsIndicatorCd("ChargeBack1");
        originalAuthorizationEvent.setPrepaidCardIndicatorCd("PrepaidCard1");

        String expectedToString = "com.td.api.mbcca.response.account.OriginalAuthorizationEvent@" +
                Integer.toHexString(System.identityHashCode(originalAuthorizationEvent)) +
                "[terminalChannelTypeCd=Terminal1,transactionDetailAvailableTypeCd=DetailType1," +
                "merchantPointOfServiceTerminalCapabilityCd=Capability1," +
                "merchantPointOfServiceTerminalEntryCd=Entry1,mailTelephoneOrderTransactionCd=MailOrder1," +
                "chargeBackRightsIndicatorCd=ChargeBack1,prepaidCardIndicatorCd=PrepaidCard1,]";

        assertEquals(expectedToString, originalAuthorizationEvent.toString());
    }

    @Test
    void testHashCode() {
        originalAuthorizationEvent.setTerminalChannelTypeCd("Terminal1");
        originalAuthorizationEvent.setTransactionDetailAvailableTypeCd("DetailType1");
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalCapabilityCd("Capability1");
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalEntryCd("Entry1");
        originalAuthorizationEvent.setMailTelephoneOrderTransactionCd("MailOrder1");
        originalAuthorizationEvent.setChargeBackRightsIndicatorCd("ChargeBack1");
        originalAuthorizationEvent.setPrepaidCardIndicatorCd("PrepaidCard1");

        int expectedHashCode = 1;
        expectedHashCode = 31 * expectedHashCode + "Terminal1".hashCode();
        expectedHashCode = 31 * expectedHashCode + "DetailType1".hashCode();
        expectedHashCode = 31 * expectedHashCode + "Capability1".hashCode();
        expectedHashCode = 31 * expectedHashCode + "Entry1".hashCode();
        expectedHashCode = 31 * expectedHashCode + "MailOrder1".hashCode();
        expectedHashCode = 31 * expectedHashCode + "ChargeBack1".hashCode();
        expectedHashCode = 31 * expectedHashCode + "PrepaidCard1".hashCode();

        assertEquals(expectedHashCode, originalAuthorizationEvent.hashCode());
    }

    @Test
    void testEquals() {
        OriginalAuthorizationEvent anotherEvent = new OriginalAuthorizationEvent();
        originalAuthorizationEvent.setTerminalChannelTypeCd("Terminal1");
        originalAuthorizationEvent.setTransactionDetailAvailableTypeCd("DetailType1");
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalCapabilityCd("Capability1");
        originalAuthorizationEvent.setMerchantPointOfServiceTerminalEntryCd("Entry1");
        originalAuthorizationEvent.setMailTelephoneOrderTransactionCd("MailOrder1");
        originalAuthorizationEvent.setChargeBackRightsIndicatorCd("ChargeBack1");
        originalAuthorizationEvent.setPrepaidCardIndicatorCd("PrepaidCard1");

        anotherEvent.setTerminalChannelTypeCd("Terminal1");
        anotherEvent.setTransactionDetailAvailableTypeCd("DetailType1");
        anotherEvent.setMerchantPointOfServiceTerminalCapabilityCd("Capability1");
        anotherEvent.setMerchantPointOfServiceTerminalEntryCd("Entry1");
        anotherEvent.setMailTelephoneOrderTransactionCd("MailOrder1");
        anotherEvent.setChargeBackRightsIndicatorCd("ChargeBack1");
        anotherEvent.setPrepaidCardIndicatorCd("PrepaidCard1");

        assertTrue(originalAuthorizationEvent.equals(anotherEvent));
    }
}
