import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.math.BigDecimal;

class FromCccyamtTest {

    private FromCccyamt fromCccyamt;

    @BeforeEach
    void setUp() {
        fromCccyamt = new FromCccyamt();
    }

    @Test
    void testGetAndSetAmount() {
        BigDecimal amount = new BigDecimal("100.00");
        fromCccyamt.setAmount(amount);
        assertEquals(amount, fromCccyamt.getAmount());
    }

    @Test
    void testGetAndSetCurrencyCd() {
        String currencyCd = "USD";
        fromCccyamt.setCurrencyCd(currencyCd);
        assertEquals(currencyCd, fromCccyamt.getCurrencyCd());
    }

    @Test
    void testGetAndSetTsysExtension() {
        TsysExtensionCurrencyNumericCd tsysExtension = new TsysExtensionCurrencyNumericCd();
        fromCccyamt.setTsysExtension(tsysExtension);
        assertEquals(tsysExtension, fromCccyamt.getTsysExtension());
    }

    @Test
    void testToString() {
        BigDecimal amount = new BigDecimal("100.00");
        String currencyCd = "USD";
        TsysExtensionCurrencyNumericCd tsysExtension = new TsysExtensionCurrencyNumericCd();

        fromCccyamt.setAmount(amount);
        fromCccyamt.setCurrencyCd(currencyCd);
        fromCccyamt.setTsysExtension(tsysExtension);

        String expectedString = "com.td.api.mbcca.response.account.FromCccyamt@" + 
                Integer.toHexString(System.identityHashCode(fromCccyamt)) + 
                "[amount=" + amount + 
                ",currencyCd=USD,tsysExtension=" + tsysExtension + "]";
        assertEquals(expectedString, fromCccyamt.toString());
    }

    @Test
    void testHashCode() {
        BigDecimal amount = new BigDecimal("100.00");
        String currencyCd = "USD";
        TsysExtensionCurrencyNumericCd tsysExtension = new TsysExtensionCurrencyNumericCd();

        fromCccyamt.setAmount(amount);
        fromCccyamt.setCurrencyCd(currencyCd);
        fromCccyamt.setTsysExtension(tsysExtension);

        FromCccyamt anotherFromCccyamt = new FromCccyamt();
        anotherFromCccyamt.setAmount(amount);
        anotherFromCccyamt.setCurrencyCd(currencyCd);
        anotherFromCccyamt.setTsysExtension(tsysExtension);

        assertEquals(fromCccyamt.hashCode(), anotherFromCccyamt.hashCode());
    }

    @Test
    void testEquals() {
        BigDecimal amount = new BigDecimal("100.00");
        String currencyCd = "USD";
        TsysExtensionCurrencyNumericCd tsysExtension = new TsysExtensionCurrencyNumericCd();

        fromCccyamt.setAmount(amount);
        fromCccyamt.setCurrencyCd(currencyCd);
        fromCccyamt.setTsysExtension(tsysExtension);

        FromCccyamt anotherFromCccyamt = new FromCccyamt();
        anotherFromCccyamt.setAmount(amount);
        anotherFromCccyamt.setCurrencyCd(currencyCd);
        anotherFromCccyamt.setTsysExtension(tsysExtension);

        assertTrue(fromCccyamt.equals(anotherFromCccyamt));

        anotherFromCccyamt.setCurrencyCd("EUR");
        assertFalse(fromCccyamt.equals(anotherFromCccyamt));
    }
}
