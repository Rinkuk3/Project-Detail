package com.td.api.mbcca.response.account;

import com.td.api.mbcca.shared.Cccyamt;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class TermBalanceTest {

    private TermBalance termBalance;

    @BeforeEach
    void setUp() {
        termBalance = new TermBalance();
    }

    @Test
    void testGetAndSetTermBalanceCd() {
        String termBalanceCd = "CD12345";
        termBalance.setTermBalanceCd(termBalanceCd);
        assertEquals(termBalanceCd, termBalance.getTermBalanceCd());
    }

    @Test
    void testGetAndSetAverageDailyBalanceCccyamt() {
        Cccyamt averageDailyBalance = new Cccyamt();
        termBalance.setAverageDailyBalanceCccyamt(averageDailyBalance);
        assertEquals(averageDailyBalance, termBalance.getAverageDailyBalanceCccyamt());
    }

    @Test
    void testGetAndSetOutstandingFinanceChargeCccyamt() {
        Cccyamt outstandingFinanceCharge = new Cccyamt();
        termBalance.setOutstandingFinanceChargeCccyamt(outstandingFinanceCharge);
        assertEquals(outstandingFinanceCharge, termBalance.getOutstandingFinanceChargeCccyamt());
    }

    @Test
    void testGetAndSetFinanceChargeMethodTypeCd() {
        String financeChargeMethodTypeCd = "Method123";
        termBalance.setFinanceChargeMethodTypeCd(financeChargeMethodTypeCd);
        assertEquals(financeChargeMethodTypeCd, termBalance.getFinanceChargeMethodTypeCd());
    }

    @Test
    void testGetAndSetBillingInfo() {
        List<BillingInfo> billingInfoList = new ArrayList<>();
        BillingInfo billingInfo = new BillingInfo();
        billingInfoList.add(billingInfo);
        termBalance.setBillingInfo(billingInfoList);
        assertEquals(billingInfoList, termBalance.getBillingInfo());
    }

    @Test
    void testToString() {
        String expectedString = "com.td.api.mbcca.response.account.TermBalance@" + Integer.toHexString(termBalance.hashCode()) + "[termBalanceCd=<null>,averageDailyBalanceCccyamt=<null>,outstandingFinanceChargeCccyamt=<null>,financeChargeMethodTypeCd=<null>,billingInfo=<null>]";
        assertTrue(termBalance.toString().contains("TermBalance"));
    }

    @Test
    void testHashCode() {
        int initialHashCode = termBalance.hashCode();
        assertNotNull(initialHashCode);
    }

    @Test
    void testEquals() {
        TermBalance termBalance1 = new TermBalance();
        termBalance1.setTermBalanceCd("CD12345");

        TermBalance termBalance2 = new TermBalance();
        termBalance2.setTermBalanceCd("CD12345");

        assertTrue(termBalance1.equals(termBalance2));

        termBalance2.setTermBalanceCd("CD67890");
        assertFalse(termBalance1.equals(termBalance2));
    }

    @Test
    void testNotEqualsDifferentObject() {
        assertFalse(termBalance.equals(new Object()));
    }

    @Test
    void testEqualsNull() {
        assertFalse(termBalance.equals(null));
    }

    @Test
    void testGetBillingInfoDefault() {
        List<BillingInfo> billingInfo = termBalance.getBillingInfo();
        assertNotNull(billingInfo);
        assertTrue(billingInfo.isEmpty());
    }
}
