package com.td.api.mbcca.response.account;

import static org.junit.Assert.*;
import java.math.BigDecimal;
import org.junit.Before;
import org.junit.Test;

public class AnnualFeeInfoTest {

    private AnnualFeeInfo annualFeeInfo;

    @Before
    public void setUp() {
        annualFeeInfo = new AnnualFeeInfo();
    }

    @Test
    public void testSetGetLastAnnualMembershipFeeAmt() {
        BigDecimal feeAmount = new BigDecimal("99.99");
        annualFeeInfo.setLastAnnualMembershipFeeAmt(feeAmount);
        assertEquals(feeAmount, annualFeeInfo.getLastAnnualMembershipFeeAmt());
    }

    @Test
    public void testSetGetLastAnnualMembershipFeeDt() {
        String feeDate = "2025-03-03";
        annualFeeInfo.setLastAnnualMembershipFeeDt(feeDate);
        assertEquals(feeDate, annualFeeInfo.getLastAnnualMembershipFeeDt());
    }

    @Test
    public void testToString() {
        annualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("99.99"));
        annualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-03");

        String expected = "com.td.api.mbcca.response.account.AnnualFeeInfo@" + Integer.toHexString(System.identityHashCode(annualFeeInfo)) + "[lastAnnualMembershipFeeAmt=99.99,lastAnnualMembershipFeeDt=2025-03-03]";
        assertEquals(expected, annualFeeInfo.toString());
    }

    @Test
    public void testHashCode() {
        annualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("99.99"));
        annualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-03");

        int expectedHashCode = (31 * (31 + "2025-03-03".hashCode()) + "99.99".hashCode());
        assertEquals(expectedHashCode, annualFeeInfo.hashCode());
    }

    @Test
    public void testEquals_SameObject() {
        annualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("99.99"));
        annualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-03");

        assertTrue(annualFeeInfo.equals(annualFeeInfo));
    }

    @Test
    public void testEquals_DifferentClass() {
        assertFalse(annualFeeInfo.equals("Some other class"));
    }

    @Test
    public void testEquals_NullObject() {
        assertFalse(annualFeeInfo.equals(null));
    }

    @Test
    public void testEquals_DifferentValues() {
        AnnualFeeInfo anotherAnnualFeeInfo = new AnnualFeeInfo();
        anotherAnnualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("100.00"));
        anotherAnnualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-04");

        annualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("99.99"));
        annualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-03");

        assertFalse(annualFeeInfo.equals(anotherAnnualFeeInfo));
    }

    @Test
    public void testEquals_SameValues() {
        AnnualFeeInfo anotherAnnualFeeInfo = new AnnualFeeInfo();
        anotherAnnualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("99.99"));
        anotherAnnualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-03");

        annualFeeInfo.setLastAnnualMembershipFeeAmt(new BigDecimal("99.99"));
        annualFeeInfo.setLastAnnualMembershipFeeDt("2025-03-03");

        assertTrue(annualFeeInfo.equals(anotherAnnualFeeInfo));
    }
}
