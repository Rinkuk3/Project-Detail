import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import com.td.api.mbcca.response.account.OriginalAuthorizationEvent;

public class VisaTest {

    private Visa visa;

    @BeforeEach
    void setUp() {
        visa = new Visa();
    }

    @Test
    void testGettersAndSetters() {
        visa.setInterchangeFeeFeatureGroupId("123");
        assertEquals("123", visa.getInterchangeFeeFeatureGroupId());

        visa.setMailTelephoneOrderTransactionCd("MTOTC");
        assertEquals("MTOTC", visa.getMailTelephoneOrderTransactionCd());

        visa.setFirstSpecialConditionCd("FSC");
        assertEquals("FSC", visa.getFirstSpecialConditionCd());

        visa.setSecondSpecialConditionCd("SSC");
        assertEquals("SSC", visa.getSecondSpecialConditionCd());

        visa.setReimbursementFeeCd("RFC");
        assertEquals("RFC", visa.getReimbursementFeeCd());

        visa.setMultipleClearingTransactionsReferenceNum("MCTR");
        assertEquals("MCTR", visa.getMultipleClearingTransactionsReferenceNum());

        OriginalAuthorizationEvent event = new OriginalAuthorizationEvent();
        visa.setOriginalAuthorizationEvent(event);
        assertEquals(event, visa.getOriginalAuthorizationEvent());

        visa.setCustomPaymentServiceInterchangeCategoryCd("CPSIC");
        assertEquals("CPSIC", visa.getCustomPaymentServiceInterchangeCategoryCd());

        visa.setChipConditionInd(true);
        assertTrue(visa.getChipConditionInd());

        visa.setChargeBackRightsTypeCd("CBRTC");
        assertEquals("CBRTC", visa.getChargeBackRightsTypeCd());

        visa.setAdjustmentMadeInd(false);
        assertFalse(visa.getAdjustmentMadeInd());
    }

    @Test
    void testToString() {
        String toStringResult = visa.toString();
        assertNotNull(toStringResult);
        assertTrue(toStringResult.contains("Visa"));
    }

    @Test
    void testEqualsAndHashCode() {
        Visa visa1 = new Visa();
        Visa visa2 = new Visa();
        assertEquals(visa1, visa2);
        assertEquals(visa1.hashCode(), visa2.hashCode());

        visa1.setInterchangeFeeFeatureGroupId("123");
        assertNotEquals(visa1, visa2);
    }
}
