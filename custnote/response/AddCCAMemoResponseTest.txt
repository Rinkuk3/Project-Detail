package com.td.api.mbcca.custnote.response;

import com.td.api.mbcca.shared.Status;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AddCCAMemoResponseTest {

    @Test
    void testGettersAndSetters() {
        AddCCAMemoResponse response = new AddCCAMemoResponse();
        
        // Test set and get status
        Status status = new Status();
        status.setCode("SUCCESS");
        status.setMessage("Operation completed successfully.");
        
        response.setStatus(status);
        assertEquals(status, response.getStatus());

        // Test set status to null
        response.setStatus(null);
        assertNull(response.getStatus());
    }

    @Test
    void testToString() {
        AddCCAMemoResponse response = new AddCCAMemoResponse();
        
        Status status = new Status();
        status.setCode("SUCCESS");
        status.setMessage("Operation completed successfully.");
        
        response.setStatus(status);

        String expectedString = "com.td.api.mbcca.custnote.response.AddCCAMemoResponse@" + 
            Integer.toHexString(response.hashCode()) + "[status=" + status + "]";
        
        assertEquals(expectedString, response.toString());
    }

    @Test
    void testHashCode() {
        AddCCAMemoResponse response1 = new AddCCAMemoResponse();
        AddCCAMemoResponse response2 = new AddCCAMemoResponse();
        
        Status status = new Status();
        status.setCode("SUCCESS");
        status.setMessage("Operation completed successfully.");
        
        response1.setStatus(status);
        response2.setStatus(status);

        assertEquals(response1.hashCode(), response2.hashCode());
    }

    @Test
    void testEquals() {
        AddCCAMemoResponse response1 = new AddCCAMemoResponse();
        AddCCAMemoResponse response2 = new AddCCAMemoResponse();
        AddCCAMemoResponse response3 = new AddCCAMemoResponse();
        
        Status status1 = new Status();
        status1.setCode("SUCCESS");
        status1.setMessage("Operation completed successfully.");
        
        Status status2 = new Status();
        status2.setCode("FAILURE");
        status2.setMessage("Operation failed.");

        response1.setStatus(status1);
        response2.setStatus(status1);
        response3.setStatus(status2);

        // Equal comparison
        assertTrue(response1.equals(response2));

        // Different status
        assertFalse(response1.equals(response3));

        // Comparing with null
        assertFalse(response1.equals(null));

        // Comparing with different class type
        assertFalse(response1.equals(new Object()));
    }

    @Test
    void testEquals_SameObject() {
        AddCCAMemoResponse response = new AddCCAMemoResponse();
        
        Status status = new Status();
        status.setCode("SUCCESS");
        status.setMessage("Operation completed successfully.");
        
        response.setStatus(status);

        assertTrue(response.equals(response));
    }
}
