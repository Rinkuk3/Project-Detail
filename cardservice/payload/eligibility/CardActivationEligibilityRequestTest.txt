package com.td.mbna.msec.midtier.cardservice.payload.eligibility;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CardActivationEligibilityRequestTest {

    @Test
    void testSettersAndGetters() {
        CardActivationEligibilityRequest request = new CardActivationEligibilityRequest();
        RequestPayload payload = new RequestPayload();
        payload.setSomeField("someValue");

        // Set payload using setter
        request.setRequestPayload(payload);

        // Assert getter returns the payload set
        assertEquals(payload, request.getRequestPayload());
    }

    @Test
    void testToString() {
        CardActivationEligibilityRequest request = new CardActivationEligibilityRequest();
        RequestPayload payload = new RequestPayload();
        payload.setSomeField("someValue");

        request.setRequestPayload(payload);

        String toStringResult = request.toString();
        assertNotNull(toStringResult);
        assertTrue(toStringResult.contains("requestPayload"));
        assertTrue(toStringResult.contains(payload.toString()));
    }

    @Test
    void testEquals_SameFields() {
        RequestPayload payload = new RequestPayload();
        payload.setSomeField("someValue");

        CardActivationEligibilityRequest request1 = new CardActivationEligibilityRequest();
        request1.setRequestPayload(payload);

        CardActivationEligibilityRequest request2 = new CardActivationEligibilityRequest();
        request2.setRequestPayload(payload);

        assertTrue(request1.equals(request2));
    }

    @Test
    void testEquals_DifferentPayload() {
        RequestPayload payload1 = new RequestPayload();
        payload1.setSomeField("value1");

        RequestPayload payload2 = new RequestPayload();
        payload2.setSomeField("value2");

        CardActivationEligibilityRequest request1 = new CardActivationEligibilityRequest();
        request1.setRequestPayload(payload1);

        CardActivationEligibilityRequest request2 = new CardActivationEligibilityRequest();
        request2.setRequestPayload(payload2);

        assertFalse(request1.equals(request2));
    }

    @Test
    void testEquals_NullPayloads() {
        CardActivationEligibilityRequest request1 = new CardActivationEligibilityRequest();
        CardActivationEligibilityRequest request2 = new CardActivationEligibilityRequest();

        assertTrue(request1.equals(request2));
    }

    @Test
    void testHashCode_SamePayload() {
        RequestPayload payload = new RequestPayload();
        payload.setSomeField("someValue");

        CardActivationEligibilityRequest request1 = new CardActivationEligibilityRequest();
        request1.setRequestPayload(payload);

        CardActivationEligibilityRequest request2 = new CardActivationEligibilityRequest();
        request2.setRequestPayload(payload);

        assertEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testHashCode_NullPayload() {
        CardActivationEligibilityRequest request1 = new CardActivationEligibilityRequest();
        request1.setRequestPayload(null);

        CardActivationEligibilityRequest request2 = new CardActivationEligibilityRequest();
        request2.setRequestPayload(null);

        assertEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testHashCode_DifferentPayload() {
        RequestPayload payload1 = new RequestPayload();
        payload1.setSomeField("value1");

        RequestPayload payload2 = new RequestPayload();
        payload2.setSomeField("value2");

        CardActivationEligibilityRequest request1 = new CardActivationEligibilityRequest();
        request1.setRequestPayload(payload1);

        CardActivationEligibilityRequest request2 = new CardActivationEligibilityRequest();
        request2.setRequestPayload(payload2);

        assertNotEquals(request1.hashCode(), request2.hashCode());
    }
}
