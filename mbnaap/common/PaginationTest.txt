package com.td.api.mbnaap.common;

import org.junit.jupiter.api.Test;

import java.net.URI;

import static org.junit.jupiter.api.Assertions.*;

class PaginationTest {

    @Test
    void testGettersAndSetters() throws Exception {
        Pagination pagination = new Pagination();
        
        pagination.setPage(1);
        pagination.setPageSize(20);
        pagination.setTotalPageCnt(5);
        pagination.setMatchedCnt(100);
        pagination.setSentCnt(80);
        pagination.setNextUri(new URI("http://example.com/next"));
        pagination.setPrevUri(new URI("http://example.com/prev"));
        pagination.setFirstUri(new URI("http://example.com/first"));
        pagination.setLastUri(new URI("http://example.com/last"));
        
        assertEquals(1, pagination.getPage());
        assertEquals(20, pagination.getPageSize());
        assertEquals(5, pagination.getTotalPageCnt());
        assertEquals(100, pagination.getMatchedCnt());
        assertEquals(80, pagination.getSentCnt());
        assertEquals(new URI("http://example.com/next"), pagination.getNextUri());
        assertEquals(new URI("http://example.com/prev"), pagination.getPrevUri());
        assertEquals(new URI("http://example.com/first"), pagination.getFirstUri());
        assertEquals(new URI("http://example.com/last"), pagination.getLastUri());
    }

    @Test
    void testToString() throws Exception {
        Pagination pagination = new Pagination();
        pagination.setPage(1);
        pagination.setPageSize(20);
        pagination.setTotalPageCnt(5);
        pagination.setMatchedCnt(100);
        pagination.setSentCnt(80);
        pagination.setNextUri(new URI("http://example.com/next"));
        pagination.setPrevUri(new URI("http://example.com/prev"));
        pagination.setFirstUri(new URI("http://example.com/first"));
        pagination.setLastUri(new URI("http://example.com/last"));
        
        String expected = "Pagination(page=1, pageSize=20, totalPageCnt=5, matchedCnt=100, sentCnt=80, nextUri=http://example.com/next, prevUri=http://example.com/prev, firstUri=http://example.com/first, lastUri=http://example.com/last)";
        assertEquals(expected, pagination.toString());
    }

    @Test
    void testEqualsAndHashCode() throws Exception {
        Pagination pagination1 = new Pagination();
        pagination1.setPage(1);
        pagination1.setPageSize(20);
        pagination1.setTotalPageCnt(5);
        pagination1.setMatchedCnt(100);
        pagination1.setSentCnt(80);
        pagination1.setNextUri(new URI("http://example.com/next"));
        pagination1.setPrevUri(new URI("http://example.com/prev"));
        pagination1.setFirstUri(new URI("http://example.com/first"));
        pagination1.setLastUri(new URI("http://example.com/last"));

        Pagination pagination2 = new Pagination();
        pagination2.setPage(1);
        pagination2.setPageSize(20);
        pagination2.setTotalPageCnt(5);
        pagination2.setMatchedCnt(100);
        pagination2.setSentCnt(80);
        pagination2.setNextUri(new URI("http://example.com/next"));
        pagination2.setPrevUri(new URI("http://example.com/prev"));
        pagination2.setFirstUri(new URI("http://example.com/first"));
        pagination2.setLastUri(new URI("http://example.com/last"));

        assertTrue(pagination1.equals(pagination2));
        assertEquals(pagination1.hashCode(), pagination2.hashCode());

        pagination2.setPage(2); // Modify one field
        assertFalse(pagination1.equals(pagination2));
    }
}
