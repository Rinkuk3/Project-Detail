package com.td.mbna.msec.midtier.disclosure.payload.getdisclosure;

import com.td.mbna.msec.midtier.types.common.DisclosureInfoType;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ResponsePayloadTest {

    @Test
    public void testGetContent() {
        ResponsePayload responsePayload = new ResponsePayload();
        responsePayload.setContent("Test Content");
        assertEquals("Test Content", responsePayload.getContent());
    }

    @Test
    public void testSetContent() {
        ResponsePayload responsePayload = new ResponsePayload();
        responsePayload.setContent("Test Content");
        assertEquals("Test Content", responsePayload.getContent());
    }

    @Test
    public void testGetDisclosureInfo() {
        ResponsePayload responsePayload = new ResponsePayload();
        DisclosureInfoType disclosureInfo = new DisclosureInfoType();
        responsePayload.setDisclosureInfo(disclosureInfo);
        assertEquals(disclosureInfo, responsePayload.getDisclosureInfo());
    }

    @Test
    public void testSetDisclosureInfo() {
        ResponsePayload responsePayload = new ResponsePayload();
        DisclosureInfoType disclosureInfo = new DisclosureInfoType();
        responsePayload.setDisclosureInfo(disclosureInfo);
        assertEquals(disclosureInfo, responsePayload.getDisclosureInfo());
    }

    @Test
    public void testToString() {
        ResponsePayload responsePayload = new ResponsePayload();
        responsePayload.setContent("Test Content");
        DisclosureInfoType disclosureInfo = new DisclosureInfoType();
        responsePayload.setDisclosureInfo(disclosureInfo);

        String result = responsePayload.toString();
        assertNotNull(result);
        assertTrue(result.contains("content"));
        assertTrue(result.contains("disclosureInfo"));
    }

    @Test
    public void testHashCode() {
        ResponsePayload responsePayload = new ResponsePayload();
        int hashCode = responsePayload.hashCode();
        assertNotEquals(0, hashCode);
    }

    @Test
    public void testEquals_SameObject() {
        ResponsePayload responsePayload = new ResponsePayload();
        assertTrue(responsePayload.equals(responsePayload));
    }

    @Test
    public void testEquals_Null() {
        ResponsePayload responsePayload = new ResponsePayload();
        assertFalse(responsePayload.equals(null));
    }

    @Test
    public void testEquals_DifferentClass() {
        ResponsePayload responsePayload = new ResponsePayload();
        assertFalse(responsePayload.equals(new Object()));
    }

    @Test
    public void testEquals_SameValues() {
        ResponsePayload responsePayload1 = new ResponsePayload();
        ResponsePayload responsePayload2 = new ResponsePayload();
        responsePayload1.setContent("Test Content");
        responsePayload2.setContent("Test Content");

        DisclosureInfoType disclosureInfo = new DisclosureInfoType();
        responsePayload1.setDisclosureInfo(disclosureInfo);
        responsePayload2.setDisclosureInfo(disclosureInfo);

        assertTrue(responsePayload1.equals(responsePayload2));
    }

    @Test
    public void testEquals_DifferentValues() {
        ResponsePayload responsePayload1 = new ResponsePayload();
        ResponsePayload responsePayload2 = new ResponsePayload();
        responsePayload1.setContent("Test Content");
        responsePayload2.setContent("Different Content");

        DisclosureInfoType disclosureInfo = new DisclosureInfoType();
        responsePayload1.setDisclosureInfo(disclosureInfo);
        responsePayload2.setDisclosureInfo(disclosureInfo);

        assertFalse(responsePayload1.equals(responsePayload2));
    }

    @Test
    public void testEquals_DifferentDisclosureInfo() {
        ResponsePayload responsePayload1 = new ResponsePayload();
        ResponsePayload responsePayload2 = new ResponsePayload();
        responsePayload1.setContent("Test Content");
        responsePayload2.setContent("Test Content");

        DisclosureInfoType disclosureInfo1 = new DisclosureInfoType();
        DisclosureInfoType disclosureInfo2 = new DisclosureInfoType();
        responsePayload1.setDisclosureInfo(disclosureInfo1);
        responsePayload2.setDisclosureInfo(disclosureInfo2);

        assertFalse(responsePayload1.equals(responsePayload2));
    }
}
