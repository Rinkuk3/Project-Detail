package com.td.api.ofm.request;

import com.td.api.ofm.common.TCCAEVAPIProductChangeEventAddInfo;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TSvcAddCreditCardAgreementProductChangeEventRqTest {

    private TSvcAddCreditCardAgreementProductChangeEventRq request;
    private TCCAEVAPIProductChangeEventAddInfo productChangeEvent;

    @BeforeEach
    public void setUp() {
        request = new TSvcAddCreditCardAgreementProductChangeEventRq();
        productChangeEvent = new TCCAEVAPIProductChangeEventAddInfo(); // Assuming you can mock or create a default object here
    }

    @Test
    public void testGetProductChangeEvent() {
        request.setProductChangeEvent(productChangeEvent);
        assertEquals(productChangeEvent, request.getProductChangeEvent());
    }

    @Test
    public void testSetProductChangeEvent() {
        request.setProductChangeEvent(productChangeEvent);
        assertNotNull(request.getProductChangeEvent());
        assertEquals(productChangeEvent, request.getProductChangeEvent());
    }

    @Test
    public void testToString() {
        request.setProductChangeEvent(productChangeEvent);
        String expectedString = TSvcAddCreditCardAgreementProductChangeEventRq.class.getName() + '@' + Integer.toHexString(System.identityHashCode(request)) + "[productChangeEvent=" + productChangeEvent + "]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testHashCode() {
        TSvcAddCreditCardAgreementProductChangeEventRq anotherRequest = new TSvcAddCreditCardAgreementProductChangeEventRq();
        request.setProductChangeEvent(productChangeEvent);
        anotherRequest.setProductChangeEvent(productChangeEvent);

        assertEquals(request.hashCode(), anotherRequest.hashCode());
    }

    @Test
    public void testEquals_SameObject() {
        assertTrue(request.equals(request));
    }

    @Test
    public void testEquals_DifferentClass() {
        assertFalse(request.equals(new Object()));
    }

    @Test
    public void testEquals_NullObject() {
        assertFalse(request.equals(null));
    }

    @Test
    public void testEquals_DifferentProductChangeEvent() {
        TCCAEVAPIProductChangeEventAddInfo differentProductChangeEvent = new TCCAEVAPIProductChangeEventAddInfo();
        request.setProductChangeEvent(productChangeEvent);
        TSvcAddCreditCardAgreementProductChangeEventRq differentRequest = new TSvcAddCreditCardAgreementProductChangeEventRq();
        differentRequest.setProductChangeEvent(differentProductChangeEvent);

        assertFalse(request.equals(differentRequest));
    }

    @Test
    public void testEquals_SameProductChangeEvent() {
        request.setProductChangeEvent(productChangeEvent);
        TSvcAddCreditCardAgreementProductChangeEventRq sameRequest = new TSvcAddCreditCardAgreementProductChangeEventRq();
        sameRequest.setProductChangeEvent(productChangeEvent);

        assertTrue(request.equals(sameRequest));
    }
}
