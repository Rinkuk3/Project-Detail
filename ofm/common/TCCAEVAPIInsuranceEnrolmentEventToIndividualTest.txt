package com.td.api.ofm.common;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TCCAEVAPIInsuranceEnrolmentEventToIndividualTest {

    private TCCAEVAPIInsuranceEnrolmentEventToIndividual individual;

    @BeforeEach
    public void setUp() {
        individual = new TCCAEVAPIInsuranceEnrolmentEventToIndividual();
    }

    @Test
    public void testGettersAndSetters() {
        individual.setPartyId("12345");

        assertEquals("12345", individual.getPartyId());
    }

    @Test
    public void testToString() {
        individual.setPartyId("12345");

        String expectedString = "com.td.api.ofm.common.TCCAEVAPIInsuranceEnrolmentEventToIndividual@" +
            Integer.toHexString(individual.hashCode()) +
            "[partyId=12345]";

        assertEquals(expectedString, individual.toString());

        individual.setPartyId(null);
        expectedString = "com.td.api.ofm.common.TCCAEVAPIInsuranceEnrolmentEventToIndividual@" +
            Integer.toHexString(individual.hashCode()) +
            "[partyId=<null>]";

        assertEquals(expectedString, individual.toString());
    }

    @Test
    public void testHashCode() {
        individual.setPartyId("12345");
        
        int expectedHashCode = 31 * (1 + (individual.getPartyId() == null ? 0 : individual.getPartyId().hashCode()));
        
        assertEquals(expectedHashCode, individual.hashCode());
    }

    @Test
    public void testEquals() {
        TCCAEVAPIInsuranceEnrolmentEventToIndividual other = new TCCAEVAPIInsuranceEnrolmentEventToIndividual();
        
        individual.setPartyId("12345");
        other.setPartyId("12345");

        assertTrue(individual.equals(other));

        other.setPartyId("67890");
        assertFalse(individual.equals(other));

        other.setPartyId(null);
        assertFalse(individual.equals(other));

        individual.setPartyId(null);
        assertTrue(individual.equals(other));

        assertTrue(individual.equals(individual));
        assertFalse(individual.equals(new Object()));
    }
}
