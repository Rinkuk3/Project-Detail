package com.td.api.ofm.common;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TCCAAPIBalanceSegmentEventDetailTest {

    private TCCAAPIBalanceSegmentEventDetail eventDetail;
    private TCCAAPIBalanceSegmentEventAdjustmentDetail adjustmentDetail;

    @BeforeEach
    public void setUp() {
        eventDetail = new TCCAAPIBalanceSegmentEventDetail();
        adjustmentDetail = new TCCAAPIBalanceSegmentEventAdjustmentDetail();
    }

    @Test
    public void testGettersAndSetters() {
        eventDetail.setEventId("event123");
        eventDetail.setTypeCd("typeA");
        eventDetail.setCardNum("card123");
        eventDetail.setOriginatingUserId("user123");
        eventDetail.setOriginatingUserFunctionCd("functionA");
        eventDetail.setSolicitationChannelTypeCd("web");
        eventDetail.setAccessChannelTypeCd("mobile");

        assertEquals("event123", eventDetail.getEventId());
        assertEquals("typeA", eventDetail.getTypeCd());
        assertEquals("card123", eventDetail.getCardNum());
        assertEquals("user123", eventDetail.getOriginatingUserId());
        assertEquals("functionA", eventDetail.getOriginatingUserFunctionCd());
        assertEquals("web", eventDetail.getSolicitationChannelTypeCd());
        assertEquals("mobile", eventDetail.getAccessChannelTypeCd());
    }

    @Test
    public void testAdjustmentEvent() {
        eventDetail.getAdjustmentEvent().add(adjustmentDetail);
        assertTrue(eventDetail.getAdjustmentEvent().contains(adjustmentDetail));
    }

    @Test
    public void testToString() {
        eventDetail.setEventId("event123");
        eventDetail.setTypeCd("typeA");
        eventDetail.setCardNum("card123");
        eventDetail.setOriginatingUserId("user123");
        eventDetail.setOriginatingUserFunctionCd("functionA");
        eventDetail.setSolicitationChannelTypeCd("web");
        eventDetail.setAccessChannelTypeCd("mobile");
        eventDetail.getAdjustmentEvent().add(adjustmentDetail);

        String expectedString = "com.td.api.ofm.common.TCCAAPIBalanceSegmentEventDetail@" + Integer.toHexString(eventDetail.hashCode()) +
                "[eventId=event123,typeCd=typeA,cardNum=card123,originatingUserId=user123,originatingUserFunctionCd=functionA,solicitationChannelTypeCd=web,accessChannelTypeCd=mobile,adjustmentEvent=" + eventDetail.getAdjustmentEvent() + "]";

        assertEquals(expectedString, eventDetail.toString());
    }

    @Test
    public void testHashCode() {
        eventDetail.setEventId("event123");
        eventDetail.setTypeCd("typeA");
        eventDetail.setCardNum("card123");
        eventDetail.setOriginatingUserId("user123");
        eventDetail.setOriginatingUserFunctionCd("functionA");
        eventDetail.setSolicitationChannelTypeCd("web");
        eventDetail.setAccessChannelTypeCd("mobile");
        eventDetail.getAdjustmentEvent().add(adjustmentDetail);

        int expectedHashCode = 31 * (31 * (31 * (31 * (31 * (31 * (31 * "event123".hashCode() + "typeA".hashCode()) +
                "card123".hashCode()) + "user123".hashCode()) + "functionA".hashCode()) +
                "web".hashCode()) + "mobile".hashCode()) + adjustmentDetail.hashCode();

        assertEquals(expectedHashCode, eventDetail.hashCode());
    }

    @Test
    public void testEquals() {
        TCCAAPIBalanceSegmentEventDetail eventDetail2 = new TCCAAPIBalanceSegmentEventDetail();
        eventDetail.setEventId("event123");
        eventDetail.setTypeCd("typeA");
        eventDetail.setCardNum("card123");
        eventDetail.setOriginatingUserId("user123");
        eventDetail.setOriginatingUserFunctionCd("functionA");
        eventDetail.setSolicitationChannelTypeCd("web");
        eventDetail.setAccessChannelTypeCd("mobile");
        eventDetail.getAdjustmentEvent().add(adjustmentDetail);

        eventDetail2.setEventId("event123");
        eventDetail2.setTypeCd("typeA");
        eventDetail2.setCardNum("card123");
        eventDetail2.setOriginatingUserId("user123");
        eventDetail2.setOriginatingUserFunctionCd("functionA");
        eventDetail2.setSolicitationChannelTypeCd("web");
        eventDetail2.setAccessChannelTypeCd("mobile");
        eventDetail2.getAdjustmentEvent().add(adjustmentDetail);

        assertTrue(eventDetail.equals(eventDetail2));

        eventDetail2.setAccessChannelTypeCd("desktop");
        assertFalse(eventDetail.equals(eventDetail2));
    }

}
