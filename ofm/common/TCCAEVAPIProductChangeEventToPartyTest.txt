package com.td.api.ofm.common;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TCCAEVAPIProductChangeEventToPartyTest {

    private TCCAEVAPIProductChangeEventToParty productChangeEventToParty;

    @BeforeEach
    public void setUp() {
        productChangeEventToParty = new TCCAEVAPIProductChangeEventToParty();
    }

    @Test
    public void testGettersAndSetters() {
        productChangeEventToParty.setLanguageTypeCd("EN");
        productChangeEventToParty.setIdentificationMembershipNum("123456");

        assertEquals("EN", productChangeEventToParty.getLanguageTypeCd());
        assertEquals("123456", productChangeEventToParty.getIdentificationMembershipNum());
    }

    @Test
    public void testToString() {
        productChangeEventToParty.setLanguageTypeCd("EN");
        productChangeEventToParty.setIdentificationMembershipNum("123456");

        String expectedString = "com.td.api.ofm.common.TCCAEVAPIProductChangeEventToParty@" +
            Integer.toHexString(productChangeEventToParty.hashCode()) +
            "[languageTypeCd=EN,identificationMembershipNum=123456]";

        assertEquals(expectedString, productChangeEventToParty.toString());

        productChangeEventToParty.setLanguageTypeCd(null);
        productChangeEventToParty.setIdentificationMembershipNum(null);

        expectedString = "com.td.api.ofm.common.TCCAEVAPIProductChangeEventToParty@" +
            Integer.toHexString(productChangeEventToParty.hashCode()) +
            "[languageTypeCd=<null>,identificationMembershipNum=<null>]";

        assertEquals(expectedString, productChangeEventToParty.toString());
    }

    @Test
    public void testHashCode() {
        productChangeEventToParty.setLanguageTypeCd("EN");
        productChangeEventToParty.setIdentificationMembershipNum("123456");

        int expectedHashCode = 1;
        expectedHashCode = 31 * expectedHashCode + (productChangeEventToParty.getLanguageTypeCd() != null ? productChangeEventToParty.getLanguageTypeCd().hashCode() : 0);
        expectedHashCode = 31 * expectedHashCode + (productChangeEventToParty.getIdentificationMembershipNum() != null ? productChangeEventToParty.getIdentificationMembershipNum().hashCode() : 0);

        assertEquals(expectedHashCode, productChangeEventToParty.hashCode());
    }

    @Test
    public void testEquals() {
        TCCAEVAPIProductChangeEventToParty other = new TCCAEVAPIProductChangeEventToParty();
        productChangeEventToParty.setLanguageTypeCd("EN");
        productChangeEventToParty.setIdentificationMembershipNum("123456");

        other.setLanguageTypeCd("EN");
        other.setIdentificationMembershipNum("123456");

        assertTrue(productChangeEventToParty.equals(other));

        other.setLanguageTypeCd("FR");
        assertFalse(productChangeEventToParty.equals(other));

        other.setLanguageTypeCd(null);
        assertFalse(productChangeEventToParty.equals(other));

        productChangeEventToParty.setLanguageTypeCd(null);
        assertTrue(productChangeEventToParty.equals(other));

        assertTrue(productChangeEventToParty.equals(productChangeEventToParty));
        assertFalse(productChangeEventToParty.equals(new Object()));
    }
}
