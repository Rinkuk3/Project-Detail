package com.td.api.ofm.common;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TCCAAPIEligibilityReasonTest {

    private TCCAAPIEligibilityReason eligibilityReason;

    @BeforeEach
    public void setUp() {
        eligibilityReason = new TCCAAPIEligibilityReason();
    }

    @Test
    public void testGettersAndSetters() {
        eligibilityReason.setReasonCd("reason123");
        eligibilityReason.setReasonValueCd("value123");
        eligibilityReason.setReasonValueDesc("description123");

        assertEquals("reason123", eligibilityReason.getReasonCd());
        assertEquals("value123", eligibilityReason.getReasonValueCd());
        assertEquals("description123", eligibilityReason.getReasonValueDesc());
    }

    @Test
    public void testToString() {
        eligibilityReason.setReasonCd("reason123");
        eligibilityReason.setReasonValueCd("value123");
        eligibilityReason.setReasonValueDesc("description123");

        String expectedString = "com.td.api.ofm.common.TCCAAPIEligibilityReason@" + Integer.toHexString(eligibilityReason.hashCode()) +
                "[reasonCd=reason123,reasonValueCd=value123,reasonValueDesc=description123]";

        assertEquals(expectedString, eligibilityReason.toString());
    }

    @Test
    public void testHashCode() {
        eligibilityReason.setReasonCd("reason123");
        eligibilityReason.setReasonValueCd("value123");
        eligibilityReason.setReasonValueDesc("description123");

        int expectedHashCode = 31 * (31 * (31 * "description123".hashCode() + "value123".hashCode()) + "reason123".hashCode());

        assertEquals(expectedHashCode, eligibilityReason.hashCode());
    }

    @Test
    public void testEquals() {
        TCCAAPIEligibilityReason eligibilityReason2 = new TCCAAPIEligibilityReason();
        eligibilityReason.setReasonCd("reason123");
        eligibilityReason.setReasonValueCd("value123");
        eligibilityReason.setReasonValueDesc("description123");

        eligibilityReason2.setReasonCd("reason123");
        eligibilityReason2.setReasonValueCd("value123");
        eligibilityReason2.setReasonValueDesc("description123");

        assertTrue(eligibilityReason.equals(eligibilityReason2));

        eligibilityReason2.setReasonValueCd("value456");
        assertFalse(eligibilityReason.equals(eligibilityReason2));

        eligibilityReason2.setReasonValueCd("value123");
        eligibilityReason2.setReasonCd("reason456");
        assertFalse(eligibilityReason.equals(eligibilityReason2));

        eligibilityReason2.setReasonCd("reason123");
        eligibilityReason2.setReasonValueDesc("description456");
        assertFalse(eligibilityReason.equals(eligibilityReason2));
    }
}
