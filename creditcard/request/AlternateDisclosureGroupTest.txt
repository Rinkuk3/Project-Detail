import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AlternateDisclosureGroupTest {

    @Test
    public void testGettersAndSetters() {
        AlternateDisclosureGroup group = new AlternateDisclosureGroup();
        
        // Test setter and getter for groupId
        group.setGroupId("G001");
        assertEquals("G001", group.getGroupId());

        // Test setter and getter for activeInd
        group.setActiveInd(true);
        assertTrue(group.getActiveInd());

        // Test setter and getter for startDateActionCd
        group.setStartDateActionCd("A");
        assertEquals("A", group.getStartDateActionCd());

        // Test setter and getter for startDt
        group.setStartDt("2024-01-01");
        assertEquals("2024-01-01", group.getStartDt());

        // Test setter and getter for endDateActionCd
        group.setEndDateActionCd("B");
        assertEquals("B", group.getEndDateActionCd());

        // Test setter and getter for endDt
        group.setEndDt("2024-12-31");
        assertEquals("2024-12-31", group.getEndDt());

        // Test setter and getter for systemGenerationDateInd
        group.setSystemGenerationDateInd(false);
        assertFalse(group.getSystemGenerationDateInd());
    }

    @Test
    public void testToString() {
        AlternateDisclosureGroup group = new AlternateDisclosureGroup();
        group.setGroupId("G001");
        group.setActiveInd(true);
        group.setStartDateActionCd("A");
        group.setStartDt("2024-01-01");
        group.setEndDateActionCd("B");
        group.setEndDt("2024-12-31");
        group.setSystemGenerationDateInd(false);
        
        String expectedString = "com.td.api.mbcca.creditcard.request.AlternateDisclosureGroup@" + Integer.toHexString(group.hashCode()) + "[groupId=G001,activeInd=true,startDateActionCd=A,startDt=2024-01-01,endDateActionCd=B,endDt=2024-12-31,systemGenerationDateInd=false,]";
        assertEquals(expectedString, group.toString());
    }

    @Test
    public void testHashCodeAndEquals() {
        AlternateDisclosureGroup group1 = new AlternateDisclosureGroup();
        group1.setGroupId("G001");
        group1.setActiveInd(true);
        group1.setStartDateActionCd("A");
        group1.setStartDt("2024-01-01");
        group1.setEndDateActionCd("B");
        group1.setEndDt("2024-12-31");
        group1.setSystemGenerationDateInd(false);

        AlternateDisclosureGroup group2 = new AlternateDisclosureGroup();
        group2.setGroupId("G001");
        group2.setActiveInd(true);
        group2.setStartDateActionCd("A");
        group2.setStartDt("2024-01-01");
        group2.setEndDateActionCd("B");
        group2.setEndDt("2024-12-31");
        group2.setSystemGenerationDateInd(false);

        AlternateDisclosureGroup group3 = new AlternateDisclosureGroup();
        group3.setGroupId("G002");
        group3.setActiveInd(false);
        group3.setStartDateActionCd("C");
        group3.setStartDt("2024-02-01");
        group3.setEndDateActionCd("D");
        group3.setEndDt("2024-11-30");
        group3.setSystemGenerationDateInd(true);

        // Test equality
        assertTrue(group1.equals(group2));
        assertFalse(group1.equals(group3));

        // Test hashCode consistency
        assertEquals(group1.hashCode(), group2.hashCode());
        assertNotEquals(group1.hashCode(), group3.hashCode());
    }
}
