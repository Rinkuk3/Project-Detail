package com.td.mbna.msec.midtier.creditcard.payload.requestcheque;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Objects;

import static org.assertj.core.api.Assertions.assertThat;

public class RequestChequeRequestTest {

    private RequestChequeRequest requestChequeRequest;
    private RequestPayload mockRequestPayload;

    @BeforeEach
    void setUp() {
        // Initialize the test object and mock payload
        requestChequeRequest = new RequestChequeRequest();
        mockRequestPayload = new RequestPayload();
        mockRequestPayload.setRequestType("test");
    }

    @Test
    void testSetAndGetRequestPayload() {
        requestChequeRequest.setRequestPayload(mockRequestPayload);
        assertThat(requestChequeRequest.getRequestPayload()).isEqualTo(mockRequestPayload);
    }

    @Test
    void testToString() {
        requestChequeRequest.setRequestPayload(mockRequestPayload);

        String expectedString = "com.td.mbna.msec.midtier.creditcard.payload.requestcheque.RequestChequeRequest@" +
                Integer.toHexString(System.identityHashCode(requestChequeRequest)) +
                "[sessionInfo=<null>,custId=<null>,aliasCustId=<null>,acctNum=<null>,acctType=<null>,languagePref=<null>,auditInfo=<null>,isPrimaryUser=<null>,reserved1=<null>,custInterface=<null>,requestPayload=" +
                mockRequestPayload + "]";

        assertThat(requestChequeRequest.toString()).isEqualTo(expectedString);
    }

    @Test
    void testHashCode() {
        requestChequeRequest.setRequestPayload(mockRequestPayload);
        int hashCode = requestChequeRequest.hashCode();
        assertThat(hashCode).isNotZero();
    }

    @Test
    void testEquals() {
        RequestChequeRequest anotherRequestChequeRequest = new RequestChequeRequest();
        anotherRequestChequeRequest.setRequestPayload(mockRequestPayload);

        assertThat(requestChequeRequest).isEqualTo(anotherRequestChequeRequest);

        anotherRequestChequeRequest.setAliasCustId("alias123");
        assertThat(requestChequeRequest).isNotEqualTo(anotherRequestChequeRequest);
    }

    @Test
    void testEqualsWithNull() {
        RequestChequeRequest anotherRequestChequeRequest = null;
        assertThat(requestChequeRequest).isNotEqualTo(anotherRequestChequeRequest);
    }

    @Test
    void testSetAndGetSessionInfo() {
        requestChequeRequest.setSessionInfo("session_1");
        assertThat(requestChequeRequest.getSessionInfo()).isEqualTo("session_1");
    }

    @Test
    void testSetAndGetAliasCustId() {
        requestChequeRequest.setAliasCustId("alias123");
        assertThat(requestChequeRequest.getAliasCustId()).isEqualTo("alias123");
    }

    @Test
    void testSetAndGetAcctType() {
        requestChequeRequest.setAcctType("TypeA");
        assertThat(requestChequeRequest.getAcctType()).isEqualTo("TypeA");
    }

    @Test
    void testSetAndGetAcctNum() {
        requestChequeRequest.setAcctNum("account_123");
        assertThat(requestChequeRequest.getAcctNum()).isEqualTo("account_123");
    }

    @Test
    void testSetAndGetLanguagePref() {
        requestChequeRequest.setLanguagePref("EN");
        assertThat(requestChequeRequest.getLanguagePref()).isEqualTo("EN");
    }

    @Test
    void testSetAndGetAuditInfo() {
        requestChequeRequest.setAuditInfo("audit_123");
        assertThat(requestChequeRequest.getAuditInfo()).isEqualTo("audit_123");
    }

    @Test
    void testSetAndGetIsPrimaryUser() {
        requestChequeRequest.setIsPrimaryUser(true);
        assertThat(requestChequeRequest.getIsPrimaryUser()).isTrue();
    }

    @Test
    void testSetAndGetReserved1() {
        requestChequeRequest.setReserved1("reserved_1");
        assertThat(requestChequeRequest.getReserved1()).isEqualTo("reserved_1");
    }

    @Test
    void testSetAndGetCustInterface() {
        requestChequeRequest.setCustInterface("interface_1");
        assertThat(requestChequeRequest.getCustInterface()).isEqualTo("interface_1");
    }

    @Test
    void testSetAndGetCustId() {
        requestChequeRequest.setCustId("cust_1");
        assertThat(requestChequeRequest.getCustId()).isEqualTo("cust_1");
    }
}
