package com.td.mbna.msec.midtier.creditcard.payload.decreasecardlimit;

import com.td.mbna.msec.midtier.creditcard.payload.decreasecardlimit.DecreaseCardLimitRequest;
import com.td.mbna.msec.midtier.types.common.BaseRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Objects;

public class DecreaseCardLimitRequestTest {

    private DecreaseCardLimitRequest request;

    @BeforeEach
    void setUp() {
        request = new DecreaseCardLimitRequest();
    }

    /** Test Getter & Setter for RequestPayload */
    @Test
    public void testRequestPayloadGetterSetter() {
        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        assertEquals(payload, request.getRequestPayload());
    }

    /** Test toString method logic */
    @Test
    public void testToString() {
        request.setRequestPayload(new RequestPayload());
        String result = request.toString();
        assertNotNull(result);
        assertTrue(result.contains("DecreaseCardLimitRequest"));
        assertTrue(result.contains("requestPayload"));
    }

    /** Test hashCode logic with minimal state coverage */
    @Test
    public void testHashCode() {
        request.setRequestPayload(new RequestPayload());
        request.setCustId("123");
        request.setAcctType("Visa");

        int hashCode = request.hashCode();
        assertTrue(hashCode != 0);
    }

    /** Test equals method with different object states */
    @Test
    public void testEquals() {
        DecreaseCardLimitRequest anotherRequest = new DecreaseCardLimitRequest();
        anotherRequest.setRequestPayload(new RequestPayload());
        anotherRequest.setCustId("123");
        anotherRequest.setAcctType("Visa");

        assertTrue(request.equals(anotherRequest));

        request.setCustId("456");
        assertFalse(request.equals(anotherRequest));
    }
}
