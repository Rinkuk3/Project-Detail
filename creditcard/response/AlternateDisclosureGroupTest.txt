import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AlternateDisclosureGroupTest {

    @Test
    public void testGettersAndSetters() {
        AlternateDisclosureGroup alternateDisclosureGroup = new AlternateDisclosureGroup();

        // Test setter and getter methods
        alternateDisclosureGroup.setActiveInd(true);
        assertTrue(alternateDisclosureGroup.getActiveInd());

        alternateDisclosureGroup.setActiveInd(false);
        assertFalse(alternateDisclosureGroup.getActiveInd());

        alternateDisclosureGroup.setSystemGeneratedStartDt("2024-01-01");
        assertEquals("2024-01-01", alternateDisclosureGroup.getSystemGeneratedStartDt());

        alternateDisclosureGroup.setSystemGeneratedEndDt("2024-12-31");
        assertEquals("2024-12-31", alternateDisclosureGroup.getSystemGeneratedEndDt());
    }

    @Test
    public void testToString() {
        AlternateDisclosureGroup alternateDisclosureGroup = new AlternateDisclosureGroup();
        alternateDisclosureGroup.setActiveInd(true);
        alternateDisclosureGroup.setSystemGeneratedStartDt("2024-01-01");
        alternateDisclosureGroup.setSystemGeneratedEndDt("2024-12-31");

        String expectedString = "com.td.api.mbcca.creditcard.response.AlternateDisclosureGroup@" + 
                Integer.toHexString(alternateDisclosureGroup.hashCode()) +
                "[activeInd=true,systemGeneratedStartDt=2024-01-01,systemGeneratedEndDt=2024-12-31]";
        assertTrue(alternateDisclosureGroup.toString().contains("activeInd"));
    }

    @Test
    public void testHashCodeAndEquals() {
        AlternateDisclosureGroup group1 = new AlternateDisclosureGroup();
        group1.setActiveInd(true);
        group1.setSystemGeneratedStartDt("2024-01-01");
        group1.setSystemGeneratedEndDt("2024-12-31");

        AlternateDisclosureGroup group2 = new AlternateDisclosureGroup();
        group2.setActiveInd(true);
        group2.setSystemGeneratedStartDt("2024-01-01");
        group2.setSystemGeneratedEndDt("2024-12-31");

        AlternateDisclosureGroup group3 = new AlternateDisclosureGroup();
        group3.setActiveInd(false);
        group3.setSystemGeneratedStartDt("2024-01-01");
        group3.setSystemGeneratedEndDt("2024-12-31");

        // Test equality
        assertTrue(group1.equals(group2));  // Same field values
        assertFalse(group1.equals(group3)); // Different field values

        // Test hashCode consistency
        assertEquals(group1.hashCode(), group2.hashCode());
        assertNotEquals(group1.hashCode(), group3.hashCode());
    }

    @Test
    public void testEqualsNull() {
        AlternateDisclosureGroup alternateDisclosureGroup = new AlternateDisclosureGroup();
        alternateDisclosureGroup.setActiveInd(true);

        // Test equality with null
        assertFalse(alternateDisclosureGroup.equals(null));
    }

    @Test
    public void testEqualsDifferentClass() {
        AlternateDisclosureGroup alternateDisclosureGroup = new AlternateDisclosureGroup();
        alternateDisclosureGroup.setActiveInd(true);

        // Test equality with object of different class
        Object obj = new Object();
        assertFalse(alternateDisclosureGroup.equals(obj));
    }
}
