import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class ChargeOffStatusTest {

    @Test
    public void testGettersAndSetters() {
        ChargeOffStatus chargeOffStatus = new ChargeOffStatus();

        // Test setter and getter methods
        chargeOffStatus.setStatusCd("Active");
        assertEquals("Active", chargeOffStatus.getStatusCd());

        chargeOffStatus.setOperatorPartyId("12345");
        assertEquals("12345", chargeOffStatus.getOperatorPartyId());

        chargeOffStatus.setChangeTypeCd("Type1");
        assertEquals("Type1", chargeOffStatus.getChangeTypeCd());
    }

    @Test
    public void testToString() {
        ChargeOffStatus chargeOffStatus = new ChargeOffStatus();
        chargeOffStatus.setStatusCd("Active");
        chargeOffStatus.setOperatorPartyId("12345");
        chargeOffStatus.setChangeTypeCd("Type1");

        String expectedString = "com.td.api.mbcca.creditcard.response.ChargeOffStatus@" + 
                Integer.toHexString(chargeOffStatus.hashCode()) +
                "[statusCd=Active,operatorPartyId=12345,changeTypeCd=Type1]";
        assertTrue(chargeOffStatus.toString().contains("statusCd"));
        assertTrue(chargeOffStatus.toString().contains("operatorPartyId"));
        assertTrue(chargeOffStatus.toString().contains("changeTypeCd"));
    }

    @Test
    public void testHashCodeAndEquals() {
        ChargeOffStatus status1 = new ChargeOffStatus();
        status1.setStatusCd("Active");
        status1.setOperatorPartyId("12345");
        status1.setChangeTypeCd("Type1");

        ChargeOffStatus status2 = new ChargeOffStatus();
        status2.setStatusCd("Active");
        status2.setOperatorPartyId("12345");
        status2.setChangeTypeCd("Type1");

        ChargeOffStatus status3 = new ChargeOffStatus();
        status3.setStatusCd("Inactive");
        status3.setOperatorPartyId("67890");
        status3.setChangeTypeCd("Type2");

        // Test equality
        assertTrue(status1.equals(status2));  // Same field values
        assertFalse(status1.equals(status3)); // Different field values

        // Test hashCode consistency
        assertEquals(status1.hashCode(), status2.hashCode());
        assertNotEquals(status1.hashCode(), status3.hashCode());
    }

    @Test
    public void testEqualsNull() {
        ChargeOffStatus chargeOffStatus = new ChargeOffStatus();
        chargeOffStatus.setStatusCd("Active");

        // Test equality with null
        assertFalse(chargeOffStatus.equals(null));
    }

    @Test
    public void testEqualsDifferentClass() {
        ChargeOffStatus chargeOffStatus = new ChargeOffStatus();
        chargeOffStatus.setStatusCd("Active");

        // Test equality with object of different class
        Object obj = new Object();
        assertFalse(chargeOffStatus.equals(obj));
    }
}
