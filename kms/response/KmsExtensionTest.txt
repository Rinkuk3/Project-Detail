package com.td.api.kms.response;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class KmsExtensionTest {

    private KmsExtension kmsExtension;

    @BeforeEach
    void setUp() {
        kmsExtension = new KmsExtension();
    }

    @Test
    void testSetAndGetInitializationVectorVal() {
        kmsExtension.setInitializationVectorVal("iv123");
        assertEquals("iv123", kmsExtension.getInitializationVectorVal());
    }

    @Test
    void testSetAndGetAuthorizationTagVal() {
        kmsExtension.setAuthorizationTagVal("authTag123");
        assertEquals("authTag123", kmsExtension.getAuthorizationTagVal());
    }

    @Test
    void testSetAndGetInitializationVectorLengthCnt() {
        kmsExtension.setInitializationVectorLengthCnt(128);
        assertEquals(128, kmsExtension.getInitializationVectorLengthCnt());
    }

    @Test
    void testSetAndGetAuthorizationTagLengthCnt() {
        kmsExtension.setAuthorizationTagLengthCnt(64);
        assertEquals(64, kmsExtension.getAuthorizationTagLengthCnt());
    }

    @Test
    void testToString() {
        kmsExtension.setInitializationVectorVal("iv123");
        kmsExtension.setAuthorizationTagVal("authTag123");
        kmsExtension.setInitializationVectorLengthCnt(128);
        kmsExtension.setAuthorizationTagLengthCnt(64);

        String expectedToString = "com.td.api.kms.response.KmsExtension@" + Integer.toHexString(kmsExtension.hashCode()) +
                "[initializationVectorVal=iv123,authorizationTagVal=authTag123,initializationVectorLengthCnt=128,authorizationTagLengthCnt=64]";
        assertEquals(expectedToString, kmsExtension.toString());
    }

    @Test
    void testHashCode() {
        KmsExtension kmsExtension1 = new KmsExtension();
        KmsExtension kmsExtension2 = new KmsExtension();
        assertEquals(kmsExtension1.hashCode(), kmsExtension2.hashCode());

        kmsExtension1.setInitializationVectorVal("iv123");
        kmsExtension1.setAuthorizationTagVal("authTag123");
        kmsExtension1.setInitializationVectorLengthCnt(128);
        kmsExtension1.setAuthorizationTagLengthCnt(64);

        kmsExtension2.setInitializationVectorVal("iv123");
        kmsExtension2.setAuthorizationTagVal("authTag123");
        kmsExtension2.setInitializationVectorLengthCnt(128);
        kmsExtension2.setAuthorizationTagLengthCnt(64);

        assertEquals(kmsExtension1.hashCode(), kmsExtension2.hashCode());
    }

    @Test
    void testEquals() {
        KmsExtension kmsExtension1 = new KmsExtension();
        KmsExtension kmsExtension2 = new KmsExtension();
        assertTrue(kmsExtension1.equals(kmsExtension2));

        kmsExtension1.setInitializationVectorVal("iv123");
        kmsExtension1.setAuthorizationTagVal("authTag123");
        kmsExtension1.setInitializationVectorLengthCnt(128);
        kmsExtension1.setAuthorizationTagLengthCnt(64);

        kmsExtension2.setInitializationVectorVal("iv123");
        kmsExtension2.setAuthorizationTagVal("authTag123");
        kmsExtension2.setInitializationVectorLengthCnt(128);
        kmsExtension2.setAuthorizationTagLengthCnt(64);

        assertTrue(kmsExtension1.equals(kmsExtension2));

        kmsExtension2.setInitializationVectorLengthCnt(256); // Change one field
        assertFalse(kmsExtension1.equals(kmsExtension2));

        kmsExtension2.setAuthorizationTagVal("authTag456"); // Change another field
        assertFalse(kmsExtension1.equals(kmsExtension2));

        kmsExtension2.setInitializationVectorVal("iv456"); // Change another field
        assertFalse(kmsExtension1.equals(kmsExtension2));

        kmsExtension2.setAuthorizationTagLengthCnt(128); // Reset and check equality
        assertFalse(kmsExtension1.equals(kmsExtension2));
    }

    @Test
    void testEqualsWithNull() {
        KmsExtension kmsExtension1 = new KmsExtension();
        assertFalse(kmsExtension1.equals(null));
    }

    @Test
    void testEqualsWithDifferentClass() {
        KmsExtension kmsExtension1 = new KmsExtension();
        String str = "DifferentClass";
        assertFalse(kmsExtension1.equals(str));
    }
}
