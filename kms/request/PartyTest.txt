package com.td.api.kms.request;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class PartyTest {

    private Party party;

    @BeforeEach
    void setUp() {
        party = new Party();
    }

    @Test
    void testSetAndGetRoleCd() {
        List<String> roleCd = Arrays.asList("Admin", "User");
        party.setRoleCd(roleCd);
        assertEquals(roleCd, party.getRoleCd());
    }

    @Test
    void testSetAndGetName() {
        Name name = new Name();
        name.setFullName("John Doe");
        name.setTypeCd("TypeA");

        List<Name> names = Arrays.asList(name);
        party.setName(names);
        assertEquals(names, party.getName());
    }

    @Test
    void testToString() {
        Name name = new Name();
        name.setFullName("John Doe");
        name.setTypeCd("TypeA");

        party.setRoleCd(Arrays.asList("Admin", "User"));
        party.setName(Arrays.asList(name));

        String expectedToString = "com.td.api.kms.request.Party@" + Integer.toHexString(party.hashCode()) +
                "[roleCd=[Admin, User],name=[com.td.api.kms.request.Name@" + Integer.toHexString(name.hashCode()) + "[fullName=John Doe,typeCd=TypeA]]]";
        assertEquals(expectedToString, party.toString());
    }

    @Test
    void testHashCode() {
        Party party1 = new Party();
        Party party2 = new Party();
        assertEquals(party1.hashCode(), party2.hashCode());

        Name name = new Name();
        name.setFullName("John Doe");
        name.setTypeCd("TypeA");

        party1.setRoleCd(Arrays.asList("Admin"));
        party1.setName(Arrays.asList(name));

        party2.setRoleCd(Arrays.asList("Admin"));
        party2.setName(Arrays.asList(name));

        assertEquals(party1.hashCode(), party2.hashCode());
    }

    @Test
    void testEquals() {
        Party party1 = new Party();
        Party party2 = new Party();
        assertTrue(party1.equals(party2));

        Name name = new Name();
        name.setFullName("John Doe");
        name.setTypeCd("TypeA");

        party1.setRoleCd(Arrays.asList("Admin"));
        party1.setName(Arrays.asList(name));

        party2.setRoleCd(Arrays.asList("Admin"));
        party2.setName(Arrays.asList(name));

        assertTrue(party1.equals(party2));

        party2.setRoleCd(Arrays.asList("User"));
        assertFalse(party1.equals(party2));

        party2.setRoleCd(Arrays.asList("Admin"));
        party2.setName(Arrays.asList(new Name()));
        assertFalse(party1.equals(party2));
    }

    @Test
    void testEqualsWithNull() {
        Party party1 = new Party();
        assertFalse(party1.equals(null));
    }

    @Test
    void testEqualsWithDifferentClass() {
        Party party1 = new Party();
        String str = "DifferentClass";
        assertFalse(party1.equals(str));
    }
}
