package com.td.api.kms.request;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AddDecryptionJobRqTest {

    private AddDecryptionJobRq addDecryptionJobRq;

    @BeforeEach
    void setUp() {
        addDecryptionJobRq = new AddDecryptionJobRq();
    }

    @Test
    void testSetAndGetDecryptionEvent() {
        DecryptionEvent decryptionEvent = new DecryptionEvent();
        addDecryptionJobRq.setDecryptionEvent(decryptionEvent);
        assertEquals(decryptionEvent, addDecryptionJobRq.getDecryptionEvent());
    }

    @Test
    void testToString() {
        DecryptionEvent decryptionEvent = new DecryptionEvent();
        addDecryptionJobRq.setDecryptionEvent(decryptionEvent);

        String expectedToString = "com.td.api.kms.request.AddDecryptionJobRq@" + Integer.toHexString(addDecryptionJobRq.hashCode()) + "[decryptionEvent=" + decryptionEvent + "]";
        assertEquals(expectedToString, addDecryptionJobRq.toString());
    }

    @Test
    void testHashCode() {
        AddDecryptionJobRq rq1 = new AddDecryptionJobRq();
        AddDecryptionJobRq rq2 = new AddDecryptionJobRq();

        assertEquals(rq1.hashCode(), rq2.hashCode());

        DecryptionEvent decryptionEvent = new DecryptionEvent();
        rq1.setDecryptionEvent(decryptionEvent);
        rq2.setDecryptionEvent(decryptionEvent);

        assertEquals(rq1.hashCode(), rq2.hashCode());
    }

    @Test
    void testEquals() {
        AddDecryptionJobRq rq1 = new AddDecryptionJobRq();
        AddDecryptionJobRq rq2 = new AddDecryptionJobRq();
        assertTrue(rq1.equals(rq2));

        DecryptionEvent decryptionEvent = new DecryptionEvent();
        rq1.setDecryptionEvent(decryptionEvent);
        rq2.setDecryptionEvent(decryptionEvent);
        assertTrue(rq1.equals(rq2));

        rq2.setDecryptionEvent(new DecryptionEvent());
        assertFalse(rq1.equals(rq2));
    }

    @Test
    void testEqualsWithNull() {
        AddDecryptionJobRq rq = new AddDecryptionJobRq();
        assertFalse(rq.equals(null));
    }

    @Test
    void testEqualsWithDifferentClass() {
        AddDecryptionJobRq rq = new AddDecryptionJobRq();
        String str = "DifferentClass";
        assertFalse(rq.equals(str));
    }
}
