package com.td.mbna.msec.midtier.statement.payload;

import com.td.mbna.msec.midtier.types.common.AuditInfo;
import com.td.mbna.msec.midtier.types.common.DisclosureInfoType;
import com.td.mbna.msec.midtier.types.common.EmailNotificationInfoType;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class MultiAcctDeliveryPreferenceTypeTest {

    @Test
    void testSetAndGetCustId() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        
        // Test setting and getting custId
        multiAcct.setCustId("cust123");
        assertEquals("cust123", multiAcct.getCustId());
    }

    @Test
    void testSetAndGetAliasCustId() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        
        // Test setting and getting aliasCustId
        multiAcct.setAliasCustId("aliasCust123");
        assertEquals("aliasCust123", multiAcct.getAliasCustId());
    }

    @Test
    void testSetAndGetAcctDeliveryPreference() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        AcctDeliveryPreferenceType acctDeliveryPreference = new AcctDeliveryPreferenceType();
        
        // Test setting and getting acctDeliveryPreference
        multiAcct.setAcctDeliveryPreference(acctDeliveryPreference);
        assertEquals(acctDeliveryPreference, multiAcct.getAcctDeliveryPreference());
    }

    @Test
    void testSetAndGetDisclosureInfo() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        List<DisclosureInfoType> disclosureInfoList = new ArrayList<>();
        
        // Test setting and getting disclosureInfo
        multiAcct.setDisclosureInfo(disclosureInfoList);
        assertEquals(disclosureInfoList, multiAcct.getDisclosureInfo());
    }

    @Test
    void testSetAndGetEmailNotificationInfo() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        
        // Test setting and getting emailNotificationInfo
        multiAcct.setEmailNotificationInfo(emailNotificationInfo);
        assertEquals(emailNotificationInfo, multiAcct.getEmailNotificationInfo());
    }

    @Test
    void testSetAndGetAuditInfo() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        AuditInfo auditInfo = new AuditInfo();
        
        // Test setting and getting auditInfo
        multiAcct.setAuditInfo(auditInfo);
        assertEquals(auditInfo, multiAcct.getAuditInfo());
    }

    @Test
    void testSetAndGetStatus() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        
        // Test setting and getting status
        multiAcct.setStatus(true);
        assertTrue(multiAcct.getStatus());

        multiAcct.setStatus(false);
        assertFalse(multiAcct.getStatus());
    }

    @Test
    void testSetAndGetErrorMsgs() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        List<String> errorMsgs = new ArrayList<>();
        
        // Test setting and getting errorMsgs
        multiAcct.setErrorMsgs(errorMsgs);
        assertEquals(errorMsgs, multiAcct.getErrorMsgs());
    }

    @Test
    void testSetAndGetEnrollmentStatus() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        
        // Test setting and getting enrollmentStatus
        multiAcct.setEnrollmentStatus("ENROLLED");
        assertEquals("ENROLLED", multiAcct.getEnrollmentStatus());
    }

    @Test
    void testSetAndGetAllFields() {
        MultiAcctDeliveryPreferenceType multiAcct = new MultiAcctDeliveryPreferenceType();
        AcctDeliveryPreferenceType acctDeliveryPreference = new AcctDeliveryPreferenceType();
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        AuditInfo auditInfo = new AuditInfo();
        List<DisclosureInfoType> disclosureInfoList = new ArrayList<>();
        List<String> errorMsgs = new ArrayList<>();

        // Test setting and getting all fields
        multiAcct.setCustId("cust123");
        multiAcct.setAliasCustId("aliasCust123");
        multiAcct.setAcctDeliveryPreference(acctDeliveryPreference);
        multiAcct.setDisclosureInfo(disclosureInfoList);
        multiAcct.setEmailNotificationInfo(emailNotificationInfo);
        multiAcct.setAuditInfo(auditInfo);
        multiAcct.setStatus(true);
        multiAcct.setErrorMsgs(errorMsgs);
        multiAcct.setEnrollmentStatus("ENROLLED");

        assertEquals("cust123", multiAcct.getCustId());
        assertEquals("aliasCust123", multiAcct.getAliasCustId());
        assertEquals(acctDeliveryPreference, multiAcct.getAcctDeliveryPreference());
        assertEquals(disclosureInfoList, multiAcct.getDisclosureInfo());
        assertEquals(emailNotificationInfo, multiAcct.getEmailNotificationInfo());
        assertEquals(auditInfo, multiAcct.getAuditInfo());
        assertTrue(multiAcct.getStatus());
        assertEquals(errorMsgs, multiAcct.getErrorMsgs());
        assertEquals("ENROLLED", multiAcct.getEnrollmentStatus());
    }
}
