import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class CardBenefitTest {

    @Test
    public void testSetAndGetHtml() {
        // Arrange
        CardBenefit cardBenefit = new CardBenefit();
        String expectedHtml = "<div>Benefit</div>";

        // Act
        cardBenefit.setHtml(expectedHtml);
        String actualHtml = cardBenefit.getHtml();

        // Assert
        assertEquals(expectedHtml, actualHtml);
    }

    @Test
    public void testEquals_SameObject() {
        // Arrange
        CardBenefit cardBenefit = new CardBenefit();
        
        // Act & Assert
        assertTrue(cardBenefit.equals(cardBenefit));
    }

    @Test
    public void testEquals_NullObject() {
        // Arrange
        CardBenefit cardBenefit = new CardBenefit();
        
        // Act & Assert
        assertFalse(cardBenefit.equals(null));
    }

    @Test
    public void testEquals_DifferentClass() {
        // Arrange
        CardBenefit cardBenefit = new CardBenefit();
        
        // Act & Assert
        assertFalse(cardBenefit.equals("String"));
    }

    @Test
    public void testEquals_SameHtml() {
        // Arrange
        CardBenefit cardBenefit1 = new CardBenefit();
        CardBenefit cardBenefit2 = new CardBenefit();
        cardBenefit1.setHtml("<div>Benefit</div>");
        cardBenefit2.setHtml("<div>Benefit</div>");

        // Act & Assert
        assertTrue(cardBenefit1.equals(cardBenefit2));
    }

    @Test
    public void testEquals_DifferentHtml() {
        // Arrange
        CardBenefit cardBenefit1 = new CardBenefit();
        CardBenefit cardBenefit2 = new CardBenefit();
        cardBenefit1.setHtml("<div>Benefit 1</div>");
        cardBenefit2.setHtml("<div>Benefit 2</div>");

        // Act & Assert
        assertFalse(cardBenefit1.equals(cardBenefit2));
    }

    @Test
    public void testHashCode_SameHtml() {
        // Arrange
        CardBenefit cardBenefit1 = new CardBenefit();
        CardBenefit cardBenefit2 = new CardBenefit();
        cardBenefit1.setHtml("<div>Benefit</div>");
        cardBenefit2.setHtml("<div>Benefit</div>");

        // Act & Assert
        assertEquals(cardBenefit1.hashCode(), cardBenefit2.hashCode());
    }

    @Test
    public void testHashCode_DifferentHtml() {
        // Arrange
        CardBenefit cardBenefit1 = new CardBenefit();
        CardBenefit cardBenefit2 = new CardBenefit();
        cardBenefit1.setHtml("<div>Benefit 1</div>");
        cardBenefit2.setHtml("<div>Benefit 2</div>");

        // Act & Assert
        assertNotEquals(cardBenefit1.hashCode(), cardBenefit2.hashCode());
    }

    @Test
    public void testHashCode_NullHtml() {
        // Arrange
        CardBenefit cardBenefit = new CardBenefit();
        cardBenefit.setHtml(null);

        // Act & Assert
        assertNotEquals(cardBenefit.hashCode(), new CardBenefit().hashCode());
    }
}
