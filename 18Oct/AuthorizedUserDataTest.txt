import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class AuthorizedUserDataTest {

    private AuthorizedUserData authorizedUserData;

    @BeforeEach
    public void setUp() {
        authorizedUserData = new AuthorizedUserData();
    }

    @Test
    public void testAccountNumber() {
        String accountNumber = "123456";
        authorizedUserData.setAccountNumber(accountNumber);
        assertEquals(accountNumber, authorizedUserData.getAccountNumber());
    }

    @Test
    public void testFirstName() {
        String firstName = "John";
        authorizedUserData.setFirstName(firstName);
        assertEquals(firstName, authorizedUserData.getFirstName());
    }

    @Test
    public void testMiddleName() {
        String middleName = "A.";
        authorizedUserData.setMiddleName(middleName);
        assertEquals(middleName, authorizedUserData.getMiddleName());
    }

    @Test
    public void testLastName() {
        String lastName = "Doe";
        authorizedUserData.setLastName(lastName);
        assertEquals(lastName, authorizedUserData.getLastName());
    }

    @Test
    public void testSuffix() {
        KeyValuePair suffix = new KeyValuePair("Mr.", "Mr.");
        authorizedUserData.setSuffix(suffix);
        assertEquals(suffix, authorizedUserData.getSuffix());
    }

    @Test
    public void testIsAddressSameAsPrimary() {
        String isAddressSameAsPrimary = "Yes";
        authorizedUserData.setIsAddressSameAsPrimary(isAddressSameAsPrimary);
        assertEquals(isAddressSameAsPrimary, authorizedUserData.getIsAddressSameAsPrimary());
    }

    @Test
    public void testAddressLine1() {
        String addressLine1 = "123 Main St";
        authorizedUserData.setAddressLine1(addressLine1);
        assertEquals(addressLine1, authorizedUserData.getAddressLine1());
    }

    @Test
    public void testAddressLine2() {
        String addressLine2 = "Apt 4B";
        authorizedUserData.setAddressLine2(addressLine2);
        assertEquals(addressLine2, authorizedUserData.getAddressLine2());
    }

    @Test
    public void testCity() {
        String city = "Toronto";
        authorizedUserData.setCity(city);
        assertEquals(city, authorizedUserData.getCity());
    }

    @Test
    public void testProvince() {
        KeyValuePair province = new KeyValuePair("ON", "Ontario");
        authorizedUserData.setProvince(province);
        assertEquals(province, authorizedUserData.getProvince());
    }

    @Test
    public void testPostalCode() {
        String postalCode = "A1B2C3";
        authorizedUserData.setPostalCode(postalCode);
        assertEquals(postalCode, authorizedUserData.getPostalCode());
    }

    @Test
    public void testDateOfBirth() {
        String dateOfBirth = "1990-01-01";
        authorizedUserData.setDateOfBirth(dateOfBirth);
        assertEquals(dateOfBirth, authorizedUserData.getDateOfBirth());
    }

    @Test
    public void testBusinessPhone() {
        String businessPhone = "123-456-7890";
        authorizedUserData.setBusinessPhone(businessPhone);
        assertEquals(businessPhone, authorizedUserData.getBusinessPhone());
    }

    @Test
    public void testBusinessPhoneExtension() {
        String businessPhoneExtension = "123";
        authorizedUserData.setBusinessPhoneExtension(businessPhoneExtension);
        assertEquals(businessPhoneExtension, authorizedUserData.getBusinessPhoneExtension());
    }

    @Test
    public void testHomePhone() {
        String homePhone = "098-765-4321";
        authorizedUserData.setHomePhone(homePhone);
        assertEquals(homePhone, authorizedUserData.getHomePhone());
    }

    @Test
    public void testMobilePhone() {
        String mobilePhone = "555-555-5555";
        authorizedUserData.setMobilePhone(mobilePhone);
        assertEquals(mobilePhone, authorizedUserData.getMobilePhone());
    }

    @Test
    public void testAgreed() {
        authorizedUserData.setAgreed(true);
        assertTrue(authorizedUserData.isAgreed());
        authorizedUserData.setAgreed(false);
        assertFalse(authorizedUserData.isAgreed());
    }

    @Test
    public void testRelationship() {
        KeyValuePair relationship = new KeyValuePair("Married", "Married");
        authorizedUserData.setRelationship(relationship);
        assertEquals(relationship, authorizedUserData.getRelationship());
    }

    @Test
    public void testSuffixKey() {
        KeyValuePair suffix = new KeyValuePair("Mr.", "Mr.");
        authorizedUserData.setSuffix(suffix);
        assertEquals("Mr.", authorizedUserData.getSuffixKey());
    }

    @Test
    public void testProvinceKey() {
        KeyValuePair province = new KeyValuePair("ON", "Ontario");
        authorizedUserData.setProvince(province);
        assertEquals("ON", authorizedUserData.getProvinceKey());
    }

    @Test
    public void testRelationshipKey() {
        KeyValuePair relationship = new KeyValuePair("Married", "Married");
        authorizedUserData.setRelationship(relationship);
        assertEquals("Married", authorizedUserData.getRelationshipKey());
    }

    @Test
    public void testSuffixKeyNull() {
        authorizedUserData.setSuffix(null);
        assertNull(authorizedUserData.getSuffixKey());
    }

    @Test
    public void testProvinceKeyNull() {
        authorizedUserData.setProvince(null);
        assertNull(authorizedUserData.getProvinceKey());
    }

    @Test
    public void testRelationshipKeyNull() {
        authorizedUserData.setRelationship(null);
        assertNull(authorizedUserData.getRelationshipKey());
    }
}
