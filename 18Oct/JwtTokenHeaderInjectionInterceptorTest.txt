import com.td.mbna.msec.common.TokenHolderService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpRequest;
import org.springframework.http.client.ClientHttpRequestExecution;
import org.springframework.http.client.ClientHttpResponse;

import java.io.IOException;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

public class JwtTokenHeaderInjectionInterceptorTest {

    private JwtTokenHeaderInjectionInterceptor interceptor;
    private TokenHolderService tokenHolderService;

    @BeforeEach
    public void setUp() {
        tokenHolderService = mock(TokenHolderService.class);
        interceptor = new JwtTokenHeaderInjectionInterceptor(tokenHolderService);
    }

    @Test
    public void intercept_shouldAddAuthorizationHeader_whenAccessTokenIsPresent() throws IOException {
        // Given
        String accessToken = "test-jwt-token";
        HttpRequest request = mock(HttpRequest.class);
        ClientHttpRequestExecution execution = mock(ClientHttpRequestExecution.class);
        ClientHttpResponse response = mock(ClientHttpResponse.class);
        byte[] body = new byte[0];

        when(tokenHolderService.getJwtTokenFromContext()).thenReturn(accessToken);
        when(request.getHeaders()).thenReturn(new HttpHeaders());
        when(execution.execute(any(HttpRequest.class), any(byte[].class))).thenReturn(response);

        // When
        ClientHttpResponse result = interceptor.intercept(request, body, execution);

        // Then
        verify(request.getHeaders()).add("Authorization", "Bearer " + accessToken);
        verify(execution).execute(request, body);
        verifyNoMoreInteractions(execution);
        // Verify that the response is returned
        assertSame(response, result);
    }

    @Test
    public void intercept_shouldNotThrowException_whenTokenHolderServiceReturnsNull() throws IOException {
        // Given
        HttpRequest request = mock(HttpRequest.class);
        ClientHttpRequestExecution execution = mock(ClientHttpRequestExecution.class);
        ClientHttpResponse response = mock(ClientHttpResponse.class);
        byte[] body = new byte[0];

        when(tokenHolderService.getJwtTokenFromContext()).thenReturn(null);
        when(request.getHeaders()).thenReturn(new HttpHeaders());
        when(execution.execute(any(HttpRequest.class), any(byte[].class))).thenReturn(response);

        // When
        ClientHttpResponse result = interceptor.intercept(request, body, execution);

        // Then
        verify(request.getHeaders()).add("Authorization", "Bearer null");
        verify(execution).execute(request, body);
        verifyNoMoreInteractions(execution);
        // Verify that the response is returned
        assertSame(response, result);
    }
}
