import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

public class AddAuInfoTest {

    private AddAuInfo addAuInfo;

    @BeforeEach
    public void setUp() {
        addAuInfo = new AddAuInfo();
    }

    @Test
    public void testAllowed() {
        addAuInfo.setAllowed(true);
        assertTrue(addAuInfo.isAllowed());

        addAuInfo.setAllowed(false);
        assertFalse(addAuInfo.isAllowed());
    }

    @Test
    public void testAddress() {
        Address address = new Address();
        // Set properties on the Address object as needed
        addAuInfo.setAddress(address);
        assertEquals(address, addAuInfo.getAddress());
    }

    @Test
    public void testDisclosureText() {
        String disclosureText = "Sample Disclosure Text";
        addAuInfo.setDisclosureText(disclosureText);
        assertEquals(disclosureText, addAuInfo.getDisclosureText());
    }

    @Test
    public void testDisclosureInfoType() {
        DisclosureInfoType disclosureInfoType = new DisclosureInfoType();
        // Set properties on the DisclosureInfoType object as needed
        addAuInfo.setDisclosureInfoType(disclosureInfoType);
        assertEquals(disclosureInfoType, addAuInfo.getDisclosureInfoType());
    }

    @Test
    public void testAuFeeApplicable() {
        addAuInfo.setAuFeeAppplicable(true);
        assertTrue(addAuInfo.isAuFeeAppplicable());

        addAuInfo.setAuFeeAppplicable(false);
        assertFalse(addAuInfo.isAuFeeAppplicable());
    }

    @Test
    public void testAuFee() {
        BigDecimal auFee = new BigDecimal("100.00");
        addAuInfo.setAuFee(auFee);
        assertEquals(auFee, addAuInfo.getAuFee());
    }

    @Test
    public void testAnnualFee() {
        BigDecimal annualFee = new BigDecimal("200.00");
        addAuInfo.setAnnualFee(annualFee);
        assertEquals(annualFee, addAuInfo.getAnnualFee());
    }

    @Test
    public void testMaxFee() {
        BigDecimal maxFee = new BigDecimal("300.00");
        addAuInfo.setMaxFee(maxFee);
        assertEquals(maxFee, addAuInfo.getMaxFee());
    }

    @Test
    public void testStoredInSession() {
        addAuInfo.setStoredInSession(true);
        assertTrue(addAuInfo.isStoredInSession());

        addAuInfo.setStoredInSession(false);
        assertFalse(addAuInfo.isStoredInSession());
    }

    @Test
    public void testSuppressConfirmationMessage() {
        addAuInfo.setSuppressConfirmationMessage(true);
        assertTrue(addAuInfo.isSuppressConfirmationMessage());

        addAuInfo.setSuppressConfirmationMessage(false);
        assertFalse(addAuInfo.isSuppressConfirmationMessage());
    }

    @Test
    public void testAddAuPageMessage() {
        String message = "Add AU Page Message";
        addAuInfo.setAddaupagemessage(message);
        assertEquals(message, addAuInfo.getAddaupagemessage());
    }

    @Test
    public void testVerificationPageMessage() {
        String message = "Verification Page Message";
        addAuInfo.setVerificationPageMessage(message);
        assertEquals(message, addAuInfo.getVerificationPageMessage());
    }

    @Test
    public void testConfirmationPageMessage() {
        String message = "Confirmation Page Message";
        addAuInfo.setConfirmationPageMessage(message);
        assertEquals(message, addAuInfo.getConfirmationPageMessage());
    }

    @Test
    public void testPersonalInfoPageMessage() {
        String message = "Personal Info Page Message";
        addAuInfo.setPersonalinfopagemessage(message);
        assertEquals(message, addAuInfo.getPersonalinfopagemessage());
    }
}
