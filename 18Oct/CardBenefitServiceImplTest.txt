import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import javax.servlet.http.HttpServletRequest;

import com.google.gson.Gson;
import com.td.mbna.msec.account.domain.AccountDetails;
import com.td.mbna.msec.cardbenefit.model.CardBenefit;
import com.td.mbna.msec.cardbenefit.model.CardBenefitItemInWcm;
import com.td.mbna.msec.cardbenefit.service.impl.CardBenefitServiceImpl;
import com.td.mbna.msec.common.WcmContentService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class CardBenefitServiceImplTest {

    @InjectMocks
    private CardBenefitServiceImpl cardBenefitService;

    @Mock
    private WcmContentService wcmContentService;

    @Mock
    private HttpServletRequest request;

    @Mock
    private AccountDetails accountDetails;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testGetCardBenefit_AccountIsNull() {
        // Act
        CardBenefit result = cardBenefitService.getCardBenefit(null, request);

        // Assert
        assertNull(result);
    }

    @Test
    public void testGetCardBenefit_WcmContentIsNull() {
        // Arrange
        when(wcmContentService.getContentByID("cardbenefit", request)).thenReturn(null);
        
        // Act
        CardBenefit result = cardBenefitService.getCardBenefit(accountDetails, request);

        // Assert
        assertNull(result);
    }

    @Test
    public void testGetCardBenefit_JsonConversionFails() {
        // Arrange
        String wcmContent = "{\"some\":\"content\"}"; // invalid for CardBenefitItemInWcm
        when(wcmContentService.getContentByID("cardbenefit", request)).thenReturn(wcmContent);
        when(accountDetails.getAccountId()).thenReturn("12345");

        // Act
        CardBenefit result = cardBenefitService.getCardBenefit(accountDetails, request);

        // Assert
        assertNull(result);
    }

    @Test
    public void testGetCardBenefit_NoPublishItems() {
        // Arrange
        String wcmContent = "[{\"id\":\"1\",\"publish\":false,\"productionCode\":null,\"html\":\"<div>Benefit</div>\"}]";
        when(wcmContentService.getContentByID("cardbenefit", request)).thenReturn(wcmContent);
        when(accountDetails.getAccountId()).thenReturn("12345");

        // Act
        CardBenefit result = cardBenefitService.getCardBenefit(accountDetails, request);

        // Assert
        assertNull(result);
    }

    @Test
    public void testGetCardBenefit_ValidPublish() {
        // Arrange
        String wcmContent = "[{\"id\":\"1\",\"publish\":true,\"productionCode\":\"prod123\",\"html\":\"<div>Benefit</div>\"}]";
        when(wcmContentService.getContentByID("cardbenefit", request)).thenReturn(wcmContent);
        when(accountDetails.getAccountId()).thenReturn("12345");
        when(accountDetails.getProductCode()).thenReturn("prod123");

        // Act
        CardBenefit result = cardBenefitService.getCardBenefit(accountDetails, request);

        // Assert
        assertNotNull(result);
        assertEquals("<div>Benefit</div>", result.getHtml());
    }

    @Test
    public void testGetCardBenefit_NonMatchingProductionCode() {
        // Arrange
        String wcmContent = "[{\"id\":\"1\",\"publish\":true,\"productionCode\":\"prod123\",\"html\":\"<div>Benefit</div>\"}]";
        when(wcmContentService.getContentByID("cardbenefit", request)).thenReturn(wcmContent);
        when(accountDetails.getAccountId()).thenReturn("12345");
        when(accountDetails.getProductCode()).thenReturn("prod456"); // Different from productionCode

        // Act
        CardBenefit result = cardBenefitService.getCardBenefit(accountDetails, request);

        // Assert
        assertNull(result);
    }

    @Test
    public void testCheckProductionCode_MatchingProductionCode() {
        // Arrange
        CardBenefitItemInWcm item = new CardBenefitItemInWcm();
        item.setProductionCode("prod123");
        when(accountDetails.getProductCode()).thenReturn("prod123");

        // Act
        boolean result = cardBenefitService.checkProductionCode(item, accountDetails);

        // Assert
        assertTrue(result);
    }

    @Test
    public void testCheckProductionCode_NonMatchingProductionCode() {
        // Arrange
        CardBenefitItemInWcm item = new CardBenefitItemInWcm();
        item.setProductionCode("prod123");
        when(accountDetails.getProductCode()).thenReturn("prod456");

        // Act
        boolean result = cardBenefitService.checkProductionCode(item, accountDetails);

        // Assert
        assertFalse(result);
    }
}
