package com.td.api.mbcca.shared;

import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.*;

class CccyamtTest {

    @Test
    void testSetAndGetAmount() {
        Cccyamt cccyamt = new Cccyamt();
        BigDecimal amount = new BigDecimal("100.50");
        cccyamt.setAmount(amount);
        assertEquals(amount, cccyamt.getAmount());
    }

    @Test
    void testSetAndGetCurrencyCd() {
        Cccyamt cccyamt = new Cccyamt();
        String currencyCd = "USD";
        cccyamt.setCurrencyCd(currencyCd);
        assertEquals(currencyCd, cccyamt.getCurrencyCd());
    }

    @Test
    void testToString() {
        Cccyamt cccyamt = new Cccyamt();
        cccyamt.setAmount(new BigDecimal("100.50"));
        cccyamt.setCurrencyCd("USD");

        String expectedString = "com.td.api.mbcca.shared.Cccyamt@" + Integer.toHexString(cccyamt.hashCode()) + 
                "[amount=100.50,currencyCd=USD]";
        
        assertTrue(cccyamt.toString().contains("amount=100.50"));
        assertTrue(cccyamt.toString().contains("currencyCd=USD"));
    }

    @Test
    void testHashCode() {
        Cccyamt cccyamt1 = new Cccyamt();
        cccyamt1.setAmount(new BigDecimal("100.50"));
        cccyamt1.setCurrencyCd("USD");

        Cccyamt cccyamt2 = new Cccyamt();
        cccyamt2.setAmount(new BigDecimal("100.50"));
        cccyamt2.setCurrencyCd("USD");

        assertEquals(cccyamt1.hashCode(), cccyamt2.hashCode());
    }

    @Test
    void testEquals() {
        Cccyamt cccyamt1 = new Cccyamt();
        cccyamt1.setAmount(new BigDecimal("100.50"));
        cccyamt1.setCurrencyCd("USD");

        Cccyamt cccyamt2 = new Cccyamt();
        cccyamt2.setAmount(new BigDecimal("100.50"));
        cccyamt2.setCurrencyCd("USD");

        assertTrue(cccyamt1.equals(cccyamt2));
    }

    @Test
    void testNotEqualAmount() {
        Cccyamt cccyamt1 = new Cccyamt();
        cccyamt1.setAmount(new BigDecimal("100.50"));
        cccyamt1.setCurrencyCd("USD");

        Cccyamt cccyamt2 = new Cccyamt();
        cccyamt2.setAmount(new BigDecimal("200.75"));
        cccyamt2.setCurrencyCd("USD");

        assertFalse(cccyamt1.equals(cccyamt2));
    }

    @Test
    void testNotEqualCurrencyCd() {
        Cccyamt cccyamt1 = new Cccyamt();
        cccyamt1.setAmount(new BigDecimal("100.50"));
        cccyamt1.setCurrencyCd("USD");

        Cccyamt cccyamt2 = new Cccyamt();
        cccyamt2.setAmount(new BigDecimal("100.50"));
        cccyamt2.setCurrencyCd("EUR");

        assertFalse(cccyamt1.equals(cccyamt2));
    }

    @Test
    void testNullAmount() {
        Cccyamt cccyamt = new Cccyamt();
        cccyamt.setAmount(null);
        assertNull(cccyamt.getAmount());
    }

    @Test
    void testNullCurrencyCd() {
        Cccyamt cccyamt = new Cccyamt();
        cccyamt.setCurrencyCd(null);
        assertNull(cccyamt.getCurrencyCd());
    }
}
