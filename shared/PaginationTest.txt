import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;

public class PaginationTest {

    @Test
    public void testSetGetOffset() {
        Pagination pagination = new Pagination();
        pagination.setOffset(10);
        assertEquals(10, pagination.getOffset());
    }

    @Test
    public void testSetGetLimit() {
        Pagination pagination = new Pagination();
        pagination.setLimit(20);
        assertEquals(20, pagination.getLimit());
    }

    @Test
    public void testSetGetMatchedCnt() {
        Pagination pagination = new Pagination();
        pagination.setMatchedCnt(5);
        assertEquals(5, pagination.getMatchedCnt());
    }

    @Test
    public void testSetGetSentCnt() {
        Pagination pagination = new Pagination();
        pagination.setSentCnt(30);
        assertEquals(30, pagination.getSentCnt());
    }

    @Test
    public void testSetGetNextUri() {
        Pagination pagination = new Pagination();
        URI nextUri = URI.create("http://example.com/next");
        pagination.setNextUri(nextUri);
        assertEquals(nextUri, pagination.getNextUri());
    }

    @Test
    public void testSetGetPrevUri() {
        Pagination pagination = new Pagination();
        URI prevUri = URI.create("http://example.com/prev");
        pagination.setPrevUri(prevUri);
        assertEquals(prevUri, pagination.getPrevUri());
    }

    @Test
    public void testSetGetFirstUri() {
        Pagination pagination = new Pagination();
        URI firstUri = URI.create("http://example.com/first");
        pagination.setFirstUri(firstUri);
        assertEquals(firstUri, pagination.getFirstUri());
    }

    @Test
    public void testSetGetLastUri() {
        Pagination pagination = new Pagination();
        URI lastUri = URI.create("http://example.com/last");
        pagination.setLastUri(lastUri);
        assertEquals(lastUri, pagination.getLastUri());
    }

    @Test
    public void testSetGetPage() {
        Pagination pagination = new Pagination();
        pagination.setPage(1);
        assertEquals(1, pagination.getPage());
    }

    @Test
    public void testSetGetPageSize() {
        Pagination pagination = new Pagination();
        pagination.setPageSize(10);
        assertEquals(10, pagination.getPageSize());
    }

    @Test
    public void testSetGetTotalPageCnt() {
        Pagination pagination = new Pagination();
        pagination.setTotalPageCnt(100);
        assertEquals(100, pagination.getTotalPageCnt());
    }

    @Test
    public void testSetGetRestart() {
        Pagination pagination = new Pagination();
        pagination.setRestart("true");
        assertEquals("true", pagination.getRestart());
    }

    @Test
    public void testToString() {
        Pagination pagination = new Pagination();
        pagination.setOffset(10);
        pagination.setLimit(20);
        pagination.setMatchedCnt(5);
        pagination.setSentCnt(30);
        pagination.setNextUri(URI.create("http://example.com/next"));
        pagination.setPrevUri(URI.create("http://example.com/prev"));
        pagination.setFirstUri(URI.create("http://example.com/first"));
        pagination.setLastUri(URI.create("http://example.com/last"));
        pagination.setPage(1);
        pagination.setPageSize(10);
        pagination.setTotalPageCnt(100);
        pagination.setRestart("true");

        String expectedString = "com.td.api.mbcca.shared.Pagination@" + Integer.toHexString(pagination.hashCode()) + "[offset=10,limit=20,matchedCnt=5,sentCnt=30,nextUri=http://example.com/next,prevUri=http://example.com/prev,firstUri=http://example.com/first,lastUri=http://example.com/last,page=1,pageSize=10,totalPageCnt=100,restart=true,]";

        assertEquals(expectedString, pagination.toString());
    }

    @Test
    public void testHashCode() {
        Pagination pagination1 = new Pagination();
        pagination1.setOffset(10);
        pagination1.setLimit(20);

        Pagination pagination2 = new Pagination();
        pagination2.setOffset(10);
        pagination2.setLimit(20);

        assertEquals(pagination1.hashCode(), pagination2.hashCode());
    }

    @Test
    public void testEquals() {
        Pagination pagination1 = new Pagination();
        pagination1.setOffset(10);
        pagination1.setLimit(20);

        Pagination pagination2 = new Pagination();
        pagination2.setOffset(10);
        pagination2.setLimit(20);

        assertTrue(pagination1.equals(pagination2));
    }

    @Test
    public void testNotEquals() {
        Pagination pagination1 = new Pagination();
        pagination1.setOffset(10);
        pagination1.setLimit(20);

        Pagination pagination2 = new Pagination();
        pagination2.setOffset(15);
        pagination2.setLimit(25);

        assertFalse(pagination1.equals(pagination2));
    }
}
