import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;

class AlertBlocklistSetupTest {

    @Test
    void testGetterAndSetterForBankingLineOfBusinessCd() {
        AlertBlocklistSetup setup = new AlertBlocklistSetup();
        setup.setBankingLineOfBusinessCd("LBOB123");
        assertEquals("LBOB123", setup.getBankingLineOfBusinessCd());
    }

    @Test
    void testGetterAndSetterForAlertGroup() {
        AlertBlocklistSetup setup = new AlertBlocklistSetup();
        AlertGroup group = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup.setAlertGroup(Arrays.asList(group));
        assertEquals(1, setup.getAlertGroup().size());
    }

    @Test
    void testToString() {
        AlertBlocklistSetup setup = new AlertBlocklistSetup();
        setup.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup.setAlertGroup(Arrays.asList(group));

        String result = setup.toString();
        assertTrue(result.contains("bankingLineOfBusinessCd"));
        assertTrue(result.contains("alertGroup"));
    }

    @Test
    void testHashCode() {
        AlertBlocklistSetup setup1 = new AlertBlocklistSetup();
        setup1.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group1 = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup1.setAlertGroup(Arrays.asList(group1));

        AlertBlocklistSetup setup2 = new AlertBlocklistSetup();
        setup2.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group2 = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup2.setAlertGroup(Arrays.asList(group2));

        assertEquals(setup1.hashCode(), setup2.hashCode());
    }

    @Test
    void testEqualsSameObject() {
        AlertBlocklistSetup setup = new AlertBlocklistSetup();
        assertTrue(setup.equals(setup));
    }

    @Test
    void testEqualsDifferentObject() {
        AlertBlocklistSetup setup1 = new AlertBlocklistSetup();
        setup1.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group1 = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup1.setAlertGroup(Arrays.asList(group1));

        AlertBlocklistSetup setup2 = new AlertBlocklistSetup();
        setup2.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group2 = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup2.setAlertGroup(Arrays.asList(group2));

        assertTrue(setup1.equals(setup2));
    }

    @Test
    void testEqualsNull() {
        AlertBlocklistSetup setup = new AlertBlocklistSetup();
        assertFalse(setup.equals(null));
    }

    @Test
    void testEqualsDifferentClass() {
        AlertBlocklistSetup setup = new AlertBlocklistSetup();
        assertFalse(setup.equals(new Object()));
    }

    @Test
    void testEqualsWithDifferentAlertGroup() {
        AlertBlocklistSetup setup1 = new AlertBlocklistSetup();
        setup1.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group1 = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup1.setAlertGroup(Arrays.asList(group1));

        AlertBlocklistSetup setup2 = new AlertBlocklistSetup();
        setup2.setBankingLineOfBusinessCd("LBOB123");
        AlertGroup group2 = new AlertGroup(); // Assuming AlertGroup has a default constructor
        setup2.setAlertGroup(Arrays.asList(group2));

        assertFalse(setup1.equals(setup2));
    }

    @Test
    void testEqualsWithNullAlertGroup() {
        AlertBlocklistSetup setup1 = new AlertBlocklistSetup();
        setup1.setAlertGroup(null);

        AlertBlocklistSetup setup2 = new AlertBlocklistSetup();
        setup2.setAlertGroup(null);

        assertTrue(setup1.equals(setup2));
    }

    @Test
    void testEqualsWithNullBankingLineOfBusinessCd() {
        AlertBlocklistSetup setup1 = new AlertBlocklistSetup();
        setup1.setBankingLineOfBusinessCd(null);

        AlertBlocklistSetup setup2 = new AlertBlocklistSetup();
        setup2.setBankingLineOfBusinessCd(null);

        assertTrue(setup1.equals(setup2));
    }

    @Test
    void testHashCodeWithNullValues() {
        AlertBlocklistSetup setup1 = new AlertBlocklistSetup();
        setup1.setBankingLineOfBusinessCd(null);
        setup1.setAlertGroup(null);

        AlertBlocklistSetup setup2 = new AlertBlocklistSetup();
        setup2.setBankingLineOfBusinessCd(null);
        setup2.setAlertGroup(null);

        assertEquals(setup1.hashCode(), setup2.hashCode());
    }
}
