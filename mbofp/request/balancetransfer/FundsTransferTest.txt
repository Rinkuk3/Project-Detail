import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class FundsTransferTest {

    private FundsTransfer fundsTransfer;

    @BeforeEach
    void setUp() {
        fundsTransfer = new FundsTransfer();
    }

    @Test
    void testGetAndSetRequestFundsSource() {
        RequestFundsSource requestFundsSource = new RequestFundsSource();
        fundsTransfer.setRequestFundsSource(requestFundsSource);
        assertEquals(requestFundsSource, fundsTransfer.getRequestFundsSource());
    }

    @Test
    void testGetAndSetRequestFundsDestination() {
        RequestFundsDestination requestFundsDestination = new RequestFundsDestination();
        fundsTransfer.setRequestFundsDestination(requestFundsDestination);
        assertEquals(requestFundsDestination, fundsTransfer.getRequestFundsDestination());
    }

    @Test
    void testGetAndSetFundsTransferMethodTypeCd() {
        String fundsTransferMethodTypeCd = "BANK_TRANSFER";
        fundsTransfer.setFundsTransferMethodTypeCd(fundsTransferMethodTypeCd);
        assertEquals(fundsTransferMethodTypeCd, fundsTransfer.getFundsTransferMethodTypeCd());
    }

    @Test
    void testGetAndSetFundsTransferTypeCd() {
        String fundsTransferTypeCd = "CREDIT";
        fundsTransfer.setFundsTransferTypeCd(fundsTransferTypeCd);
        assertEquals(fundsTransferTypeCd, fundsTransfer.getFundsTransferTypeCd());
    }

    @Test
    void testToString() {
        RequestFundsSource requestFundsSource = new RequestFundsSource();
        RequestFundsDestination requestFundsDestination = new RequestFundsDestination();
        String fundsTransferMethodTypeCd = "BANK_TRANSFER";
        String fundsTransferTypeCd = "CREDIT";

        fundsTransfer.setRequestFundsSource(requestFundsSource);
        fundsTransfer.setRequestFundsDestination(requestFundsDestination);
        fundsTransfer.setFundsTransferMethodTypeCd(fundsTransferMethodTypeCd);
        fundsTransfer.setFundsTransferTypeCd(fundsTransferTypeCd);

        String expected = "com.td.api.mbofp.request.balancetransfer.FundsTransfer@" 
            + Integer.toHexString(fundsTransfer.hashCode()) 
            + "[requestFundsSource=" + requestFundsSource
            + ",requestFundsDestination=" + requestFundsDestination
            + ",fundsTransferMethodTypeCd=" + fundsTransferMethodTypeCd
            + ",fundsTransferTypeCd=" + fundsTransferTypeCd + "]";

        assertEquals(expected, fundsTransfer.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        FundsTransfer otherFundsTransfer = new FundsTransfer();
        RequestFundsSource requestFundsSource = new RequestFundsSource();
        RequestFundsDestination requestFundsDestination = new RequestFundsDestination();
        String fundsTransferMethodTypeCd = "BANK_TRANSFER";
        String fundsTransferTypeCd = "CREDIT";

        fundsTransfer.setRequestFundsSource(requestFundsSource);
        fundsTransfer.setRequestFundsDestination(requestFundsDestination);
        fundsTransfer.setFundsTransferMethodTypeCd(fundsTransferMethodTypeCd);
        fundsTransfer.setFundsTransferTypeCd(fundsTransferTypeCd);

        otherFundsTransfer.setRequestFundsSource(requestFundsSource);
        otherFundsTransfer.setRequestFundsDestination(requestFundsDestination);
        otherFundsTransfer.setFundsTransferMethodTypeCd(fundsTransferMethodTypeCd);
        otherFundsTransfer.setFundsTransferTypeCd(fundsTransferTypeCd);

        assertTrue(fundsTransfer.equals(otherFundsTransfer));
        assertEquals(fundsTransfer.hashCode(), otherFundsTransfer.hashCode());
    }

    @Test
    void testNotEquals() {
        FundsTransfer otherFundsTransfer = new FundsTransfer();
        fundsTransfer.setFundsTransferMethodTypeCd("BANK_TRANSFER");
        otherFundsTransfer.setFundsTransferMethodTypeCd("WIRE_TRANSFER");

        assertFalse(fundsTransfer.equals(otherFundsTransfer));
    }

    @Test
    void testNullEquals() {
        assertFalse(fundsTransfer.equals(null));
    }

    @Test
    void testSameObjectEquals() {
        assertTrue(fundsTransfer.equals(fundsTransfer));
    }

    @Test
    void testEqualsDifferentClass() {
        assertFalse(fundsTransfer.equals(new Object()));
    }
}
