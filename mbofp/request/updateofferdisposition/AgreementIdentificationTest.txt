import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AgreementIdentificationTest {

    private AgreementIdentification agreementIdentification;

    @BeforeEach
    void setUp() {
        agreementIdentification = new AgreementIdentification();
    }

    @Test
    void testGetAndSetTypeCd() {
        String typeCd = "AgreementType";
        agreementIdentification.setTypeCd(typeCd);
        assertEquals(typeCd, agreementIdentification.getTypeCd());
    }

    @Test
    void testGetAndSetIdentifierVal() {
        String identifierVal = "123456";
        agreementIdentification.setIdentifierVal(identifierVal);
        assertEquals(identifierVal, agreementIdentification.getIdentifierVal());
    }

    @Test
    void testToString() {
        agreementIdentification.setTypeCd("AgreementType");
        agreementIdentification.setIdentifierVal("123456");

        String expected = "com.td.api.mbofp.request.updateofferdisposition.AgreementIdentification@" +
                          Integer.toHexString(agreementIdentification.hashCode()) +
                          "[typeCd=AgreementType,identifierVal=123456]";
        assertEquals(expected, agreementIdentification.toString());
    }

    @Test
    void testHashCode() {
        agreementIdentification.setTypeCd("AgreementType");
        agreementIdentification.setIdentifierVal("123456");

        int expectedHashCode = 1;
        expectedHashCode = 31 * expectedHashCode + (agreementIdentification.getTypeCd() == null ? 0 : agreementIdentification.getTypeCd().hashCode());
        expectedHashCode = 31 * expectedHashCode + (agreementIdentification.getIdentifierVal() == null ? 0 : agreementIdentification.getIdentifierVal().hashCode());

        assertEquals(expectedHashCode, agreementIdentification.hashCode());
    }

    @Test
    void testEquals() {
        agreementIdentification.setTypeCd("AgreementType");
        agreementIdentification.setIdentifierVal("123456");

        // Test equality with same object
        assertTrue(agreementIdentification.equals(agreementIdentification));

        // Test equality with another object having the same values
        AgreementIdentification anotherAgreementIdentification = new AgreementIdentification();
        anotherAgreementIdentification.setTypeCd("AgreementType");
        anotherAgreementIdentification.setIdentifierVal("123456");
        assertTrue(agreementIdentification.equals(anotherAgreementIdentification));

        // Test inequality with different values
        AgreementIdentification differentAgreementIdentification = new AgreementIdentification();
        differentAgreementIdentification.setTypeCd("OtherType");
        differentAgreementIdentification.setIdentifierVal("654321");
        assertFalse(agreementIdentification.equals(differentAgreementIdentification));

        // Test inequality with null
        assertFalse(agreementIdentification.equals(null));

        // Test inequality with an object of a different class
        assertFalse(agreementIdentification.equals(new Object()));
    }
}
