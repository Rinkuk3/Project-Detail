import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class IndividualTest {

    private Individual individual;

    @BeforeEach
    void setUp() {
        individual = new Individual();
    }

    @Test
    void testGetAndSetPartyId() {
        individual.setPartyId("12345");
        assertEquals("12345", individual.getPartyId());
    }

    @Test
    void testToString() {
        individual.setPartyId("12345");
        String expected = "com.td.api.mbofp.request.insuranceenrolment.Individual@" 
                + Integer.toHexString(individual.hashCode()) 
                + "[partyId=12345]";
        assertEquals(expected, individual.toString());

        individual.setPartyId(null);
        expected = "com.td.api.mbofp.request.insuranceenrolment.Individual@" 
                + Integer.toHexString(individual.hashCode()) 
                + "[partyId=<null>]";
        assertEquals(expected, individual.toString());
    }

    @Test
    void testHashCode() {
        individual.setPartyId("12345");
        Individual anotherIndividual = new Individual();
        anotherIndividual.setPartyId("12345");
        assertEquals(individual.hashCode(), anotherIndividual.hashCode());

        Individual differentIndividual = new Individual();
        differentIndividual.setPartyId("67890");
        assertNotEquals(individual.hashCode(), differentIndividual.hashCode());

        individual.setPartyId(null);
        differentIndividual.setPartyId(null);
        assertEquals(individual.hashCode(), differentIndividual.hashCode());
    }

    @Test
    void testEquals() {
        individual.setPartyId("12345");
        Individual anotherIndividual = new Individual();
        anotherIndividual.setPartyId("12345");
        assertTrue(individual.equals(anotherIndividual));

        Individual differentIndividual = new Individual();
        differentIndividual.setPartyId("67890");
        assertFalse(individual.equals(differentIndividual));

        individual.setPartyId(null);
        assertFalse(individual.equals(null));

        individual.setPartyId("12345");
        assertFalse(individual.equals(new Object()));

        Individual nullPartyId = new Individual();
        nullPartyId.setPartyId(null);
        assertTrue(individual.equals(nullPartyId));

        Individual sameReference = individual;
        assertTrue(individual.equals(sameReference));
    }
}
