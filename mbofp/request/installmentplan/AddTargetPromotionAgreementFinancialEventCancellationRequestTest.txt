import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AddTargetPromotionAgreementFinancialEventCancellationRequestTest {

    private AddTargetPromotionAgreementFinancialEventCancellationRequest request;

    @BeforeEach
    void setUp() {
        request = new AddTargetPromotionAgreementFinancialEventCancellationRequest();
    }

    @Test
    void testGetAndSetReasonCd() {
        String reasonCd = "REASON_001";
        request.setReasonCd(reasonCd);
        assertEquals(reasonCd, request.getReasonCd());
    }

    @Test
    void testGetAndSetSolicitationChannelTypeCd() {
        String solicitationChannelTypeCd = "CHANNEL_001";
        request.setSolicitationChannelTypeCd(solicitationChannelTypeCd);
        assertEquals(solicitationChannelTypeCd, request.getSolicitationChannelTypeCd());
    }

    @Test
    void testGetAndSetAccessChannelTypeCd() {
        String accessChannelTypeCd = "ACCESS_001";
        request.setAccessChannelTypeCd(accessChannelTypeCd);
        assertEquals(accessChannelTypeCd, request.getAccessChannelTypeCd());
    }

    @Test
    void testToString() {
        request.setReasonCd("REASON_001");
        request.setSolicitationChannelTypeCd("CHANNEL_001");
        request.setAccessChannelTypeCd("ACCESS_001");

        String expected = "com.td.api.mbofp.request.installmentplan.AddTargetPromotionAgreementFinancialEventCancellationRequest@"
            + Integer.toHexString(request.hashCode()) + "[reasonCd=REASON_001,solicitationChannelTypeCd=CHANNEL_001,accessChannelTypeCd=ACCESS_001]";

        assertEquals(expected, request.toString());
    }

    @Test
    void testHashCodeAndEquals() {
        AddTargetPromotionAgreementFinancialEventCancellationRequest request1 = new AddTargetPromotionAgreementFinancialEventCancellationRequest();
        request1.setReasonCd("REASON_001");
        request1.setSolicitationChannelTypeCd("CHANNEL_001");
        request1.setAccessChannelTypeCd("ACCESS_001");

        AddTargetPromotionAgreementFinancialEventCancellationRequest request2 = new AddTargetPromotionAgreementFinancialEventCancellationRequest();
        request2.setReasonCd("REASON_001");
        request2.setSolicitationChannelTypeCd("CHANNEL_001");
        request2.setAccessChannelTypeCd("ACCESS_001");

        assertTrue(request1.equals(request2));
        assertEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testHashCodeAndEqualsNotEqual() {
        AddTargetPromotionAgreementFinancialEventCancellationRequest request1 = new AddTargetPromotionAgreementFinancialEventCancellationRequest();
        request1.setReasonCd("REASON_001");
        request1.setSolicitationChannelTypeCd("CHANNEL_001");
        request1.setAccessChannelTypeCd("ACCESS_001");

        AddTargetPromotionAgreementFinancialEventCancellationRequest request2 = new AddTargetPromotionAgreementFinancialEventCancellationRequest();
        request2.setReasonCd("REASON_002");
        request2.setSolicitationChannelTypeCd("CHANNEL_002");
        request2.setAccessChannelTypeCd("ACCESS_002");

        assertFalse(request1.equals(request2));
        assertNotEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testEqualsDifferentClass() {
        assertFalse(request.equals(new Object()));
    }

    @Test
    void testNullEquals() {
        assertFalse(request.equals(null));
    }

    @Test
    void testSameObjectEquals() {
        assertTrue(request.equals(request));
    }
}
