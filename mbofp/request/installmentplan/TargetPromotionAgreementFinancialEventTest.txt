import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class TargetPromotionAgreementFinancialEventTest {

    private TargetPromotionAgreementFinancialEvent targetPromotionAgreementFinancialEvent;
    private PromotionProductOffer promotionProductOffer;
    private FinancialEvent financialEvent;
    private Agreement agreement;
    private PromotionChannel promotionChannel;

    @BeforeEach
    void setUp() {
        targetPromotionAgreementFinancialEvent = new TargetPromotionAgreementFinancialEvent();
        promotionProductOffer = new PromotionProductOffer();
        financialEvent = new FinancialEvent();
        agreement = new Agreement();
        promotionChannel = new PromotionChannel();
    }

    @Test
    void testGetAndSetPromotionProductOffer() {
        promotionProductOffer.setProductId("PRODUCT_ID");
        targetPromotionAgreementFinancialEvent.setPromotionProductOffer(promotionProductOffer);
        assertEquals(promotionProductOffer, targetPromotionAgreementFinancialEvent.getPromotionProductOffer());
    }

    @Test
    void testGetAndSetFinancialEvent() {
        targetPromotionAgreementFinancialEvent.setFinancialEvent(financialEvent);
        assertEquals(financialEvent, targetPromotionAgreementFinancialEvent.getFinancialEvent());
    }

    @Test
    void testGetAndSetAgreement() {
        targetPromotionAgreementFinancialEvent.setAgreement(agreement);
        assertEquals(agreement, targetPromotionAgreementFinancialEvent.getAgreement());
    }

    @Test
    void testGetAndSetPromotionChannel() {
        targetPromotionAgreementFinancialEvent.setPromotionChannel(promotionChannel);
        assertEquals(promotionChannel, targetPromotionAgreementFinancialEvent.getPromotionChannel());
    }

    @Test
    void testToString() {
        promotionProductOffer.setProductId("PRODUCT_ID");
        financialEvent.setEventId("EVENT_ID");
        agreement.setAgreementId("AGREEMENT_ID");
        promotionChannel.setSolicitationChannelTypeCd("CHANNEL");

        targetPromotionAgreementFinancialEvent.setPromotionProductOffer(promotionProductOffer);
        targetPromotionAgreementFinancialEvent.setFinancialEvent(financialEvent);
        targetPromotionAgreementFinancialEvent.setAgreement(agreement);
        targetPromotionAgreementFinancialEvent.setPromotionChannel(promotionChannel);

        String expected = "com.td.api.mbofp.request.installmentplan.TargetPromotionAgreementFinancialEvent@" 
                + Integer.toHexString(targetPromotionAgreementFinancialEvent.hashCode()) 
                + "[promotionProductOffer=" + promotionProductOffer 
                + ",financialEvent=" + financialEvent 
                + ",agreement=" + agreement 
                + ",promotionChannel=" + promotionChannel + "]";

        assertEquals(expected, targetPromotionAgreementFinancialEvent.toString());
    }

    @Test
    void testHashCodeAndEquals() {
        PromotionProductOffer offer1 = new PromotionProductOffer();
        offer1.setProductId("PRODUCT_ID");

        FinancialEvent event1 = new FinancialEvent();
        event1.setEventId("EVENT_ID");

        Agreement agreement1 = new Agreement();
        agreement1.setAgreementId("AGREEMENT_ID");

        PromotionChannel channel1 = new PromotionChannel();
        channel1.setSolicitationChannelTypeCd("CHANNEL");

        TargetPromotionAgreementFinancialEvent eventObj1 = new TargetPromotionAgreementFinancialEvent();
        eventObj1.setPromotionProductOffer(offer1);
        eventObj1.setFinancialEvent(event1);
        eventObj1.setAgreement(agreement1);
        eventObj1.setPromotionChannel(channel1);

        TargetPromotionAgreementFinancialEvent eventObj2 = new TargetPromotionAgreementFinancialEvent();
        eventObj2.setPromotionProductOffer(offer1);
        eventObj2.setFinancialEvent(event1);
        eventObj2.setAgreement(agreement1);
        eventObj2.setPromotionChannel(channel1);

        TargetPromotionAgreementFinancialEvent eventObj3 = new TargetPromotionAgreementFinancialEvent();
        eventObj3.setPromotionProductOffer(offer1);
        eventObj3.setFinancialEvent(event1);
        eventObj3.setAgreement(agreement1);
        eventObj3.setPromotionChannel(null);  // Different promotionChannel

        assertTrue(eventObj1.equals(eventObj2));
        assertFalse(eventObj1.equals(eventObj3));
        assertEquals(eventObj1.hashCode(), eventObj2.hashCode());
        assertNotEquals(eventObj1.hashCode(), eventObj3.hashCode());
    }

    @Test
    void testEqualsWithNull() {
        assertFalse(targetPromotionAgreementFinancialEvent.equals(null));
    }

    @Test
    void testEqualsWithDifferentClass() {
        assertFalse(targetPromotionAgreementFinancialEvent.equals(new Object()));
    }

    @Test
    void testSameObjectEquals() {
        assertTrue(targetPromotionAgreementFinancialEvent.equals(targetPromotionAgreementFinancialEvent));
    }

    @Test
    void testEqualsWithNullValues() {
        TargetPromotionAgreementFinancialEvent eventObj1 = new TargetPromotionAgreementFinancialEvent();
        eventObj1.setPromotionProductOffer(null);
        eventObj1.setFinancialEvent(null);
        eventObj1.setAgreement(null);
        eventObj1.setPromotionChannel(null);

        TargetPromotionAgreementFinancialEvent eventObj2 = new TargetPromotionAgreementFinancialEvent();
        eventObj2.setPromotionProductOffer(null);
        eventObj2.setFinancialEvent(null);
        eventObj2.setAgreement(null);
        eventObj2.setPromotionChannel(null);

        assertTrue(eventObj1.equals(eventObj2));
    }

    @Test
    void testHashCodeWithNullValues() {
        TargetPromotionAgreementFinancialEvent eventObj1 = new TargetPromotionAgreementFinancialEvent();
        eventObj1.setPromotionProductOffer(null);
        eventObj1.setFinancialEvent(null);
        eventObj1.setAgreement(null);
        eventObj1.setPromotionChannel(null);

        TargetPromotionAgreementFinancialEvent eventObj2 = new TargetPromotionAgreementFinancialEvent();
        eventObj2.setPromotionProductOffer(null);
        eventObj2.setFinancialEvent(null);
        eventObj2.setAgreement(null);
        eventObj2.setPromotionChannel(null);

        assertEquals(eventObj1.hashCode(), eventObj2.hashCode());
    }
}
