import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class BonusRewardTest {

    private BonusReward bonusReward;

    @BeforeEach
    void setUp() {
        bonusReward = new BonusReward();
    }

    @Test
    void testGetAndSetBonusRewardId() {
        String bonusRewardId = "BR123";
        bonusReward.setBonusRewardId(bonusRewardId);
        assertEquals(bonusRewardId, bonusReward.getBonusRewardId());
    }

    @Test
    void testToString() {
        bonusReward.setBonusRewardId("BR123");
        
        String expectedString = "com.td.api.mbofp.response.retrievecampaign.BonusReward@" +
                                Integer.toHexString(bonusReward.hashCode()) +
                                "[bonusRewardId=BR123]";
        assertEquals(expectedString, bonusReward.toString());
    }

    @Test
    void testHashCode() {
        bonusReward.setBonusRewardId("BR123");
        
        int expectedHashCode = 1;
        expectedHashCode = 31 * expectedHashCode + (bonusReward.getBonusRewardId() == null ? 0 : bonusReward.getBonusRewardId().hashCode());
        
        assertEquals(expectedHashCode, bonusReward.hashCode());
    }

    @Test
    void testEquals() {
        bonusReward.setBonusRewardId("BR123");

        // Test equality with the same object
        assertTrue(bonusReward.equals(bonusReward));

        // Test equality with another object having the same bonusRewardId
        BonusReward anotherBonusReward = new BonusReward();
        anotherBonusReward.setBonusRewardId("BR123");
        assertTrue(bonusReward.equals(anotherBonusReward));

        // Test inequality with a different bonusRewardId
        BonusReward differentBonusReward = new BonusReward();
        differentBonusReward.setBonusRewardId("BR456");
        assertFalse(bonusReward.equals(differentBonusReward));

        // Test inequality with null
        assertFalse(bonusReward.equals(null));

        // Test inequality with an object of a different class
        assertFalse(bonusReward.equals(new Object()));
    }
}
