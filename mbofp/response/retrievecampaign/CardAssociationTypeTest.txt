import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CardAssociationTypeTest {

    private CardAssociationType cardAssociationType;

    @BeforeEach
    void setUp() {
        cardAssociationType = new CardAssociationType();
    }

    @Test
    void testGetAndSetTypeCd() {
        String typeCd = "T123";
        cardAssociationType.setTypeCd(typeCd);
        assertEquals(typeCd, cardAssociationType.getTypeCd());
    }

    @Test
    void testGetAndSetTypeDesc() {
        String typeDesc = "Type Description";
        cardAssociationType.setTypeDesc(typeDesc);
        assertEquals(typeDesc, cardAssociationType.getTypeDesc());
    }

    @Test
    void testToString() {
        cardAssociationType.setTypeCd("T123");
        cardAssociationType.setTypeDesc("Type Description");

        String expectedString = "com.td.api.mbofp.response.retrievecampaign.CardAssociationType@" +
                                Integer.toHexString(cardAssociationType.hashCode()) +
                                "[typeCd=T123,typeDesc=Type Description]";
        assertEquals(expectedString, cardAssociationType.toString());
    }

    @Test
    void testHashCode() {
        cardAssociationType.setTypeCd("T123");
        cardAssociationType.setTypeDesc("Type Description");

        int expectedHashCode = 1;
        expectedHashCode = 31 * expectedHashCode + (cardAssociationType.getTypeCd() == null ? 0 : cardAssociationType.getTypeCd().hashCode());
        expectedHashCode = 31 * expectedHashCode + (cardAssociationType.getTypeDesc() == null ? 0 : cardAssociationType.getTypeDesc().hashCode());

        assertEquals(expectedHashCode, cardAssociationType.hashCode());
    }

    @Test
    void testEquals() {
        cardAssociationType.setTypeCd("T123");
        cardAssociationType.setTypeDesc("Type Description");

        // Test equality with the same object
        assertTrue(cardAssociationType.equals(cardAssociationType));

        // Test equality with another object having the same field values
        CardAssociationType anotherCardAssociationType = new CardAssociationType();
        anotherCardAssociationType.setTypeCd("T123");
        anotherCardAssociationType.setTypeDesc("Type Description");
        assertTrue(cardAssociationType.equals(anotherCardAssociationType));

        // Test inequality with different field values
        CardAssociationType differentCardAssociationType = new CardAssociationType();
        differentCardAssociationType.setTypeCd("T124");
        assertFalse(cardAssociationType.equals(differentCardAssociationType));

        // Test inequality with null
        assertFalse(cardAssociationType.equals(null));

        // Test inequality with an object of a different class
        assertFalse(cardAssociationType.equals(new Object()));
    }
}
