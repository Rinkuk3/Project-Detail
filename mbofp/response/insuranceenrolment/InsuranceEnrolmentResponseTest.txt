import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class InsuranceEnrolmentResponseTest {

    private InsuranceEnrolmentResponse response;

    @BeforeEach
    void setUp() {
        response = new InsuranceEnrolmentResponse();
    }

    @Test
    void testGetAndSetEventId() {
        String eventId = "event123";
        response.setEventId(eventId);
        assertEquals(eventId, response.getEventId());
    }

    @Test
    void testToString() {
        response.setEventId("event123");
        
        String expectedString = "com.td.api.mbofp.response.insuranceenrolment.InsuranceEnrolmentResponse@" +
                                Integer.toHexString(response.hashCode()) +
                                "[eventId=event123]";
        assertEquals(expectedString, response.toString());
    }

    @Test
    void testHashCode() {
        response.setEventId("event123");
        
        int expectedHashCode = 1;
        expectedHashCode = 31 * expectedHashCode + (response.getEventId() == null ? 0 : response.getEventId().hashCode());
        
        assertEquals(expectedHashCode, response.hashCode());
    }

    @Test
    void testEquals() {
        response.setEventId("event123");

        // Test equality with the same object
        assertTrue(response.equals(response));

        // Test equality with another object having the same eventId
        InsuranceEnrolmentResponse anotherResponse = new InsuranceEnrolmentResponse();
        anotherResponse.setEventId("event123");
        assertTrue(response.equals(anotherResponse));

        // Test inequality with a different eventId
        InsuranceEnrolmentResponse differentResponse = new InsuranceEnrolmentResponse();
        differentResponse.setEventId("event456");
        assertFalse(response.equals(differentResponse));

        // Test inequality with null
        assertFalse(response.equals(null));

        // Test inequality with an object of a different class
        assertFalse(response.equals(new Object()));
    }
}
