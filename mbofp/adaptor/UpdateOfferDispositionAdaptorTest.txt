package com.td.mbna.msec.midtier.mbofp.adaptor;

import com.td.api.mbofp.request.updateofferdisposition.UpdateOfferDispositionRequest;
import com.td.mbna.msec.midtier.util.services.MSECConstants;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;

import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class UpdateOfferDispositionAdaptorTest {

    @InjectMocks
    private UpdateOfferDispositionAdaptor updateOfferDispositionAdaptor;

    private Map<String, Object> params;

    @BeforeEach
    public void setUp() {
        params = new HashMap<>();
        params.put("PARAM_ROLECD", "ROLE_CD");
        params.put("PARAM_ACCT_ID", "1234567890");
    }

    @Test
    public void testGetRequest() {
        UpdateOfferDispositionRequest request = updateOfferDispositionAdaptor.getRequest(params);

        // Assert that the request is not null
        assertEquals("ROLE_CD", request.getPartyResponse().getParty().getRoleCd());
        assertEquals("1234567890", request.getPartyResponse().getPromotionOfferToAgreement().getAgreementIdentification().getIdentifierVal());
        assertEquals("ACCOUNT", request.getPartyResponse().getPromotionOfferToAgreement().getAgreementIdentification().getTypeCd());
        assertEquals(MSECConstants.INTERNET_SECURE, request.getPartyResponse().getSolicitationChannelTypeCd());
        assertEquals(MSECConstants.ONLINE_SECURE_SITE, request.getPartyResponse().getAccessChannelTypeCd());
    }
}
