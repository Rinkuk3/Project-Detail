package com.td.mbna.msec.midtier.mbofp.adaptor;

import com.td.api.mbofp.request.common.TransactionCccyamt;
import com.td.api.mbofp.request.installmentplan.*;
import com.td.mbna.msec.midtier.offers.payload.requestInstallmentPlan.RequestInstallmentPlanRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class InstallmentPlanAdaptorTest {

    private InstallmentPlanAdaptor installmentPlanAdaptor;

    @BeforeEach
    public void setUp() {
        installmentPlanAdaptor = new InstallmentPlanAdaptor();
    }

    @Test
    public void testGenerateIPFinancialEventRequest() {
        RequestInstallmentPlanRequest requestInstallmentPlanRequest = new RequestInstallmentPlanRequest();
        RequestInstallmentPlanRequest.RequestPayload requestPayload = new RequestInstallmentPlanRequest.RequestPayload();
        
        requestPayload.setOfferId("offer123");
        requestPayload.setProductId("product123");
        requestPayload.setEventId("event123");
        requestPayload.setNickName("Test Nickname");
        requestPayload.setTransactionAmt(100.50);
        requestPayload.setStatementDataDt("2024-12-23");

        requestInstallmentPlanRequest.setRequestPayload(requestPayload);
        requestInstallmentPlanRequest.setAcctNum("acct123");
        requestInstallmentPlanRequest.setCardNum("card123");

        AddTargetPromotionAgreementFinancialEventRequest request = installmentPlanAdaptor.generateIPFinancialEventRequest(requestInstallmentPlanRequest);

        assertNotNull(request);
        assertNotNull(request.getTargetPromotionAgreementFinancialEvent());
        assertNotNull(request.getTargetPromotionAgreementFinancialEvent().getPromotionProductOffer());
        assertEquals("offer123", request.getTargetPromotionAgreementFinancialEvent().getPromotionProductOffer().getOfferId());
        assertEquals("product123", request.getTargetPromotionAgreementFinancialEvent().getPromotionProductOffer().getProductId());
        
        assertNotNull(request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent());
        assertEquals("INSTALLMENT-PLAN", request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getEventDesc());
        assertEquals("event123", request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getEventId());
        assertEquals("Test Nickname", request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getDebitTxt());
        assertEquals("0001", request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getTermBalanceCd());
        assertNotNull(request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getTransactionCccyamt());
        assertEquals(100.50, request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getTransactionCccyamt().getAmount());
        assertEquals("CAD", request.getTargetPromotionAgreementFinancialEvent().getFinancialEvent().getTransactionCccyamt().getCurrencyCd());

        assertNotNull(request.getTargetPromotionAgreementFinancialEvent().getAgreement());
        assertEquals("acct123", request.getTargetPromotionAgreementFinancialEvent().getAgreement().getHostAgreementNum());
        assertNotNull(request.getTargetPromotionAgreementFinancialEvent().getAgreement().getAgreementToCard());
        assertEquals("card123", request.getTargetPromotionAgreementFinancialEvent().getAgreement().getAgreementToCard().getCardNum());

        assertNotNull(request.getTargetPromotionAgreementFinancialEvent().getPromotionChannel());
        assertEquals("ONLINE-SECURE-SITE", request.getTargetPromotionAgreementFinancialEvent().getPromotionChannel().getAccessChannelTypeCd());
        assertEquals("INTERNET-SECURE", request.getTargetPromotionAgreementFinancialEvent().getPromotionChannel().getSolicitationChannelTypeCd());
    }
}
