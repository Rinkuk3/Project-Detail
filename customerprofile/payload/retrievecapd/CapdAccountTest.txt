package com.td.mbna.msec.midtier.customerprofile.payload.retrievecapd;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class CapdAccountTest {

    private CapdAccount capdAccount;

    @BeforeEach
    void setUp() {
        capdAccount = new CapdAccount();
    }

    @Test
    public void testAccountIdGetterAndSetter() {
        capdAccount.setaccountId("12345");
        assertThat(capdAccount.getaccountId()).isEqualTo("12345");
    }

    @Test
    public void testOverLimitPrefGetterAndSetter() {
        capdAccount.setOverLimitPref("Y");
        assertThat(capdAccount.getOverLimitPref()).isEqualTo("Y");
    }

    @Test
    public void testThresholdValueGetterAndSetter() {
        capdAccount.setThresholdValue("100");
        assertThat(capdAccount.getThresholdValue()).isEqualTo("100");
    }

    @Test
    public void testThresholdPrefGetterAndSetter() {
        capdAccount.setThresholdPref("Low");
        assertThat(capdAccount.getThresholdPref()).isEqualTo("Low");
    }

    @Test
    public void testSpendValueGetterAndSetter() {
        capdAccount.setSpendValue("500");
        assertThat(capdAccount.getSpendValue()).isEqualTo("500");
    }

    @Test
    public void testSpendPrefGetterAndSetter() {
        capdAccount.setSpendPref("Medium");
        assertThat(capdAccount.getSpendPref()).isEqualTo("Medium");
    }

    @Test
    public void testToString() {
        capdAccount.setaccountId("12345");
        capdAccount.setOverLimitPref("Y");
        capdAccount.setThresholdValue("100");
        capdAccount.setThresholdPref("Low");
        capdAccount.setSpendValue("500");
        capdAccount.setSpendPref("Medium");

        String expectedString = "CapdAccount [accountId=12345, overLimitPref=Y, thresholdValue=100, spendValue=500, spendPref=Medium, thresholdPref=Low]";
        assertThat(capdAccount.toString()).isEqualTo(expectedString);
    }

    @Test
    public void testHashCode() {
        capdAccount.setaccountId("12345");
        capdAccount.setOverLimitPref("Y");
        capdAccount.setThresholdValue("100");
        capdAccount.setSpendValue("500");
        capdAccount.setSpendPref("Medium");
        capdAccount.setThresholdPref("Low");

        int hashCode = capdAccount.hashCode();
        assertThat(hashCode).isEqualTo(capdAccount.hashCode());
    }

    @Test
    public void testEqualsSameObject() {
        capdAccount.setaccountId("12345");
        capdAccount.setOverLimitPref("Y");
        capdAccount.setThresholdValue("100");
        capdAccount.setSpendValue("500");
        capdAccount.setSpendPref("Medium");
        capdAccount.setThresholdPref("Low");

        CapdAccount other = capdAccount;

        assertThat(capdAccount).isEqualTo(other);
    }

    @Test
    public void testEqualsDifferentObjectsWithSameState() {
        capdAccount.setaccountId("12345");
        capdAccount.setOverLimitPref("Y");
        capdAccount.setThresholdValue("100");
        capdAccount.setSpendValue("500");
        capdAccount.setSpendPref("Medium");
        capdAccount.setThresholdPref("Low");

        CapdAccount other = new CapdAccount();
        other.setaccountId("12345");
        other.setOverLimitPref("Y");
        other.setThresholdValue("100");
        other.setSpendValue("500");
        other.setSpendPref("Medium");
        other.setThresholdPref("Low");

        assertThat(capdAccount).isEqualTo(other);
    }

    @Test
    public void testEqualsDifferentState() {
        capdAccount.setaccountId("12345");
        capdAccount.setOverLimitPref("Y");
        capdAccount.setThresholdValue("100");
        capdAccount.setSpendValue("500");
        capdAccount.setSpendPref("Medium");
        capdAccount.setThresholdPref("Low");

        CapdAccount other = new CapdAccount();
        other.setaccountId("67890");
        other.setOverLimitPref("N");
        other.setThresholdValue("200");
        other.setSpendValue("300");
        other.setSpendPref("Low");
        other.setThresholdPref("High");

        assertThat(capdAccount).isNotEqualTo(other);
    }

    @Test
    public void testNullEdgeCase() {
        capdAccount.setaccountId(null);
        capdAccount.setOverLimitPref(null);
        capdAccount.setThresholdValue(null);
        capdAccount.setThresholdPref(null);
        capdAccount.setSpendValue(null);
        capdAccount.setSpendPref(null);

        assertThat(capdAccount.getaccountId()).isNull();
        assertThat(capdAccount.getOverLimitPref()).isNull();
        assertThat(capdAccount.getThresholdValue()).isNull();
        assertThat(capdAccount.getThresholdPref()).isNull();
        assertThat(capdAccount.getSpendValue()).isNull();
        assertThat(capdAccount.getSpendPref()).isNull();
    }
}
