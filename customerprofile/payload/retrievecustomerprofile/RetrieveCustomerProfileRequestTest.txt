package com.td.mbna.msec.midtier.customerprofile.payload.retrievecustomerprofile;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class RetrieveCustomerProfileRequestTest {

    private RetrieveCustomerProfileRequest request;

    @BeforeEach
    void setUp() {
        request = new RetrieveCustomerProfileRequest();
    }

    // Test Getter and Setter for sessionInfo
    @Test
    public void testSessionInfoGetterSetter() {
        request.setSessionInfo("sessionInfo");
        assertThat(request.getSessionInfo()).isEqualTo("sessionInfo");
    }

    // Test Getter and Setter for custId
    @Test
    public void testCustIdGetterSetter() {
        request.setCustId("custId");
        assertThat(request.getCustId()).isEqualTo("custId");
    }

    // Test Getter and Setter for aliasCustId
    @Test
    public void testAliasCustIdGetterSetter() {
        request.setAliasCustId("aliasCustId");
        assertThat(request.getAliasCustId()).isEqualTo("aliasCustId");
    }

    // Test Getter and Setter for acctNum
    @Test
    public void testAcctNumGetterSetter() {
        request.setAcctNum("12345");
        assertThat(request.getAcctNum()).isEqualTo("12345");
    }

    // Test Getter and Setter for acctType
    @Test
    public void testAcctTypeGetterSetter() {
        request.setAcctType("type");
        assertThat(request.getAcctType()).isEqualTo("type");
    }

    // Test Getter and Setter for languagePref
    @Test
    public void testLanguagePrefGetterSetter() {
        request.setLanguagePref("EN");
        assertThat(request.getLanguagePref()).isEqualTo("EN");
    }

    // Test Getter and Setter for auditInfo
    @Test
    public void testAuditInfoGetterSetter() {
        request.setAuditInfo("auditInfo");
        assertThat(request.getAuditInfo()).isEqualTo("auditInfo");
    }

    // Test Getter and Setter for isPrimaryUser
    @Test
    public void testIsPrimaryUserGetterSetter() {
        request.setIsPrimaryUser(true);
        assertThat(request.getIsPrimaryUser()).isTrue();
    }

    // Test Getter and Setter for reserved1
    @Test
    public void testReserved1GetterSetter() {
        request.setReserved1("reserved1");
        assertThat(request.getReserved1()).isEqualTo("reserved1");
    }

    // Test Getter and Setter for custInterface
    @Test
    public void testCustInterfaceGetterSetter() {
        request.setCustInterface("custInterface");
        assertThat(request.getCustInterface()).isEqualTo("custInterface");
    }

    // Test Getter and Setter for requestPayload
    @Test
    public void testRequestPayloadGetterSetter() {
        RequestPayload payload = new RequestPayload();
        payload.setCustId("payloadCustId");
        request.setRequestPayload(payload);
        assertThat(request.getRequestPayload()).isEqualTo(payload);
    }

    // Test equals() - with itself
    @Test
    public void testEqualsWithItself() {
        request.setSessionInfo("sessionInfo");
        request.setCustId("custId");
        request.setAliasCustId("aliasCustId");
        request.setAcctNum("12345");

        assertThat(request.equals(request)).isTrue();
    }

    // Test equals() with identical fields
    @Test
    public void testEqualsWithIdenticalFields() {
        RetrieveCustomerProfileRequest other = new RetrieveCustomerProfileRequest();
        other.setSessionInfo("sessionInfo");
        other.setCustId("custId");
        other.setAliasCustId("aliasCustId");
        other.setAcctNum("12345");

        assertThat(request.setSessionInfo("sessionInfo"));
        assertThat(request.equals(other)).isTrue();
    }

    // Test hashCode() logic
    @Test
    public void testHashCodeConsistency() {
        request.setSessionInfo("sessionInfo");
        request.setCustId("custId");
        request.setAliasCustId("aliasCustId");
        request.setAcctNum("12345");

        int expectedHashCode = request.hashCode();
        assertThat(request.hashCode()).isEqualTo(expectedHashCode);
    }

    // Test toString()
    @Test
    public void testToString() {
        request.setSessionInfo("sessionInfo");
        request.setCustId("custId");
        request.setAliasCustId("aliasCustId");

        String expectedString = "RetrieveCustomerProfileRequest@" + Integer.toHexString(System.identityHashCode(request)) +
                "[sessionInfo=sessionInfo,custId=custId,aliasCustId=aliasCustId,acctNum=<null>,acctType=<null>,languagePref=<null>,auditInfo=<null>,isPrimaryUser=<null>,reserved1=<null>,custInterface=<null>,requestPayload=<null>]";
        assertThat(request.toString()).isEqualTo(expectedString);
    }
}
