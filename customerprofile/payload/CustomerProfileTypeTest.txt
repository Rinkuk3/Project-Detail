package com.td.mbna.msec.midtier.customerprofile.payload;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class CustomerProfileTypeTest {

    private CustomerProfileType customerProfileType;

    @BeforeEach
    void setUp() {
        customerProfileType = new CustomerProfileType();
    }

    @Test
    public void testGetterAndSetterCustInfo() {
        CustomerInfoType custInfo = new CustomerInfoType();
        customerProfileType.setCustInfo(custInfo);
        assertThat(customerProfileType.getCustInfo()).isEqualTo(custInfo);
    }

    @Test
    public void testGetterAndSetterAccounts() {
        List<CustomerAcctType> accounts = new ArrayList<>();
        accounts.add(new CustomerAcctType());
        customerProfileType.setAccounts(accounts);
        assertThat(customerProfileType.getAccounts()).isEqualTo(accounts);
    }

    @Test
    public void testHashCode() {
        customerProfileType.setCustInfo(new CustomerInfoType());
        List<CustomerAcctType> accounts = new ArrayList<>();
        accounts.add(new CustomerAcctType());
        customerProfileType.setAccounts(accounts);

        int hashCode = customerProfileType.hashCode();
        assertThat(hashCode).isNotZero();
    }

    @Test
    public void testEqualsSameObject() {
        assertThat(customerProfileType.equals(customerProfileType)).isTrue();
    }

    @Test
    public void testEqualsDifferentObject() {
        CustomerProfileType other = new CustomerProfileType();
        other.setCustInfo(new CustomerInfoType());
        List<CustomerAcctType> accounts = new ArrayList<>();
        accounts.add(new CustomerAcctType());
        other.setAccounts(accounts);

        customerProfileType.setCustInfo(new CustomerInfoType());
        customerProfileType.setAccounts(accounts);

        assertThat(customerProfileType.equals(other)).isTrue();
    }

    @Test
    public void testEqualsWhenFieldsAreNull() {
        CustomerProfileType other = new CustomerProfileType();
        assertThat(customerProfileType.equals(other)).isTrue();
    }

    @Test
    public void testToString() {
        customerProfileType.setCustInfo(new CustomerInfoType());
        List<CustomerAcctType> accounts = new ArrayList<>();
        accounts.add(new CustomerAcctType());
        customerProfileType.setAccounts(accounts);

        String result = customerProfileType.toString();
        assertThat(result).contains("custInfo");
        assertThat(result).contains("accounts");
    }
}
