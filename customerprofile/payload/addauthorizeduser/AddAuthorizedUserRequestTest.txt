package com.td.mbna.msec.midtier.customerprofile.payload.addauthorizeduser;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AddAuthorizedUserRequestTest {

    @Test
    public void testGetterAndSetter() {
        AddAuthorizedUserRequest request = new AddAuthorizedUserRequest();
        
        // Test setting and getting requestPayload
        RequestPayload requestPayload = new RequestPayload();
        request.setRequestPayload(requestPayload);
        assertEquals(requestPayload, request.getRequestPayload());
    }

    @Test
    public void testToString() {
        AddAuthorizedUserRequest request = new AddAuthorizedUserRequest();
        request.setSessionInfo("sessionInfoValue");
        request.setCustId("cust123");
        request.setAliasCustId("aliasCust123");
        request.setAcctNum("accountNumber");
        request.setAcctType("checking");
        request.setLanguagePref("EN");
        request.setAuditInfo("audit123");
        request.setIsPrimaryUser("true");
        request.setReserved1("reserved");
        request.setCustInterface("interface123");
        
        String result = request.toString();
        assertNotNull(result);
        assertTrue(result.contains("sessionInfo=sessionInfoValue"));
        assertTrue(result.contains("custId=cust123"));
    }

    @Test
    public void testHashCode() {
        AddAuthorizedUserRequest request = new AddAuthorizedUserRequest();
        request.setSessionInfo("sessionInfoValue");
        request.setAuditInfo("audit123");
        request.setAliasCustId("aliasCustId");
        
        int hashCode = request.hashCode();
        assertNotNull(hashCode);
    }

    @Test
    public void testEquals_IdenticalObject() {
        AddAuthorizedUserRequest request1 = new AddAuthorizedUserRequest();
        AddAuthorizedUserRequest request2 = new AddAuthorizedUserRequest();
        
        request1.setSessionInfo("sessionInfoValue");
        request1.setAuditInfo("audit123");
        
        request2.setSessionInfo("sessionInfoValue");
        request2.setAuditInfo("audit123");
        
        assertTrue(request1.equals(request2));
    }

    @Test
    public void testEquals_DifferentObject() {
        AddAuthorizedUserRequest request1 = new AddAuthorizedUserRequest();
        AddAuthorizedUserRequest request2 = new AddAuthorizedUserRequest();
        
        request1.setSessionInfo("sessionInfoValue");
        request2.setSessionInfo("differentSessionInfo");
        
        assertFalse(request1.equals(request2));
    }

    @Test
    public void testEquals_Null() {
        AddAuthorizedUserRequest request = new AddAuthorizedUserRequest();
        
        assertFalse(request.equals(null));
    }

    @Test
    public void testEquals_DifferentClass() {
        AddAuthorizedUserRequest request = new AddAuthorizedUserRequest();
        assertFalse(request.equals("RandomClass"));
    }
}
