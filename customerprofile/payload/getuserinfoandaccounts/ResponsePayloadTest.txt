package com.td.mbna.msec.midtier.customerprofile.payload.getuserinfoandaccounts;

import com.td.mbna.msec.midtier.customerprofile.payload.CustomerAcctLogonInfoType;
import com.td.mbna.msec.midtier.types.common.AccountOffersType;
import com.td.mbna.msec.midtier.types.common.AcctOverviewType;
import com.td.mbna.msec.midtier.types.common.CustAcctType;
import com.td.mbna.msec.midtier.types.eligibility.CustEligType;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class ResponsePayloadTest {

    private ResponsePayload responsePayload;

    @BeforeEach
    void setUp() {
        responsePayload = new ResponsePayload();
    }

    @Test
    public void testCustIdGetterAndSetter() {
        responsePayload.setCustId("cust123");
        assertThat(responsePayload.getCustId()).isEqualTo("cust123");
    }

    @Test
    public void testCustEligGetterAndSetter() {
        CustEligType custEligType = new CustEligType();
        responsePayload.setCustElig(custEligType);
        assertThat(responsePayload.getCustElig()).isEqualTo(custEligType);
    }

    @Test
    public void testAccountCustomerDetailsGetterAndSetter() {
        List<CustomerAcctLogonInfoType> details = new ArrayList<>();
        details.add(new CustomerAcctLogonInfoType());
        responsePayload.setAccountCustomerDetails(details);
        assertThat(responsePayload.getAccountCustomerDetails()).isEqualTo(details);
    }

    @Test
    public void testCustAcctsGetterAndSetter() {
        List<AcctOverviewType> accts = new ArrayList<>();
        accts.add(new AcctOverviewType());
        responsePayload.setCustAccts(accts);
        assertThat(responsePayload.getCustAccts()).isEqualTo(accts);
    }

    @Test
    public void testAccountOffersGetterAndSetter() {
        List<AccountOffersType> offers = new ArrayList<>();
        offers.add(new AccountOffersType());
        responsePayload.setAccountOffers(offers);
        assertThat(responsePayload.getAccountOffers()).isEqualTo(offers);
    }

    @Test
    public void testEnrolledAcctsGetterAndSetter() {
        List<CustAcctType> accounts = new ArrayList<>();
        accounts.add(new CustAcctType());
        responsePayload.setEnrolledAccts(accounts);
        assertThat(responsePayload.getEnrolledAccts()).isEqualTo(accounts);
    }

    @Test
    public void testAllAcctsGetterAndSetter() {
        List<CustAcctType> allAccts = new ArrayList<>();
        allAccts.add(new CustAcctType());
        responsePayload.setAllAccts(allAccts);
        assertThat(responsePayload.getAllAccts()).isEqualTo(allAccts);
    }

    @Test
    public void testKycAcctsGetterAndSetter() {
        List<CustAcctType> kycAccounts = new ArrayList<>();
        kycAccounts.add(new CustAcctType());
        responsePayload.setKycAccts(kycAccounts);
        assertThat(responsePayload.getKycAccts()).isEqualTo(kycAccounts);
    }

    @Test
    public void testCliAcctsGetterAndSetter() {
        List<CustAcctType> cliAccounts = new ArrayList<>();
        cliAccounts.add(new CustAcctType());
        responsePayload.setCliAccts(cliAccounts);
        assertThat(responsePayload.getCliAccts()).isEqualTo(cliAccounts);
    }

    @Test
    public void testEmptyLists() {
        responsePayload.setAccountCustomerDetails(new ArrayList<>());
        responsePayload.setCustAccts(new ArrayList<>());
        responsePayload.setAccountOffers(new ArrayList<>());
        responsePayload.setEnrolledAccts(new ArrayList<>());
        responsePayload.setAllAccts(new ArrayList<>());
        responsePayload.setKycAccts(new ArrayList<>());
        responsePayload.setCliAccts(new ArrayList<>());

        assertThat(responsePayload.getAccountCustomerDetails()).isEmpty();
        assertThat(responsePayload.getCustAccts()).isEmpty();
        assertThat(responsePayload.getAccountOffers()).isEmpty();
        assertThat(responsePayload.getEnrolledAccts()).isEmpty();
        assertThat(responsePayload.getAllAccts()).isEmpty();
        assertThat(responsePayload.getKycAccts()).isEmpty();
        assertThat(responsePayload.getCliAccts()).isEmpty();
    }

    @Test
    public void testNullCollections() {
        responsePayload.setAccountCustomerDetails(null);
        responsePayload.setCustAccts(null);
        responsePayload.setAccountOffers(null);
        responsePayload.setEnrolledAccts(null);
        responsePayload.setAllAccts(null);
        responsePayload.setKycAccts(null);
        responsePayload.setCliAccts(null);

        assertThat(responsePayload.getAccountCustomerDetails()).isNull();
        assertThat(responsePayload.getCustAccts()).isNull();
        assertThat(responsePayload.getAccountOffers()).isNull();
        assertThat(responsePayload.getEnrolledAccts()).isNull();
        assertThat(responsePayload.getAllAccts()).isNull();
        assertThat(responsePayload.getKycAccts()).isNull();
        assertThat(responsePayload.getCliAccts()).isNull();
    }
}
