package com.td.mbna.msec.midtier.autopay.payload.validatebankaccount;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ValidateBankAccountRequestTest {

    private ValidateBankAccountRequest validateBankAccountRequest;
    private RequestPayload requestPayload;

    @BeforeEach
    void setUp() {
        // Initialize the ValidateBankAccountRequest object and RequestPayload before each test
        validateBankAccountRequest = new ValidateBankAccountRequest();
        requestPayload = new RequestPayload();
        requestPayload.setBankAccount("123456789");
        requestPayload.setBankNum("001");
        requestPayload.setBranchNum("123");
    }

    @Test
    void testConstructor() {
        // Test if the constructor initializes the requestPayload correctly
        assertNotNull(validateBankAccountRequest.getRequestPayload(), "RequestPayload should be initialized");
    }

    @Test
    void testSetAndGetRequestPayload() {
        // Test getter and setter for requestPayload
        validateBankAccountRequest.setRequestPayload(requestPayload);
        assertEquals(requestPayload, validateBankAccountRequest.getRequestPayload(), "The requestPayload should match the one set");
    }

    @Test
    void testToString() {
        // Test the toString method to ensure it generates the correct string representation
        String result = validateBankAccountRequest.toString();
        assertTrue(result.contains("ValidateBankAccountRequest"), "toString should include class name");
        assertTrue(result.contains("requestPayload"), "toString should include requestPayload");
    }

    @Test
    void testHashCode() {
        // Test the hashCode method
        int hashCode = validateBankAccountRequest.hashCode();
        assertNotNull(hashCode, "HashCode should not be null");
        
        // Ensure consistency of hashCode
        assertEquals(hashCode, validateBankAccountRequest.hashCode(), "Hash code should be consistent");
    }

    @Test
    void testEquals() {
        // Test the equals method
        ValidateBankAccountRequest sameRequest = new ValidateBankAccountRequest();
        sameRequest.setRequestPayload(requestPayload);

        assertTrue(validateBankAccountRequest.equals(sameRequest), "Objects with same content should be equal");

        ValidateBankAccountRequest differentRequest = new ValidateBankAccountRequest();
        differentRequest.setRequestPayload(new RequestPayload());  // Different payload
        assertFalse(validateBankAccountRequest.equals(differentRequest), "Objects with different content should not be equal");
    }
}
