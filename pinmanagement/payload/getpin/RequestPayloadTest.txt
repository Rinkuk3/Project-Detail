package com.td.mbna.msec.midtier.pinmanagement.payload.getpin;

import com.td.mbna.msec.midtier.types.common.EmailNotificationInfoType;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class RequestPayloadTest {

    @Test
    public void testSetAndGetCustId() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setCustId("12345");
        assertEquals("12345", requestPayload.getCustId());
    }

    @Test
    public void testSetAndGetAcctId() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setAcctId("67890");
        assertEquals("67890", requestPayload.getAcctId());
    }

    @Test
    public void testSetAndGetEmailNotificationInfo() {
        RequestPayload requestPayload = new RequestPayload();
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        requestPayload.setEmailNotificationInfo(emailNotificationInfo);
        assertEquals(emailNotificationInfo, requestPayload.getEmailNotificationInfo());
    }

    @Test
    public void testSetAndGetZpkAlias() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setZpkAlias("zpk123");
        assertEquals("zpk123", requestPayload.getZpkAlias());
    }

    @Test
    public void testSetAndGetWtkAlias() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setWtkAlias("wtk123");
        assertEquals("wtk123", requestPayload.getWtkAlias());
    }

    @Test
    public void testSetAndGetPartyKey() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setPartyKey("party123");
        assertEquals("party123", requestPayload.getPartyKey());
    }

    @Test
    public void testToString() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setCustId("12345");
        requestPayload.setAcctId("67890");
        requestPayload.setZpkAlias("zpk123");
        requestPayload.setWtkAlias("wtk123");
        requestPayload.setPartyKey("party123");
        
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        requestPayload.setEmailNotificationInfo(emailNotificationInfo);
        
        String expectedString = "com.td.mbna.msec.midtier.pinmanagement.payload.getpin.RequestPayload@" + 
                                Integer.toHexString(System.identityHashCode(requestPayload)) + 
                                "[custId=12345,acctId=67890,emailNotificationInfo=" + emailNotificationInfo + 
                                ",zpkAlias=zpk123,wtkAlias=wtk123]";
        assertEquals(expectedString, requestPayload.toString());
    }

    @Test
    public void testHashCode() {
        RequestPayload requestPayload1 = new RequestPayload();
        requestPayload1.setCustId("12345");
        requestPayload1.setAcctId("67890");
        requestPayload1.setZpkAlias("zpk123");
        requestPayload1.setWtkAlias("wtk123");
        requestPayload1.setPartyKey("party123");
        
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        requestPayload1.setEmailNotificationInfo(emailNotificationInfo);
        
        RequestPayload requestPayload2 = new RequestPayload();
        requestPayload2.setCustId("12345");
        requestPayload2.setAcctId("67890");
        requestPayload2.setZpkAlias("zpk123");
        requestPayload2.setWtkAlias("wtk123");
        requestPayload2.setPartyKey("party123");
        requestPayload2.setEmailNotificationInfo(emailNotificationInfo);

        assertEquals(requestPayload1.hashCode(), requestPayload2.hashCode());

        requestPayload2.setCustId("54321");
        assertNotEquals(requestPayload1.hashCode(), requestPayload2.hashCode());
    }

    @Test
    public void testEquals() {
        RequestPayload requestPayload1 = new RequestPayload();
        requestPayload1.setCustId("12345");
        requestPayload1.setAcctId("67890");
        requestPayload1.setZpkAlias("zpk123");
        requestPayload1.setWtkAlias("wtk123");
        requestPayload1.setPartyKey("party123");
        
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        requestPayload1.setEmailNotificationInfo(emailNotificationInfo);
        
        RequestPayload requestPayload2 = new RequestPayload();
        requestPayload2.setCustId("12345");
        requestPayload2.setAcctId("67890");
        requestPayload2.setZpkAlias("zpk123");
        requestPayload2.setWtkAlias("wtk123");
        requestPayload2.setPartyKey("party123");
        requestPayload2.setEmailNotificationInfo(emailNotificationInfo);

        assertTrue(requestPayload1.equals(requestPayload2));

        requestPayload2.setCustId("54321");
        assertFalse(requestPayload1.equals(requestPayload2));
    }

    @Test
    public void testEqualsWithNull() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setCustId("12345");

        assertFalse(requestPayload.equals(null));
    }

    @Test
    public void testEqualsWithDifferentClass() {
        RequestPayload requestPayload = new RequestPayload();

        assertFalse(requestPayload.equals("NonRequestPayload"));
    }

    @Test
    public void testEqualsWithDifferentValues() {
        RequestPayload requestPayload1 = new RequestPayload();
        requestPayload1.setCustId("12345");
        requestPayload1.setAcctId("67890");

        RequestPayload requestPayload2 = new RequestPayload();
        requestPayload2.setCustId("54321");
        requestPayload2.setAcctId("67890");

        assertFalse(requestPayload1.equals(requestPayload2));
    }
}
