package com.td.mbna.msec.midtier.pinmanagement.payload.getpin;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class GetPinRequestTest {

    @Test
    public void testSetAndGetRequestPayload() {
        GetPinRequest getPinRequest = new GetPinRequest();
        RequestPayload requestPayload = new RequestPayload();
        getPinRequest.setRequestPayload(requestPayload);
        assertEquals(requestPayload, getPinRequest.getRequestPayload());
    }

    @Test
    public void testToString() {
        GetPinRequest getPinRequest = new GetPinRequest();
        getPinRequest.setSessionInfo("session1");
        getPinRequest.setCustId("cust1");
        getPinRequest.setAliasCustId("alias1");
        getPinRequest.setAcctNum("acct1");
        getPinRequest.setAcctType("type1");
        getPinRequest.setLanguagePref("en");
        getPinRequest.setAuditInfo("audit1");
        getPinRequest.setIsPrimaryUser(true);
        getPinRequest.setReserved1("reserved");
        getPinRequest.setCustInterface("web");
        
        String expectedString = "com.td.mbna.msec.midtier.pinmanagement.payload.getpin.GetPinRequest@" + 
                                Integer.toHexString(System.identityHashCode(getPinRequest)) + 
                                "[sessionInfo=session1,custId=cust1,aliasCustId=alias1,acctNum=acct1,acctType=type1,languagePref=en,auditInfo=audit1,isPrimaryUser=true,reserved1=reserved,custInterface=web,requestPayload=<null>]";
        assertEquals(expectedString, getPinRequest.toString());
    }

    @Test
    public void testHashCode() {
        GetPinRequest getPinRequest1 = new GetPinRequest();
        getPinRequest1.setSessionInfo("session1");
        getPinRequest1.setCustId("cust1");
        
        GetPinRequest getPinRequest2 = new GetPinRequest();
        getPinRequest2.setSessionInfo("session1");
        getPinRequest2.setCustId("cust1");

        assertEquals(getPinRequest1.hashCode(), getPinRequest2.hashCode());

        getPinRequest2.setCustId("cust2");
        assertNotEquals(getPinRequest1.hashCode(), getPinRequest2.hashCode());
    }

    @Test
    public void testEqualsAndHashCode() {
        GetPinRequest getPinRequest1 = new GetPinRequest();
        getPinRequest1.setSessionInfo("session1");
        getPinRequest1.setCustId("cust1");

        GetPinRequest getPinRequest2 = new GetPinRequest();
        getPinRequest2.setSessionInfo("session1");
        getPinRequest2.setCustId("cust1");

        assertTrue(getPinRequest1.equals(getPinRequest2));
        assertEquals(getPinRequest1.hashCode(), getPinRequest2.hashCode());
    }

    @Test
    public void testEqualsWithNull() {
        GetPinRequest getPinRequest = new GetPinRequest();
        getPinRequest.setSessionInfo("session1");
        
        assertFalse(getPinRequest.equals(null));
    }

    @Test
    public void testEqualsWithDifferentClass() {
        GetPinRequest getPinRequest = new GetPinRequest();
        
        assertFalse(getPinRequest.equals("NonGetPinRequest"));
    }

    @Test
    public void testEqualsWithDifferentValues() {
        GetPinRequest getPinRequest1 = new GetPinRequest();
        getPinRequest1.setSessionInfo("session1");
        getPinRequest1.setCustId("cust1");

        GetPinRequest getPinRequest2 = new GetPinRequest();
        getPinRequest2.setSessionInfo("session2");
        getPinRequest2.setCustId("cust2");

        assertFalse(getPinRequest1.equals(getPinRequest2));
    }
}
