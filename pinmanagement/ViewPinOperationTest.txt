package com.td.mbna.msec.midtier.pinmanagement;

import com.td.api.kms.response.AddDecryptionJobRs;
import com.td.mbna.msec.midtier.pinmanagement.payload.getpin.GetPinRequest;
import com.td.mbna.msec.midtier.pinmanagement.payload.getpin.GetPinResponse;
import com.td.mbna.msec.midtier.pinmanagement.payload.getpin.ResponsePayload;
import com.td.mbna.msec.midtier.util.services.TDRestServiceUtil;
import com.td.mbna.msec.midtier.util.services.MidtierUtilHelper;
import com.td.mbna.msec.midtier.util.MbnaLogger;
import com.td.mbna.msec.midtier.util.services.MSECConstants;
import com.td.mbna.msec.midtier.util.BackEndSrvcUtil;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class ViewPinOperationTest {

    @InjectMocks
    private ViewPinOperationImpl viewPinOperation;

    @Mock
    private TDRestServiceUtil tdRestServiceUtil;

    @Mock
    private MbnaAd mbnaAd;

    @Mock
    private AddDecryptionJobRs addDecryptionJobRs;

    @Mock
    private GetPinRequest getPinRequest;

    @Mock
    private GetPinResponse getPinResponse;

    @BeforeEach
    public void setUp() {
        when(getPinRequest.getSessionInfo()).thenReturn(mock(SessionInfo.class));
        when(getPinRequest.getRequestPayload()).thenReturn(mock(RequestPayload.class));
        when(getPinRequest.getCardNum()).thenReturn("1234567890123456");
        when(getPinRequest.getRequestPayload().getPartyKey()).thenReturn("partyKey");
        when(getPinRequest.getRequestPayload().getZpkAlias()).thenReturn("zpkAlias");
        when(getPinRequest.getRequestPayload().getWtkAlias()).thenReturn("wtkAlias");
        when(getPinRequest.getAcctNum()).thenReturn("123456");
        when(getPinRequest.getAliasCustId()).thenReturn("custId");
    }

    @Test
    public void testInvokeService_Success() throws Exception {
        // Prepare mocks
        when(mbnaAd.viewPin(any(), any(), any(), any())).thenReturn(getPinResponse);
        when(tdRestServiceUtil.invokeRestService(any(), any(), any(), any())).thenReturn(addDecryptionJobRs);
        when(addDecryptionJobRs.getData()).thenReturn(mock(AddDecryptionJobRs.Data.class));
        when(addDecryptionJobRs.getCryptographyKey()).thenReturn(mock(List.class));

        // Call the service method
        GetPinResponse response = viewPinOperation.invokeService(getPinRequest, "token");

        // Verify the service interaction
        verify(mbnaAd, times(1)).viewPin(any(), any(), any(), any());
        verify(tdRestServiceUtil, times(1)).invokeRestService(any(), any(), any(), any());
        
        // Validate the response
        assertNotNull(response);
        assertNotNull(response.getResponsePayload());
    }

    @Test
    public void testInvokeService_Failure_DecryptionError() throws Exception {
        // Prepare mocks to simulate failure scenario
        when(mbnaAd.viewPin(any(), any(), any(), any())).thenReturn(getPinResponse);
        when(tdRestServiceUtil.invokeRestService(any(), any(), any(), any())).thenThrow(new Exception("Decryption error"));

        // Call the service method and verify exception is thrown
        try {
            viewPinOperation.invokeService(getPinRequest, "token");
            fail("Expected exception was not thrown");
        } catch (Exception e) {
            assertTrue(e instanceof MidtierUtilHelper.BusinessException);
            assertEquals("MS601", ((MidtierUtilHelper.BusinessException) e).getErrorCode());
        }
    }

    @Test
    public void testInvokeService_Failure_KmsResponseNull() throws Exception {
        // Prepare mocks to simulate a KMS failure scenario
        when(mbnaAd.viewPin(any(), any(), any(), any())).thenReturn(getPinResponse);
        when(tdRestServiceUtil.invokeRestService(any(), any(), any(), any())).thenReturn(null);

        // Call the service method and verify exception is thrown
        try {
            viewPinOperation.invokeService(getPinRequest, "token");
            fail("Expected exception was not thrown");
        } catch (Exception e) {
            assertTrue(e instanceof MidtierUtilHelper.BusinessException);
            assertEquals("MS601", ((MidtierUtilHelper.BusinessException) e).getErrorCode());
        }
    }

    @Test
    public void testInvokeService_Failure_InvalidDecryptionData() throws Exception {
        // Prepare mocks to simulate a case where KMS response is invalid
        when(mbnaAd.viewPin(any(), any(), any(), any())).thenReturn(getPinResponse);
        when(tdRestServiceUtil.invokeRestService(any(), any(), any(), any())).thenReturn(addDecryptionJobRs);
        when(addDecryptionJobRs.getData()).thenReturn(null);

        // Call the service method and verify exception is thrown
        try {
            viewPinOperation.invokeService(getPinRequest, "token");
            fail("Expected exception was not thrown");
        } catch (Exception e) {
            assertTrue(e instanceof MidtierUtilHelper.BusinessException);
            assertEquals("MS601", ((MidtierUtilHelper.BusinessException) e).getErrorCode());
        }
    }
}
