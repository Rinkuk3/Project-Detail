package com.td.mbna.msec.midtier.content.payload.getpagecontent;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class GetPageContentRequestTest {

    @Test
    public void testGetterSetter() {
        // Test getter and setter
        GetPageContentRequest request = new GetPageContentRequest();
        RequestPayload payload = new RequestPayload();
        payload.setContentId("content123");
        payload.setLangId("en");
        request.setRequestPayload(payload);

        // Verify getter
        assertNotNull(request.getRequestPayload());
        assertEquals("content123", request.getRequestPayload().getContentId());
        assertEquals("en", request.getRequestPayload().getLangId());
    }

    @Test
    public void testToString_BothNull() {
        // Test toString() when sessionInfo and requestPayload are null
        GetPageContentRequest request = new GetPageContentRequest();
        String expectedString = "com.td.mbna.msec.midtier.content.payload.getpagecontent.GetPageContentRequest@" +
                Integer.toHexString(System.identityHashCode(request)) +
                "[sessionInfo=<null>,requestPayload=<null>]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testToString_WithSessionInfo() {
        // Test toString() when sessionInfo is set, but requestPayload is null
        GetPageContentRequest request = new GetPageContentRequest();
        request.setSessionInfo("sessionInfo123");

        String expectedString = "com.td.mbna.msec.midtier.content.payload.getpagecontent.GetPageContentRequest@" +
                Integer.toHexString(System.identityHashCode(request)) +
                "[sessionInfo=sessionInfo123,requestPayload=<null>]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testToString_WithRequestPayload() {
        // Test toString() when requestPayload is set, but sessionInfo is null
        GetPageContentRequest request = new GetPageContentRequest();
        RequestPayload payload = new RequestPayload();
        payload.setContentId("content123");
        payload.setLangId("en");
        request.setRequestPayload(payload);

        String expectedString = "com.td.mbna.msec.midtier.content.payload.getpagecontent.GetPageContentRequest@" +
                Integer.toHexString(System.identityHashCode(request)) +
                "[sessionInfo=<null>,requestPayload=RequestPayload{contentId=content123,langId=en}]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testHashCode_Empty() {
        // Test hashCode() with null values
        GetPageContentRequest request = new GetPageContentRequest();
        assertEquals(1, request.hashCode());
    }

    @Test
    public void testHashCode_WithValues() {
        // Test hashCode() when sessionInfo and requestPayload are set
        GetPageContentRequest request = new GetPageContentRequest();
        request.setSessionInfo("sessionInfo123");
        RequestPayload payload = new RequestPayload();
        payload.setContentId("content123");
        payload.setLangId("en");
        request.setRequestPayload(payload);

        assertNotEquals(1, request.hashCode());
    }

    @Test
    public void testEquals_SameObject() {
        // Test equals() when comparing with the same object
        GetPageContentRequest request = new GetPageContentRequest();
        assertTrue(request.equals(request));
    }

    @Test
    public void testEquals_EqualValues() {
        // Test equals() with identical sessionInfo and requestPayload
        GetPageContentRequest request1 = new GetPageContentRequest();
        GetPageContentRequest request2 = new GetPageContentRequest();

        request1.setSessionInfo("sessionInfo123");
        request2.setSessionInfo("sessionInfo123");

        RequestPayload payload1 = new RequestPayload();
        payload1.setContentId("content123");
        payload1.setLangId("en");

        RequestPayload payload2 = new RequestPayload();
        payload2.setContentId("content123");
        payload2.setLangId("en");

        request1.setRequestPayload(payload1);
        request2.setRequestPayload(payload2);

        assertTrue(request1.equals(request2));
    }

    @Test
    public void testEquals_DifferentValues() {
        // Test inequality when sessionInfo or requestPayload differ
        GetPageContentRequest request1 = new GetPageContentRequest();
        GetPageContentRequest request2 = new GetPageContentRequest();

        request1.setSessionInfo("sessionInfo123");
        request2.setSessionInfo("differentSessionInfo");

        assertFalse(request1.equals(request2));
    }

    @Test
    public void testEquals_Null() {
        // Test equality comparison with null
        GetPageContentRequest request = new GetPageContentRequest();
        assertFalse(request.equals(null));
    }

    @Test
    public void testEquals_DifferentType() {
        // Test comparison with a different type
        GetPageContentRequest request = new GetPageContentRequest();
        assertFalse(request.equals("String"));
    }
}
