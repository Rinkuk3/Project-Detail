package com.td.mbna.msec.midtier.content.payload.getlinkcontent;

import com.td.mbna.msec.midtier.types.common.SessionInfo;
import com.td.mbna.msec.midtier.content.payload.getlinkcontent.RequestPayload;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Unit test class for GetLinkContentRequest.
 */
public class GetLinkContentRequestTest {

    @Test
    public void testRequestPayloadGetterSetter() {
        // Test Getter and Setter for RequestPayload
        GetLinkContentRequest request = new GetLinkContentRequest();
        RequestPayload payload = new RequestPayload();
        payload.setField("TestValue"); // assuming RequestPayload has a field like this

        request.setRequestPayload(payload);
        assertEquals(payload, request.getRequestPayload());
    }

    @Test
    public void testToString_NullValues() {
        // Test toString when sessionInfo and requestPayload are null
        GetLinkContentRequest request = new GetLinkContentRequest();
        String expectedString = "com.td.mbna.msec.midtier.content.payload.getlinkcontent.GetLinkContentRequest@" +
            Integer.toHexString(System.identityHashCode(request)) +
            "[sessionInfo=<null>,requestPayload=<null>]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testToString_WithValues() {
        // Test toString when sessionInfo and requestPayload are not null
        GetLinkContentRequest request = new GetLinkContentRequest();
        SessionInfo sessionInfo = new SessionInfo();
        sessionInfo.setId("testSessionInfo");
        RequestPayload payload = new RequestPayload();
        payload.setField("TestValue");

        request.setSessionInfo(sessionInfo);
        request.setRequestPayload(payload);

        String expectedString = "com.td.mbna.msec.midtier.content.payload.getlinkcontent.GetLinkContentRequest@" +
            Integer.toHexString(System.identityHashCode(request)) +
            "[sessionInfo=" + sessionInfo + ",requestPayload=" + payload + "]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testHashCode_NullValues() {
        // Test hashCode with null values
        GetLinkContentRequest request = new GetLinkContentRequest();
        assertEquals(1, request.hashCode());
    }

    @Test
    public void testHashCode_WithValues() {
        // Test hashCode with non-null values
        GetLinkContentRequest request = new GetLinkContentRequest();
        SessionInfo sessionInfo = new SessionInfo();
        sessionInfo.setId("TestSessionInfo");
        RequestPayload payload = new RequestPayload();
        payload.setField("TestField");

        request.setSessionInfo(sessionInfo);
        request.setRequestPayload(payload);

        int expectedHashCode = 31 * (31 + sessionInfo.hashCode()) + payload.hashCode();
        assertEquals(expectedHashCode, request.hashCode());
    }

    @Test
    public void testEquals_SameObject() {
        // Test equals with the same object reference
        GetLinkContentRequest request = new GetLinkContentRequest();
        assertTrue(request.equals(request));
    }

    @Test
    public void testEquals_EqualValues() {
        // Test equals with two equal instances
        GetLinkContentRequest request1 = new GetLinkContentRequest();
        GetLinkContentRequest request2 = new GetLinkContentRequest();

        SessionInfo sessionInfo = new SessionInfo();
        sessionInfo.setId("Session1");
        RequestPayload payload = new RequestPayload();
        payload.setField("TestValue");

        request1.setSessionInfo(sessionInfo);
        request1.setRequestPayload(payload);

        request2.setSessionInfo(sessionInfo);
        request2.setRequestPayload(payload);

        assertTrue(request1.equals(request2));
    }

    @Test
    public void testEquals_DifferentValues() {
        // Test equals with different values
        GetLinkContentRequest request1 = new GetLinkContentRequest();
        GetLinkContentRequest request2 = new GetLinkContentRequest();

        SessionInfo sessionInfo1 = new SessionInfo();
        sessionInfo1.setId("Session1");

        SessionInfo sessionInfo2 = new SessionInfo();
        sessionInfo2.setId("Session2");

        RequestPayload payload1 = new RequestPayload();
        payload1.setField("Test1");

        RequestPayload payload2 = new RequestPayload();
        payload2.setField("Test2");

        request1.setSessionInfo(sessionInfo1);
        request1.setRequestPayload(payload1);

        request2.setSessionInfo(sessionInfo2);
        request2.setRequestPayload(payload2);

        assertFalse(request1.equals(request2));
    }

    @Test
    public void testEquals_Null() {
        // Test equals with null
        GetLinkContentRequest request = new GetLinkContentRequest();
        assertFalse(request.equals(null));
    }

}
