package com.td.mbna.msec.midtier.account.payload.getrewardsbalances;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class GetRewardsBalancesResponseTest {

    @Test
    void testDefaultConstructor() {
        // Create an instance using the default constructor
        GetRewardsBalancesResponse response = new GetRewardsBalancesResponse();

        // Validate that the object is created and not null
        assertNotNull(response);
        assertNotNull(response.getResponsePayload(), "ResponsePayload should be initialized in the constructor.");
    }

    @Test
    void testGettersAndSetters() {
        // Create an instance
        GetRewardsBalancesResponse response = new GetRewardsBalancesResponse();

        // Create a mock ResponsePayload
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);

        // Validate the getter and setter
        assertEquals(payload, response.getResponsePayload(), "ResponsePayload getter and setter should work correctly.");
    }

    @Test
    void testToString() {
        // Create an instance
        GetRewardsBalancesResponse response = new GetRewardsBalancesResponse();

        // Test the toString method
        String result = response.toString();
        assertNotNull(result, "toString should return a non-null string.");
        assertTrue(result.contains("responsePayload"), "toString output should include 'responsePayload'.");
    }

    @Test
    void testEqualsAndHashCode() {
        // Create two instances with the same data
        GetRewardsBalancesResponse response1 = new GetRewardsBalancesResponse();
        GetRewardsBalancesResponse response2 = new GetRewardsBalancesResponse();

        // Both should be equal
        assertEquals(response1, response2, "Two identical objects should be equal.");
        assertEquals(response1.hashCode(), response2.hashCode(), "Hash codes of two identical objects should match.");

        // Modify one of the objects
        ResponsePayload payload = new ResponsePayload();
        response1.setResponsePayload(payload);

        // Now they should not be equal
        assertNotEquals(response1, response2, "Objects with different data should not be equal.");
    }

    @Test
    void testEqualsWithDifferentClass() {
        // Create an instance
        GetRewardsBalancesResponse response = new GetRewardsBalancesResponse();

        // Test against an object of a different class
        assertNotEquals(response, new Object(), "Equals should return false for objects of different classes.");
    }

    @Test
    void testEqualsWithNull() {
        // Create an instance
        GetRewardsBalancesResponse response = new GetRewardsBalancesResponse();

        // Test against null
        assertNotEquals(response, null, "Equals should return false when comparing with null.");
    }
}
