package com.td.api.mbcca.response.insurance;

import com.td.api.mbcca.shared.Cccyamt;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ProductFeatureTest {

    private ProductFeature productFeature;

    @BeforeEach
    void setUp() {
        productFeature = new ProductFeature();
    }

    @Test
    void testSetAndGetFeatureId() {
        productFeature.setFeatureId("featureId123");
        assertEquals("featureId123", productFeature.getFeatureId());
    }

    @Test
    void testSetAndGetFeatureDesc() {
        productFeature.setFeatureDesc("Feature Description");
        assertEquals("Feature Description", productFeature.getFeatureDesc());
    }

    @Test
    void testSetAndGetActiveInd() {
        productFeature.setActiveInd(true);
        assertTrue(productFeature.getActiveInd());
    }

    @Test
    void testSetAndGetCancellationAgeNum() {
        productFeature.setCancellationAgeNum("65");
        assertEquals("65", productFeature.getCancellationAgeNum());
    }

    @Test
    void testSetAndGetInsurableInterestCoverageTypeCd() {
        productFeature.setInsurableInterestCoverageTypeCd("CoverageType123");
        assertEquals("CoverageType123", productFeature.getInsurableInterestCoverageTypeCd());
    }

    @Test
    void testSetAndGetInsurableInterestCoveragePartyTypeCd() {
        productFeature.setInsurableInterestCoveragePartyTypeCd("PartyType123");
        assertEquals("PartyType123", productFeature.getInsurableInterestCoveragePartyTypeCd());
    }

    @Test
    void testSetAndGetPolicyInsurableMaxCoverageCccyamt() {
        Cccyamt cccyamt = new Cccyamt();
        productFeature.setPolicyInsurableMaxCoverageCccyamt(cccyamt);
        assertEquals(cccyamt, productFeature.getPolicyInsurableMaxCoverageCccyamt());
    }

    @Test
    void testToString() {
        productFeature.setFeatureId("featureId123");
        productFeature.setFeatureDesc("Feature Description");
        productFeature.setActiveInd(true);
        productFeature.setCancellationAgeNum("65");
        productFeature.setInsurableInterestCoverageTypeCd("CoverageType123");
        productFeature.setInsurableInterestCoveragePartyTypeCd("PartyType123");

        String expectedToString = "com.td.api.mbcca.response.insurance.ProductFeature@" + Integer.toHexString(productFeature.hashCode()) + "[featureId=featureId123,featureDesc=Feature Description,activeInd=true,cancellationAgeNum=65,insurableInterestCoverageTypeCd=CoverageType123,insurableInterestCoveragePartyTypeCd=PartyType123,policyInsurableMaxCoverageCccyamt=<null>]";
        assertEquals(expectedToString, productFeature.toString());
    }

    @Test
    void testHashCode() {
        ProductFeature productFeature1 = new ProductFeature();
        ProductFeature productFeature2 = new ProductFeature();

        assertEquals(productFeature1.hashCode(), productFeature2.hashCode());
        
        productFeature1.setFeatureId("featureId123");
        productFeature2.setFeatureId("featureId123");

        assertEquals(productFeature1.hashCode(), productFeature2.hashCode());
    }

    @Test
    void testEquals() {
        ProductFeature productFeature1 = new ProductFeature();
        ProductFeature productFeature2 = new ProductFeature();
        assertTrue(productFeature1.equals(productFeature2));

        productFeature1.setFeatureId("featureId123");
        productFeature2.setFeatureId("featureId123");
        assertTrue(productFeature1.equals(productFeature2));

        productFeature2.setFeatureId("featureId124");
        assertFalse(productFeature1.equals(productFeature2));
    }

    @Test
    void testEqualsWithNull() {
        ProductFeature productFeature1 = new ProductFeature();
        assertFalse(productFeature1.equals(null));
    }

    @Test
    void testEqualsWithDifferentClass() {
        ProductFeature productFeature1 = new ProductFeature();
        String str = "DifferentClass";
        assertFalse(productFeature1.equals(str));
    }

}
