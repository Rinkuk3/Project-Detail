package com.td.mbna.msec.balancetransfer.domain;

import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.*;

class BalanceTransferRequestTest {

    @Test
    void testSettersAndGetters() {
        // Given
        BalanceTransferRequest request = new BalanceTransferRequest();

        // Test email
        String email = "test@example.com";
        request.setEmail(email);
        assertEquals(email, request.getEmail());

        // Test phone
        String phone = "123-456-7890";
        request.setPhone(phone);
        assertEquals(phone, request.getPhone());

        // Test agreedToTerms
        request.setAgreedToTerms(true);
        assertTrue(request.isAgreedToTerms());

        // Test numberoftransfers
        request.setNumberoftransfers(3);
        assertEquals(3, request.getNumberoftransfers());

        // Test save1
        request.setSave1(true);
        assertTrue(request.isSave1());
        String nicknameKey1 = "nickname1Key";
        request.setNicknameKey1(nicknameKey1);
        assertEquals(nicknameKey1, request.getNicknameKey1());
        String nickname1 = "nickname1";
        request.setNickname1(nickname1);
        assertEquals(nickname1, request.getNickname1());
        String institutionName1 = "BMO";
        request.setInstitutionName1(institutionName1);
        assertEquals(institutionName1, request.getInstitutionName1());
        String merchantId1 = "merchant1";
        request.setMerchantId1(merchantId1);
        assertEquals(merchantId1, request.getMerchantId1());
        String accountId1 = "account1";
        request.setAccountId1(accountId1);
        assertEquals(accountId1, request.getAccountId1());
        BigDecimal transferAmt1 = new BigDecimal("100.00");
        request.setTransferAmt1(transferAmt1);
        assertEquals(transferAmt1, request.getTransferAmt1());

        // Test save2
        request.setSave2(true);
        assertTrue(request.isSave2());
        String nicknameKey2 = "nickname2Key";
        request.setNicknameKey2(nicknameKey2);
        assertEquals(nicknameKey2, request.getNicknameKey2());
        String nickname2 = "nickname2";
        request.setNickname2(nickname2);
        assertEquals(nickname2, request.getNickname2());
        String institutionName2 = "VISA";
        request.setInstitutionName2(institutionName2);
        assertEquals(institutionName2, request.getInstitutionName2());
        String merchantId2 = "merchant2";
        request.setMerchantId2(merchantId2);
        assertEquals(merchantId2, request.getMerchantId2());
        String accountId2 = "account2";
        request.setAccountId2(accountId2);
        assertEquals(accountId2, request.getAccountId2());
        BigDecimal transferAmt2 = new BigDecimal("200.00");
        request.setTransferAmt2(transferAmt2);
        assertEquals(transferAmt2, request.getTransferAmt2());

        // Test save3
        request.setSave3(true);
        assertTrue(request.isSave3());
        String nicknameKey3 = "nickname3Key";
        request.setNicknameKey3(nicknameKey3);
        assertEquals(nicknameKey3, request.getNicknameKey3());
        String nickname3 = "nickname3";
        request.setNickname3(nickname3);
        assertEquals(nickname3, request.getNickname3());
        String institutionName3 = "CIBC";
        request.setInstitutionName3(institutionName3);
        assertEquals(institutionName3, request.getInstitutionName3());
        String merchantId3 = "merchant3";
        request.setMerchantId3(merchantId3);
        assertEquals(merchantId3, request.getMerchantId3());
        String accountId3 = "account3";
        request.setAccountId3(accountId3);
        assertEquals(accountId3, request.getAccountId3());
        BigDecimal transferAmt3 = new BigDecimal("300.00");
        request.setTransferAmt3(transferAmt3);
        assertEquals(transferAmt3, request.getTransferAmt3());
    }
}
