package com.td.mbna.msec.offerslanding.controller;

import com.td.mbna.msec.offerslanding.model.OfferLanding;
import com.td.mbna.msec.offerslanding.service.OffersLandingService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

class OffersLandingControllerTest {

    @InjectMocks
    private OffersLandingController offersLandingController;

    @Mock
    private OffersLandingService offersLandingService;

    private List<OfferLanding> offerLandingList;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);

        // Setup sample OfferLanding objects for testing
        offerLandingList = new ArrayList<>();
        offerLandingList.add(new OfferLanding("1", "Offer 1", "Description 1"));
        offerLandingList.add(new OfferLanding("2", "Offer 2", "Description 2"));
    }

    @Test
    void testGetOfferLanding() {
        // Mock the service call to return the sample offerLandingList
        when(offersLandingService.getOffersLanding()).thenReturn(offerLandingList);

        // Call the controller method
        List<OfferLanding> result = offersLandingController.getOfferLanding();

        // Verify the results
        assertEquals(2, result.size());
        assertEquals("1", result.get(0).getId());
        assertEquals("Offer 1", result.get(0).getName());
        assertEquals("Description 1", result.get(0).getDescription());
        assertEquals("2", result.get(1).getId());
        assertEquals("Offer 2", result.get(1).getName());
        assertEquals("Description 2", result.get(1).getDescription());
    }
}
