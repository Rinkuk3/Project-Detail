package com.td.mbna.msec.offersbanner.controller;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import javax.servlet.http.HttpServletRequest;

import com.td.mbna.msec.offersbanner.service.OffersBannerService;
import com.td.mbna.msec.offersbanner.model.OffersBanner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

public class OffersBannerControllerTest {

    @InjectMocks
    private OffersBannerController offersBannerController;

    @Mock
    private OffersBannerService offersBannerService;

    @Mock
    private HttpServletRequest httpServletRequest;

    private List<OffersBanner> offersBannerList;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        offersBannerList = new ArrayList<>();
        offersBannerList.add(new OffersBanner()); // Add a mock OffersBanner object for testing
    }

    @Test
    public void testGetOffersBanner() {
        String accountNumber = "123456";
        String page = "1";

        when(offersBannerService.getOffersBanner(accountNumber, page, httpServletRequest)).thenReturn(offersBannerList);

        List<OffersBanner> result = offersBannerController.getOffersBanner(accountNumber, page, httpServletRequest);

        assertNotNull(result);
        assertEquals(1, result.size());
        verify(offersBannerService).getOffersBanner(accountNumber, page, httpServletRequest);
    }

    @Test
    public void testGetOffersBannerWithCurrentOffer() {
        String accountNumber = "123456";
        String page = "1";
        String currentOfferId = "offer123";

        when(offersBannerService.getOffersBanner(accountNumber, page, currentOfferId, httpServletRequest)).thenReturn(offersBannerList);

        List<OffersBanner> result = offersBannerController.getOffersBannerWithCurrentOffer(accountNumber, page, currentOfferId, httpServletRequest);

        assertNotNull(result);
        assertEquals(1, result.size());
        verify(offersBannerService).getOffersBanner(accountNumber, page, currentOfferId, httpServletRequest);
    }
    
    // Uncomment if you want to test the deprecated method
    /*
    @Test
    public void testGetOffers() {
        String accountNumber = "123456";
        String page = "1";

        // Mocking a service response if needed
        when(offersBannerService.getBannerOffers(accountNumber, page)).thenReturn(offersBannerList);

        List<OffersBanner> result = offersBannerController.getOffers(accountNumber, page);

        assertNotNull(result);
        assertEquals(1, result.size());
        verify(offersBannerService).getBannerOffers(accountNumber, page);
    }
    */
}
