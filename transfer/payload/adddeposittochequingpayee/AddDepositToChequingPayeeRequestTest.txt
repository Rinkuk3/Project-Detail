package com.td.mbna.msec.midtier.transfer.payload.adddeposittochequingpayee;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

public class AddDepositToChequingPayeeRequestTest {

    private AddDepositToChequingPayeeRequest request;

    @Before
    public void setUp() {
        request = new AddDepositToChequingPayeeRequest();
    }

    @Test
    public void testGetAndSetRequestPayload() {
        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        assertEquals(payload, request.getRequestPayload());

        request.setRequestPayload(null);
        assertNull(request.getRequestPayload());
    }

    @Test
    public void testToString() {
        request.setSessionInfo("session123");
        request.setCustId("cust123");
        request.setAliasCustId("alias123");
        request.setAcctNum("acct123");
        request.setAcctType("type123");
        request.setLanguagePref("EN");
        request.setAuditInfo("audit123");
        request.setIsPrimaryUser(true);
        request.setReserved1("reserved123");
        request.setCustInterface("interface123");

        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.adddeposittochequingpayee.AddDepositToChequingPayeeRequest@"
                + Integer.toHexString(System.identityHashCode(request))
                + "[sessionInfo=session123,custId=cust123,aliasCustId=alias123,acctNum=acct123,acctType=type123,languagePref=EN,auditInfo=audit123,isPrimaryUser=true,reserved1=reserved123,custInterface=interface123,requestPayload=" + payload + "]";

        assertEquals(expectedString, request.toString());
    }

    @Test
    public void testHashCode() {
        AddDepositToChequingPayeeRequest request1 = new AddDepositToChequingPayeeRequest();
        request1.setSessionInfo("session123");
        request1.setCustId("cust123");

        AddDepositToChequingPayeeRequest request2 = new AddDepositToChequingPayeeRequest();
        request2.setSessionInfo("session123");
        request2.setCustId("cust123");

        AddDepositToChequingPayeeRequest request3 = new AddDepositToChequingPayeeRequest();
        request3.setSessionInfo("session456");
        request3.setCustId("cust456");

        assertEquals(request1.hashCode(), request2.hashCode());
        assertNotEquals(request1.hashCode(), request3.hashCode());
    }

    @Test
    public void testEquals() {
        AddDepositToChequingPayeeRequest request1 = new AddDepositToChequingPayeeRequest();
        request1.setSessionInfo("session123");
        request1.setCustId("cust123");

        AddDepositToChequingPayeeRequest request2 = new AddDepositToChequingPayeeRequest();
        request2.setSessionInfo("session123");
        request2.setCustId("cust123");

        AddDepositToChequingPayeeRequest request3 = new AddDepositToChequingPayeeRequest();
        request3.setSessionInfo("session456");
        request3.setCustId("cust456");

        assertTrue(request1.equals(request2));
        assertFalse(request1.equals(request3));

        // Test equality with a different class type
        assertFalse(request1.equals("String"));
    }

    @Test
    public void testEqualsWithNull() {
        AddDepositToChequingPayeeRequest request1 = new AddDepositToChequingPayeeRequest();
        request1.setSessionInfo(null);
        request1.setCustId(null);

        AddDepositToChequingPayeeRequest request2 = new AddDepositToChequingPayeeRequest();
        request2.setSessionInfo(null);
        request2.setCustId(null);

        assertTrue(request1.equals(request2));
    }
}
