package com.td.mbna.msec.midtier.transfer.payload.deletebalancetransfertocreditorpayee;

import com.td.mbna.msec.midtier.transfer.payload.BalanceTransferToCreditorPayeeType;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

public class RequestPayloadTest {

    private RequestPayload requestPayload;
    private BalanceTransferToCreditorPayeeType payee;

    @Before
    public void setUp() {
        requestPayload = new RequestPayload();
        payee = new BalanceTransferToCreditorPayeeType(); // Create a mock or real instance as needed
    }

    @Test
    public void testGetAndSetPayee() {
        requestPayload.setPayee(payee);
        assertEquals(payee, requestPayload.getPayee());

        BalanceTransferToCreditorPayeeType newPayee = new BalanceTransferToCreditorPayeeType();
        requestPayload.setPayee(newPayee);
        assertEquals(newPayee, requestPayload.getPayee());
    }

    @Test
    public void testToString() {
        requestPayload.setPayee(payee);

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.deletebalancetransfertocreditorpayee.RequestPayload@"
                + Integer.toHexString(System.identityHashCode(requestPayload))
                + "[payee=" + payee + "]";

        assertEquals(expectedString, requestPayload.toString());
    }

    @Test
    public void testHashCode() {
        RequestPayload requestPayload1 = new RequestPayload();
        requestPayload1.setPayee(payee);

        RequestPayload requestPayload2 = new RequestPayload();
        requestPayload2.setPayee(payee);

        assertEquals(requestPayload1.hashCode(), requestPayload2.hashCode());

        RequestPayload requestPayload3 = new RequestPayload();
        requestPayload3.setPayee(null);

        assertNotEquals(requestPayload1.hashCode(), requestPayload3.hashCode());
    }

    @Test
    public void testEquals() {
        RequestPayload requestPayload1 = new RequestPayload();
        requestPayload1.setPayee(payee);

        RequestPayload requestPayload2 = new RequestPayload();
        requestPayload2.setPayee(payee);

        RequestPayload requestPayload3 = new RequestPayload();
        requestPayload3.setPayee(null);

        assertTrue(requestPayload1.equals(requestPayload2));
        assertFalse(requestPayload1.equals(requestPayload3));
        assertFalse(requestPayload1.equals(null));
        assertFalse(requestPayload1.equals("String"));
    }
}
