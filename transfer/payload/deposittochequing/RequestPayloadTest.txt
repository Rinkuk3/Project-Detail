package com.td.mbna.msec.midtier.transfer.payload.deposittochequing;

import com.td.mbna.msec.midtier.transfer.payload.DepositToChequingPaymentInfoType;
import com.td.mbna.msec.midtier.types.common.AcctContactInfoType;
import com.td.mbna.msec.midtier.types.common.DisclosureInfoType;
import com.td.mbna.msec.midtier.types.common.EmailNotificationInfoType;
import com.td.mbna.msec.midtier.types.common.PromotionOfferType;
import org.junit.Before;
import org.junit.Test;

import java.math.BigDecimal;

import static org.junit.Assert.*;

public class RequestPayloadTest {

    private RequestPayload requestPayload;

    @Before
    public void setUp() {
        requestPayload = new RequestPayload();
    }

    @Test
    public void testGetAndSetPaymentInfo() {
        DepositToChequingPaymentInfoType paymentInfo = new DepositToChequingPaymentInfoType();
        requestPayload.setPaymentInfo(paymentInfo);
        assertEquals(paymentInfo, requestPayload.getPaymentInfo());
    }

    @Test
    public void testGetAndSetContactInfo() {
        AcctContactInfoType contactInfo = new AcctContactInfoType();
        requestPayload.setContactInfo(contactInfo);
        assertEquals(contactInfo, requestPayload.getContactInfo());
    }

    @Test
    public void testGetAndSetCreditAvail() {
        BigDecimal creditAvail = new BigDecimal("1000.50");
        requestPayload.setCreditAvail(creditAvail);
        assertEquals(creditAvail, requestPayload.getCreditAvail());
    }

    @Test
    public void testGetAndSetSelectedOffer() {
        PromotionOfferType selectedOffer = new PromotionOfferType();
        requestPayload.setSelectedOffer(selectedOffer);
        assertEquals(selectedOffer, requestPayload.getSelectedOffer());
    }

    @Test
    public void testGetAndSetRoleCD() {
        String roleCD = "Admin";
        requestPayload.setRoleCD(roleCD);
        assertEquals(roleCD, requestPayload.getRoleCD());
    }

    @Test
    public void testGetAndSetDisclosureInfo() {
        DisclosureInfoType disclosureInfo = new DisclosureInfoType();
        requestPayload.setDisclosureInfo(disclosureInfo);
        assertEquals(disclosureInfo, requestPayload.getDisclosureInfo());
    }

    @Test
    public void testGetAndSetEmailNotificationInfo() {
        EmailNotificationInfoType emailNotificationInfo = new EmailNotificationInfoType();
        requestPayload.setEmailNotificationInfo(emailNotificationInfo);
        assertEquals(emailNotificationInfo, requestPayload.getEmailNotificationInfo());
    }

    @Test
    public void testGetAndSetConfirmed() {
        Boolean confirmed = true;
        requestPayload.setConfirmed(confirmed);
        assertEquals(confirmed, requestPayload.getConfirmed());
    }

    @Test
    public void testGetAndSetPartyKey() {
        String partyKey = "party123";
        requestPayload.setPartyKey(partyKey);
        assertEquals(partyKey, requestPayload.getPartyKey());
    }

    @Test
    public void testToString() {
        requestPayload.setRoleCD("Admin");
        requestPayload.setConfirmed(true);
        requestPayload.setCreditAvail(new BigDecimal("500.75"));
        
        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.deposittochequing.RequestPayload@"
                + Integer.toHexString(System.identityHashCode(requestPayload))
                + "[paymentInfo=<null>,contactInfo=<null>,creditAvail=500.75,selectedOffer=<null>,roleCD=Admin,disclosureInfo=<null>,emailNotificationInfo=<null>,confirmed=true]";

        assertEquals(expectedString, requestPayload.toString());
    }

    @Test
    public void testHashCode() {
        RequestPayload payload1 = new RequestPayload();
        payload1.setRoleCD("Admin");
        payload1.setConfirmed(true);
        payload1.setCreditAvail(new BigDecimal("1000.50"));

        RequestPayload payload2 = new RequestPayload();
        payload2.setRoleCD("Admin");
        payload2.setConfirmed(true);
        payload2.setCreditAvail(new BigDecimal("1000.50"));

        assertEquals(payload1.hashCode(), payload2.hashCode());
    }

    @Test
    public void testEquals() {
        RequestPayload payload1 = new RequestPayload();
        payload1.setRoleCD("Admin");
        payload1.setConfirmed(true);
        payload1.setCreditAvail(new BigDecimal("500.75"));

        RequestPayload payload2 = new RequestPayload();
        payload2.setRoleCD("Admin");
        payload2.setConfirmed(true);
        payload2.setCreditAvail(new BigDecimal("500.75"));

        RequestPayload payload3 = new RequestPayload();
        payload3.setRoleCD("User");
        payload3.setConfirmed(false);
        payload3.setCreditAvail(new BigDecimal("1000.00"));

        assertTrue(payload1.equals(payload2));
        assertFalse(payload1.equals(payload3));
        assertFalse(payload1.equals(null));
        assertFalse(payload1.equals("Some String"));
    }
}
