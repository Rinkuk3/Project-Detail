package com.td.mbna.msec.midtier.transfer.payload.deposittochequing;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

public class DepositToChequingRequestTest {

    private DepositToChequingRequest depositToChequingRequest;

    @Before
    public void setUp() {
        depositToChequingRequest = new DepositToChequingRequest();
    }

    @Test
    public void testGetAndSetRequestPayload() {
        RequestPayload requestPayload = new RequestPayload();
        depositToChequingRequest.setRequestPayload(requestPayload);
        assertEquals(requestPayload, depositToChequingRequest.getRequestPayload());
    }

    @Test
    public void testToString() {
        depositToChequingRequest.setSessionInfo("SessionInfo");
        depositToChequingRequest.setCustId("12345");
        depositToChequingRequest.setAliasCustId("Alias123");
        depositToChequingRequest.setAcctNum("67890");
        depositToChequingRequest.setAcctType("SAV");
        depositToChequingRequest.setLanguagePref("EN");
        depositToChequingRequest.setAuditInfo("AuditInfo");
        depositToChequingRequest.setIsPrimaryUser(true);
        depositToChequingRequest.setReserved1("Reserved");
        depositToChequingRequest.setCustInterface("Interface");
        RequestPayload requestPayload = new RequestPayload();
        depositToChequingRequest.setRequestPayload(requestPayload);

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.deposittochequing.DepositToChequingRequest@"
                + Integer.toHexString(System.identityHashCode(depositToChequingRequest))
                + "[sessionInfo=SessionInfo,custId=12345,aliasCustId=Alias123,acctNum=67890,acctType=SAV,languagePref=EN,auditInfo=AuditInfo,isPrimaryUser=true,reserved1=Reserved,custInterface=Interface,requestPayload=" + requestPayload + "]";
        assertEquals(expectedString, depositToChequingRequest.toString());
    }

    @Test
    public void testHashCode() {
        DepositToChequingRequest depositToChequingRequest1 = new DepositToChequingRequest();
        depositToChequingRequest1.setSessionInfo("SessionInfo");
        depositToChequingRequest1.setCustId("12345");
        depositToChequingRequest1.setAliasCustId("Alias123");
        depositToChequingRequest1.setAcctNum("67890");
        depositToChequingRequest1.setAcctType("SAV");
        depositToChequingRequest1.setLanguagePref("EN");
        depositToChequingRequest1.setAuditInfo("AuditInfo");
        depositToChequingRequest1.setIsPrimaryUser(true);
        depositToChequingRequest1.setReserved1("Reserved");
        depositToChequingRequest1.setCustInterface("Interface");
        RequestPayload requestPayload = new RequestPayload();
        depositToChequingRequest1.setRequestPayload(requestPayload);

        DepositToChequingRequest depositToChequingRequest2 = new DepositToChequingRequest();
        depositToChequingRequest2.setSessionInfo("SessionInfo");
        depositToChequingRequest2.setCustId("12345");
        depositToChequingRequest2.setAliasCustId("Alias123");
        depositToChequingRequest2.setAcctNum("67890");
        depositToChequingRequest2.setAcctType("SAV");
        depositToChequingRequest2.setLanguagePref("EN");
        depositToChequingRequest2.setAuditInfo("AuditInfo");
        depositToChequingRequest2.setIsPrimaryUser(true);
        depositToChequingRequest2.setReserved1("Reserved");
        depositToChequingRequest2.setCustInterface("Interface");
        depositToChequingRequest2.setRequestPayload(requestPayload);

        assertEquals(depositToChequingRequest1.hashCode(), depositToChequingRequest2.hashCode());
    }

    @Test
    public void testEquals() {
        DepositToChequingRequest depositToChequingRequest1 = new DepositToChequingRequest();
        depositToChequingRequest1.setSessionInfo("SessionInfo");
        depositToChequingRequest1.setCustId("12345");
        depositToChequingRequest1.setAliasCustId("Alias123");
        depositToChequingRequest1.setAcctNum("67890");
        depositToChequingRequest1.setAcctType("SAV");
        depositToChequingRequest1.setLanguagePref("EN");
        depositToChequingRequest1.setAuditInfo("AuditInfo");
        depositToChequingRequest1.setIsPrimaryUser(true);
        depositToChequingRequest1.setReserved1("Reserved");
        depositToChequingRequest1.setCustInterface("Interface");
        RequestPayload requestPayload = new RequestPayload();
        depositToChequingRequest1.setRequestPayload(requestPayload);

        DepositToChequingRequest depositToChequingRequest2 = new DepositToChequingRequest();
        depositToChequingRequest2.setSessionInfo("SessionInfo");
        depositToChequingRequest2.setCustId("12345");
        depositToChequingRequest2.setAliasCustId("Alias123");
        depositToChequingRequest2.setAcctNum("67890");
        depositToChequingRequest2.setAcctType("SAV");
        depositToChequingRequest2.setLanguagePref("EN");
        depositToChequingRequest2.setAuditInfo("AuditInfo");
        depositToChequingRequest2.setIsPrimaryUser(true);
        depositToChequingRequest2.setReserved1("Reserved");
        depositToChequingRequest2.setCustInterface("Interface");
        depositToChequingRequest2.setRequestPayload(requestPayload);

        DepositToChequingRequest depositToChequingRequest3 = new DepositToChequingRequest();
        depositToChequingRequest3.setSessionInfo("DifferentSession");
        depositToChequingRequest3.setCustId("67890");

        assertTrue(depositToChequingRequest1.equals(depositToChequingRequest2));
        assertFalse(depositToChequingRequest1.equals(depositToChequingRequest3));
        assertFalse(depositToChequingRequest1.equals(null));
        assertFalse(depositToChequingRequest1.equals("Some String"));
    }
}
