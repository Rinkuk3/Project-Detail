package com.td.mbna.msec.midtier.transfer.payload.getbalancetransfertocreditorpayees;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;

class ResponsePayloadTest {

    private ResponsePayload responsePayload;

    @BeforeEach
    void setUp() {
        responsePayload = new ResponsePayload();
    }

    @Test
    void testGetAndSetPayee() {
        List<BalanceTransferToCreditorPayeeType> payeeList = List.of(new BalanceTransferToCreditorPayeeType(), new BalanceTransferToCreditorPayeeType());
        responsePayload.setPayee(payeeList);
        assertEquals(payeeList, responsePayload.getPayee());
    }

    @Test
    void testToString() {
        List<BalanceTransferToCreditorPayeeType> payeeList = List.of(new BalanceTransferToCreditorPayeeType());
        responsePayload.setPayee(payeeList);

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.getbalancetransfertocreditorpayees.ResponsePayload@" +
                                Integer.toHexString(responsePayload.hashCode()) + "[payee=" + payeeList + "]";
        assertEquals(expectedString, responsePayload.toString());
    }

    @Test
    void testHashCode() {
        ResponsePayload responsePayload2 = new ResponsePayload();
        List<BalanceTransferToCreditorPayeeType> payeeList = List.of(new BalanceTransferToCreditorPayeeType());
        responsePayload.setPayee(payeeList);

        responsePayload2.setPayee(payeeList);

        assertEquals(responsePayload.hashCode(), responsePayload2.hashCode());
    }

    @Test
    void testEquals() {
        ResponsePayload responsePayload2 = new ResponsePayload();
        List<BalanceTransferToCreditorPayeeType> payeeList = List.of(new BalanceTransferToCreditorPayeeType());
        responsePayload.setPayee(payeeList);

        responsePayload2.setPayee(payeeList);

        assertTrue(responsePayload.equals(responsePayload2));

        // Test equality with different object
        assertFalse(responsePayload.equals(null));

        // Test equality with different class
        assertFalse(responsePayload.equals(new Object()));
    }

    @Test
    void testEqualsWithDifferentPayee() {
        ResponsePayload responsePayload2 = new ResponsePayload();
        responsePayload.setPayee(List.of(new BalanceTransferToCreditorPayeeType()));

        responsePayload2.setPayee(List.of(new BalanceTransferToCreditorPayeeType(), new BalanceTransferToCreditorPayeeType()));

        assertFalse(responsePayload.equals(responsePayload2));
    }

    @Test
    void testEqualsWithNullPayee() {
        ResponsePayload responsePayload2 = new ResponsePayload();
        responsePayload.setPayee(null);

        responsePayload2.setPayee(null);

        assertTrue(responsePayload.equals(responsePayload2));
    }
}
