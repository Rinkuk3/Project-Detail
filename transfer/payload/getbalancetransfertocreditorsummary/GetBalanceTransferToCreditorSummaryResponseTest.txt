package com.td.mbna.msec.midtier.transfer.payload.getbalancetransfertocreditorsummary;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class GetBalanceTransferToCreditorSummaryResponseTest {

    private GetBalanceTransferToCreditorSummaryResponse response;

    @BeforeEach
    void setUp() {
        response = new GetBalanceTransferToCreditorSummaryResponse();
    }

    @Test
    void testGetAndSetResponsePayload() {
        ResponsePayload responsePayload = new ResponsePayload();
        response.setResponsePayload(responsePayload);
        assertEquals(responsePayload, response.getResponsePayload());
    }

    @Test
    void testToString() {
        ResponsePayload responsePayload = new ResponsePayload();
        response.setResponsePayload(responsePayload);
        response.setStatus("Success");
        response.setErrorMsgs("No errors");

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.getbalancetransfertocreditorsummary.GetBalanceTransferToCreditorSummaryResponse@" +
                                Integer.toHexString(response.hashCode()) + "[status=Success,errorMsgs=No errors,responsePayload=" + responsePayload + "]";
        assertEquals(expectedString, response.toString());
    }

    @Test
    void testHashCode() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        ResponsePayload responsePayload = new ResponsePayload();
        response.setResponsePayload(responsePayload);
        response.setStatus("Success");
        response.setErrorMsgs("No errors");

        response2.setResponsePayload(responsePayload);
        response2.setStatus("Success");
        response2.setErrorMsgs("No errors");

        assertEquals(response.hashCode(), response2.hashCode());
    }

    @Test
    void testEquals() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        ResponsePayload responsePayload = new ResponsePayload();
        response.setResponsePayload(responsePayload);
        response.setStatus("Success");
        response.setErrorMsgs("No errors");

        response2.setResponsePayload(responsePayload);
        response2.setStatus("Success");
        response2.setErrorMsgs("No errors");

        assertTrue(response.equals(response2));

        // Test equality with different object
        assertFalse(response.equals(null));

        // Test equality with different class
        assertFalse(response.equals(new Object()));
    }

    @Test
    void testEqualsWithDifferentResponsePayload() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        response.setResponsePayload(new ResponsePayload());
        response2.setResponsePayload(new ResponsePayload());

        assertTrue(response.equals(response2));

        // Test with different responsePayload
        response.setResponsePayload(new ResponsePayload());
        response2.setResponsePayload(new ResponsePayload());

        assertTrue(response.equals(response2));
    }

    @Test
    void testEqualsWithNullResponsePayload() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        response.setResponsePayload(null);

        response2.setResponsePayload(null);

        assertTrue(response.equals(response2));
    }

    @Test
    void testEqualsWithNullStatus() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        response.setStatus(null);
        response2.setStatus(null);
        assertTrue(response.equals(response2));
    }

    @Test
    void testEqualsWithNullErrorMsgs() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        response.setErrorMsgs(null);
        response2.setErrorMsgs(null);
        assertTrue(response.equals(response2));
    }

    @Test
    void testHashCodeWithNullFields() {
        GetBalanceTransferToCreditorSummaryResponse response2 = new GetBalanceTransferToCreditorSummaryResponse();
        response.setStatus(null);
        response.setErrorMsgs(null);
        response.setResponsePayload(null);

        response2.setStatus(null);
        response2.setErrorMsgs(null);
        response2.setResponsePayload(null);

        assertEquals(response.hashCode(), response2.hashCode());
    }
}
