package com.td.mbna.msec.midtier.transfer.payload.getknowncardissuers;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class GetKnownCardIssuersResponseTest {

    private GetKnownCardIssuersResponse response;

    @BeforeEach
    void setUp() {
        response = new GetKnownCardIssuersResponse();
    }

    @Test
    void testGetAndSetResponsePayload() {
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        assertEquals(payload, response.getResponsePayload());
    }

    @Test
    void testToString() {
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        response.setStatus("Success");
        response.setErrorMessages("No errors");

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.getknowncardissuers.GetKnownCardIssuersResponse@" +
                Integer.toHexString(response.hashCode()) + "[status=Success,errorMsgs=No errors,responsePayload=" + payload + "]";
        
        assertEquals(expectedString, response.toString());
    }

    @Test
    void testToStringWithNullValues() {
        response.setResponsePayload(null);
        response.setStatus(null);
        response.setErrorMessages(null);

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.getknowncardissuers.GetKnownCardIssuersResponse@" +
                Integer.toHexString(response.hashCode()) + "[status=<null>,errorMsgs=<null>,responsePayload=<null>]";

        assertEquals(expectedString, response.toString());
    }

    @Test
    void testHashCode() {
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        response.setStatus("Success");
        response.setErrorMessages("No errors");

        int expectedHashCode = response.hashCode();

        GetKnownCardIssuersResponse anotherResponse = new GetKnownCardIssuersResponse();
        anotherResponse.setResponsePayload(payload);
        anotherResponse.setStatus("Success");
        anotherResponse.setErrorMessages("No errors");

        assertEquals(expectedHashCode, anotherResponse.hashCode());
    }

    @Test
    void testHashCodeWithNullValues() {
        response.setResponsePayload(null);
        response.setStatus(null);
        response.setErrorMessages(null);

        GetKnownCardIssuersResponse anotherResponse = new GetKnownCardIssuersResponse();
        anotherResponse.setResponsePayload(null);
        anotherResponse.setStatus(null);
        anotherResponse.setErrorMessages(null);

        assertEquals(response.hashCode(), anotherResponse.hashCode());
    }

    @Test
    void testEquals() {
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        response.setStatus("Success");
        response.setErrorMessages("No errors");

        GetKnownCardIssuersResponse anotherResponse = new GetKnownCardIssuersResponse();
        anotherResponse.setResponsePayload(payload);
        anotherResponse.setStatus("Success");
        anotherResponse.setErrorMessages("No errors");

        assertTrue(response.equals(anotherResponse));

        GetKnownCardIssuersResponse differentResponse = new GetKnownCardIssuersResponse();
        differentResponse.setResponsePayload(new ResponsePayload());
        differentResponse.setStatus("Failure");
        differentResponse.setErrorMessages("Some error");

        assertFalse(response.equals(differentResponse));

        assertFalse(response.equals(null));
        assertFalse(response.equals(new Object()));
    }

    @Test
    void testEqualsWithNullResponsePayload() {
        response.setResponsePayload(null);
        response.setStatus("Success");
        response.setErrorMessages("No errors");

        GetKnownCardIssuersResponse anotherResponse = new GetKnownCardIssuersResponse();
        anotherResponse.setResponsePayload(null);
        anotherResponse.setStatus("Success");
        anotherResponse.setErrorMessages("No errors");

        assertTrue(response.equals(anotherResponse));
    }

    @Test
    void testEqualsWithDifferentResponsePayload() {
        ResponsePayload payload1 = new ResponsePayload();
        ResponsePayload payload2 = new ResponsePayload();

        response.setResponsePayload(payload1);
        response.setStatus("Success");
        response.setErrorMessages("No errors");

        GetKnownCardIssuersResponse differentResponse = new GetKnownCardIssuersResponse();
        differentResponse.setResponsePayload(payload2);
        differentResponse.setStatus("Success");
        differentResponse.setErrorMessages("No errors");

        assertFalse(response.equals(differentResponse));
    }

    @Test
    void testEqualsWithSameResponsePayloadReference() {
        ResponsePayload payload = new ResponsePayload();

        response.setResponsePayload(payload);
        response.setStatus("Success");
        response.setErrorMessages("No errors");

        GetKnownCardIssuersResponse anotherResponse = response;

        assertTrue(response.equals(anotherResponse));
    }

    @Test
    void testEqualsWithNullValuesInFields() {
        response.setStatus(null);
        response.setErrorMessages(null);
        response.setResponsePayload(null);

        GetKnownCardIssuersResponse anotherResponse = new GetKnownCardIssuersResponse();
        anotherResponse.setStatus(null);
        anotherResponse.setErrorMessages(null);
        anotherResponse.setResponsePayload(null);

        assertTrue(response.equals(anotherResponse));
    }
}
