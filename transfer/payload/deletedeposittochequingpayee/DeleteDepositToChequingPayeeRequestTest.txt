package com.td.mbna.msec.midtier.transfer.payload.deletedeposittochequingpayee;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

public class DeleteDepositToChequingPayeeRequestTest {

    private DeleteDepositToChequingPayeeRequest deleteDepositToChequingPayeeRequest;

    @Before
    public void setUp() {
        deleteDepositToChequingPayeeRequest = new DeleteDepositToChequingPayeeRequest();
    }

    @Test
    public void testGetAndSetRequestPayload() {
        RequestPayload requestPayload = new RequestPayload();
        deleteDepositToChequingPayeeRequest.setRequestPayload(requestPayload);
        assertEquals(requestPayload, deleteDepositToChequingPayeeRequest.getRequestPayload());

        RequestPayload newRequestPayload = new RequestPayload();
        deleteDepositToChequingPayeeRequest.setRequestPayload(newRequestPayload);
        assertEquals(newRequestPayload, deleteDepositToChequingPayeeRequest.getRequestPayload());
    }

    @Test
    public void testToString() {
        deleteDepositToChequingPayeeRequest.setSessionInfo("sessionInfo");
        deleteDepositToChequingPayeeRequest.setCustId("custId");
        deleteDepositToChequingPayeeRequest.setAliasCustId("aliasCustId");
        deleteDepositToChequingPayeeRequest.setAcctNum("acctNum");
        deleteDepositToChequingPayeeRequest.setAcctType("acctType");
        deleteDepositToChequingPayeeRequest.setLanguagePref("languagePref");
        deleteDepositToChequingPayeeRequest.setAuditInfo("auditInfo");
        deleteDepositToChequingPayeeRequest.setIsPrimaryUser(true);
        deleteDepositToChequingPayeeRequest.setReserved1("reserved1");
        deleteDepositToChequingPayeeRequest.setCustInterface("custInterface");

        RequestPayload requestPayload = new RequestPayload();
        deleteDepositToChequingPayeeRequest.setRequestPayload(requestPayload);

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.deletedeposittochequingpayee.DeleteDepositToChequingPayeeRequest@"
                + Integer.toHexString(System.identityHashCode(deleteDepositToChequingPayeeRequest))
                + "[sessionInfo=sessionInfo,custId=custId,aliasCustId=aliasCustId,acctNum=acctNum,acctType=acctType,languagePref=languagePref,auditInfo=auditInfo,isPrimaryUser=true,reserved1=reserved1,custInterface=custInterface,requestPayload=" + requestPayload + "]";

        assertEquals(expectedString, deleteDepositToChequingPayeeRequest.toString());
    }

    @Test
    public void testHashCode() {
        DeleteDepositToChequingPayeeRequest request1 = new DeleteDepositToChequingPayeeRequest();
        request1.setSessionInfo("sessionInfo");
        request1.setCustId("custId");
        request1.setAliasCustId("aliasCustId");
        request1.setAcctNum("acctNum");
        request1.setAcctType("acctType");

        DeleteDepositToChequingPayeeRequest request2 = new DeleteDepositToChequingPayeeRequest();
        request2.setSessionInfo("sessionInfo");
        request2.setCustId("custId");
        request2.setAliasCustId("aliasCustId");
        request2.setAcctNum("acctNum");
        request2.setAcctType("acctType");

        assertEquals(request1.hashCode(), request2.hashCode());

        request2.setCustId("newCustId");
        assertNotEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    public void testEquals() {
        DeleteDepositToChequingPayeeRequest request1 = new DeleteDepositToChequingPayeeRequest();
        request1.setSessionInfo("sessionInfo");
        request1.setCustId("custId");
        request1.setAliasCustId("aliasCustId");
        request1.setAcctNum("acctNum");
        request1.setAcctType("acctType");

        DeleteDepositToChequingPayeeRequest request2 = new DeleteDepositToChequingPayeeRequest();
        request2.setSessionInfo("sessionInfo");
        request2.setCustId("custId");
        request2.setAliasCustId("aliasCustId");
        request2.setAcctNum("acctNum");
        request2.setAcctType("acctType");

        DeleteDepositToChequingPayeeRequest request3 = new DeleteDepositToChequingPayeeRequest();
        request3.setSessionInfo("sessionInfo");
        request3.setCustId("newCustId");

        assertTrue(request1.equals(request2));  // Same values
        assertFalse(request1.equals(request3)); // Different custId
        assertFalse(request1.equals(null));  // Null check
        assertFalse(request1.equals("String")); // Different object type
    }
}
