package com.td.mbna.msec.midtier.transfer.payload;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class BalanceTransferToCreditorPayeeTypeTest {

    private BalanceTransferToCreditorPayeeType balanceTransfer;

    @BeforeEach
    void setUp() {
        balanceTransfer = new BalanceTransferToCreditorPayeeType();
    }

    @Test
    void testGetAndSetId() {
        String id = "123";
        balanceTransfer.setId(id);
        assertEquals(id, balanceTransfer.getId());
    }

    @Test
    void testGetAndSetNickName() {
        String nickName = "Test NickName";
        balanceTransfer.setNickName(nickName);
        assertEquals(nickName, balanceTransfer.getNickName());
    }

    @Test
    void testGetAndSetCardIssuerName() {
        String cardIssuerName = "Visa";
        balanceTransfer.setCardIssuerName(cardIssuerName);
        assertEquals(cardIssuerName, balanceTransfer.getCardIssuerName());
    }

    @Test
    void testGetAndSetMerchantId() {
        String merchantId = "456";
        balanceTransfer.setMerchantId(merchantId);
        assertEquals(merchantId, balanceTransfer.getMerchantId());
    }

    @Test
    void testGetAndSetCardNum() {
        String cardNum = "1234-5678-9876-5432";
        balanceTransfer.setCardNum(cardNum);
        assertEquals(cardNum, balanceTransfer.getCardNum());
    }

    @Test
    void testGetAndSetToken() {
        String token = "Token1234";
        balanceTransfer.setToken(token);
        assertEquals(token, balanceTransfer.getToken());
    }

    @Test
    void testToString() {
        balanceTransfer.setId("123");
        balanceTransfer.setNickName("Test NickName");
        balanceTransfer.setCardIssuerName("Visa");
        balanceTransfer.setMerchantId("456");
        balanceTransfer.setCardNum("1234-5678-9876-5432");
        balanceTransfer.setToken("Token1234");

        String expectedString = "com.td.mbna.msec.midtier.transfer.payload.BalanceTransferToCreditorPayeeType@" +
                Integer.toHexString(balanceTransfer.hashCode()) + 
                "[id=123,nickName=Test NickName,cardIssuerName=Visa,merchantId=456,cardNum=1234-5678-9876-5432,token=Token1234]";

        assertEquals(expectedString, balanceTransfer.toString());
    }

    @Test
    void testHashCode() {
        balanceTransfer.setId("123");
        balanceTransfer.setNickName("Test NickName");
        balanceTransfer.setCardIssuerName("Visa");
        balanceTransfer.setMerchantId("456");
        balanceTransfer.setCardNum("1234-5678-9876-5432");
        balanceTransfer.setToken("Token1234");

        int expectedHashCode = balanceTransfer.hashCode();

        BalanceTransferToCreditorPayeeType anotherBalanceTransfer = new BalanceTransferToCreditorPayeeType();
        anotherBalanceTransfer.setId("123");
        anotherBalanceTransfer.setNickName("Test NickName");
        anotherBalanceTransfer.setCardIssuerName("Visa");
        anotherBalanceTransfer.setMerchantId("456");
        anotherBalanceTransfer.setCardNum("1234-5678-9876-5432");
        anotherBalanceTransfer.setToken("Token1234");

        assertEquals(expectedHashCode, anotherBalanceTransfer.hashCode());
    }

    @Test
    void testEquals() {
        balanceTransfer.setId("123");
        balanceTransfer.setNickName("Test NickName");
        balanceTransfer.setCardIssuerName("Visa");
        balanceTransfer.setMerchantId("456");
        balanceTransfer.setCardNum("1234-5678-9876-5432");
        balanceTransfer.setToken("Token1234");

        BalanceTransferToCreditorPayeeType anotherBalanceTransfer = new BalanceTransferToCreditorPayeeType();
        anotherBalanceTransfer.setId("123");
        anotherBalanceTransfer.setNickName("Test NickName");
        anotherBalanceTransfer.setCardIssuerName("Visa");
        anotherBalanceTransfer.setMerchantId("456");
        anotherBalanceTransfer.setCardNum("1234-5678-9876-5432");
        anotherBalanceTransfer.setToken("Token1234");

        assertTrue(balanceTransfer.equals(anotherBalanceTransfer));

        anotherBalanceTransfer.setCardIssuerName("MasterCard");
        assertFalse(balanceTransfer.equals(anotherBalanceTransfer));

        anotherBalanceTransfer.setId("124");
        assertFalse(balanceTransfer.equals(anotherBalanceTransfer));

        assertFalse(balanceTransfer.equals(null));
        assertFalse(balanceTransfer.equals(new Object()));
    }

    @Test
    void testEqualsWithSameReference() {
        balanceTransfer.setId("123");
        balanceTransfer.setNickName("Test NickName");
        balanceTransfer.setCardIssuerName("Visa");
        balanceTransfer.setMerchantId("456");
        balanceTransfer.setCardNum("1234-5678-9876-5432");
        balanceTransfer.setToken("Token1234");

        assertTrue(balanceTransfer.equals(balanceTransfer));
    }

    @Test
    void testEqualsWithNullValues() {
        balanceTransfer.setId(null);
        balanceTransfer.setNickName(null);
        balanceTransfer.setCardIssuerName(null);
        balanceTransfer.setMerchantId(null);
        balanceTransfer.setCardNum(null);
        balanceTransfer.setToken(null);

        BalanceTransferToCreditorPayeeType anotherBalanceTransfer = new BalanceTransferToCreditorPayeeType();
        anotherBalanceTransfer.setId(null);
        anotherBalanceTransfer.setNickName(null);
        anotherBalanceTransfer.setCardIssuerName(null);
        anotherBalanceTransfer.setMerchantId(null);
        anotherBalanceTransfer.setCardNum(null);
        anotherBalanceTransfer.setToken(null);

        assertTrue(balanceTransfer.equals(anotherBalanceTransfer));
    }

    @Test
    void testHashCodeWithNullValues() {
        balanceTransfer.setId(null);
        balanceTransfer.setNickName(null);
        balanceTransfer.setCardIssuerName(null);
        balanceTransfer.setMerchantId(null);
        balanceTransfer.setCardNum(null);
        balanceTransfer.setToken(null);

        BalanceTransferToCreditorPayeeType anotherBalanceTransfer = new BalanceTransferToCreditorPayeeType();
        anotherBalanceTransfer.setId(null);
        anotherBalanceTransfer.setNickName(null);
        anotherBalanceTransfer.setCardIssuerName(null);
        anotherBalanceTransfer.setMerchantId(null);
        anotherBalanceTransfer.setCardNum(null);
        anotherBalanceTransfer.setToken(null);

        assertEquals(balanceTransfer.hashCode(), anotherBalanceTransfer.hashCode());
    }
}
