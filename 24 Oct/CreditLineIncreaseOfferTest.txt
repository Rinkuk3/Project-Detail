package com.td.mbna.msec.offers.domain;

import java.math.BigDecimal;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class CreditLineIncreaseOfferTest {

    @Test
    public void testDefaultConstructor() {
        CreditLineIncreaseOffer offer = new CreditLineIncreaseOffer();

        // Assert that the offer is initialized correctly
        assertEquals(OfferCategory.CREDIT_LINE_INCREASE, offer.getCategory());
        assertEquals(null, offer.getCreditLimitAmount());
    }

    @Test
    public void testParameterizedConstructor() {
        BigDecimal creditLimit = BigDecimal.valueOf(5000);
        CreditLineIncreaseOffer offer = new CreditLineIncreaseOffer("offerId", "offerType", creditLimit);

        // Assert that the offer is initialized correctly
        assertEquals("offerId", offer.getId());
        assertEquals("offerType", offer.getType());
        assertEquals(creditLimit, offer.getCreditLimitAmount());
        assertEquals(OfferCategory.CREDIT_LINE_INCREASE, offer.getCategory());
    }

    @Test
    public void testBuilder() {
        BigDecimal creditLimit = BigDecimal.valueOf(10000);
        
        CreditLineIncreaseOffer offer = new CreditLineIncreaseOffer.CreditLineIncreaseOfferBuilder()
            .setId("offerId")
            .setType("offerType")
            .setCreditLimitAmount(creditLimit)
            .build();

        // Assert that the offer is initialized correctly using the builder
        assertEquals("offerId", offer.getId());
        assertEquals("offerType", offer.getType());
        assertEquals(creditLimit, offer.getCreditLimitAmount());
        assertEquals(OfferCategory.CREDIT_LINE_INCREASE, offer.getCategory());
    }

    @Test
    public void testGetCreditLimitAmount() {
        BigDecimal creditLimit = BigDecimal.valueOf(2000);
        CreditLineIncreaseOffer offer = new CreditLineIncreaseOffer("offerId", "offerType", creditLimit);

        // Assert that the credit limit amount is retrieved correctly
        assertEquals(creditLimit, offer.getCreditLimitAmount());
    }
}
