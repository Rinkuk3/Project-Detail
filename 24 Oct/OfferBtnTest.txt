package com.td.mbna.msec.offers.domain;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import com.td.mbna.msec.nudge.model.TargetURL;

class OfferBtnTest {

    @Test
    void testDefaultConstructor() {
        OfferBtn offerBtn = new OfferBtn();

        // Verify that no values are set initially
        assertNull(offerBtn.getText());
        assertNull(offerBtn.getTargetUrl());
    }

    @Test
    void testSetAndGetText() {
        OfferBtn offerBtn = new OfferBtn();
        String expectedText = "Click Here";

        offerBtn.setText(expectedText);

        // Verify the getter returns the value set by the setter
        assertEquals(expectedText, offerBtn.getText());
    }

    @Test
    void testSetAndGetTargetUrl() {
        OfferBtn offerBtn = new OfferBtn();
        TargetURL expectedTargetUrl = new TargetURL();
        expectedTargetUrl.setUrl("https://example.com");

        offerBtn.setTargetUrl(expectedTargetUrl);

        // Verify the getter returns the value set by the setter
        assertEquals(expectedTargetUrl, offerBtn.getTargetUrl());
    }

    @Test
    void testSerialization() {
        OfferBtn offerBtn = new OfferBtn();
        offerBtn.setText("Click Here");
        TargetURL targetURL = new TargetURL();
        targetURL.setUrl("https://example.com");
        offerBtn.setTargetUrl(targetURL);

        // Serialization test (using Java serialization)
        byte[] serializedData;
        try {
            serializedData = serialize(offerBtn);
            OfferBtn deserializedOfferBtn = deserialize(serializedData);

            // Verify that the deserialized object is equal to the original
            assertEquals(offerBtn.getText(), deserializedOfferBtn.getText());
            assertEquals(offerBtn.getTargetUrl(), deserializedOfferBtn.getTargetUrl());
        } catch (Exception e) {
            fail("Serialization test failed: " + e.getMessage());
        }
    }

    // Helper method to serialize an object
    private byte[] serialize(Object obj) throws Exception {
        java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream();
        java.io.ObjectOutputStream out = new java.io.ObjectOutputStream(bos);
        out.writeObject(obj);
        return bos.toByteArray();
    }

    // Helper method to deserialize an object
    private OfferBtn deserialize(byte[] data) throws Exception {
        java.io.ByteArrayInputStream bis = new java.io.ByteArrayInputStream(data);
        java.io.ObjectInputStream in = new java.io.ObjectInputStream(bis);
        return (OfferBtn) in.readObject();
    }
}
