package com.td.mbna.msec.rewards.controller;

import com.td.mbna.msec.common.TokenHolderService;
import com.td.mbna.msec.rewards.model.RewardsBalance;
import com.td.mbna.msec.rewards.model.RewardsInfo;
import com.td.mbna.msec.rewards.service.RewardsService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import javax.servlet.http.HttpServletRequest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.when;

public class RewardsControllerTest {

    @InjectMocks
    private RewardsController rewardsController;

    @Mock
    private RewardsService rewardsService;

    @Mock
    private TokenHolderService tokenHolderService;

    @Mock
    private HttpServletRequest request;

    private String accountNumber = "12345";
    private String accountId = "67890";
    private String jwtToken = "mockToken";
    private RewardsInfo mockRewardsInfo;
    private RewardsBalance mockRewardsBalance;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        mockRewardsInfo = new RewardsInfo(); // Set up mock data
        mockRewardsBalance = new RewardsBalance(); // Set up mock data
    }

    @Test
    public void testGetRewardsInfo() {
        // Arrange
        when(rewardsService.getRewardsInfo(eq(accountNumber), any(HttpServletRequest.class))).thenReturn(mockRewardsInfo);

        // Act
        RewardsInfo result = rewardsController.getRewardsInfo(accountNumber, request);

        // Assert
        assertEquals(mockRewardsInfo, result);
    }

    @Test
    public void testGetRewards() {
        // Arrange
        when(tokenHolderService.getJwtTokenFromContext()).thenReturn(jwtToken);
        when(rewardsService.getRewardsBalance(eq(accountId), eq(jwtToken))).thenReturn(mockRewardsBalance);

        // Act
        RewardsBalance result = rewardsController.getRewards(accountId);

        // Assert
        assertEquals(mockRewardsBalance, result);
    }
}
