package com.td.mbna.msec.notification.model;

import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class CustomerAlertPreferenceOptionsTest {

    private CustomerAlertPreferenceOptions options;

    @BeforeEach
    public void setUp() {
        options = new CustomerAlertPreferenceOptions();
    }

    @Test
    public void testGetAndSetSelectedAgreementKey() {
        String expected = "agreementKey123";
        options.setSelectedAgreementKey(expected);
        assertEquals(expected, options.getSelectedAgreementKey());
    }

    @Test
    public void testGetAndSetAlertFilterDisplayOption() {
        String expected = "OL";
        options.setAlertFilterDisplayOption(expected);
        assertEquals(expected, options.getAlertFilterDisplayOption());
    }

    @Test
    public void testGetAndSetAgreement() {
        List<Agreement> agreements = new ArrayList<>();
        Agreement agreement = new Agreement();
        agreement.setAgreementKey("00000074548");
        agreement.setAgreementName("TD Visa Infinite");
        agreements.add(agreement);
        
        options.setAgreement(agreements);
        assertEquals(agreements, options.getAgreement());
    }

    @Test
    public void testEqualsAndHashCode() {
        CustomerAlertPreferenceOptions options1 = new CustomerAlertPreferenceOptions();
        CustomerAlertPreferenceOptions options2 = new CustomerAlertPreferenceOptions();

        options1.setSelectedAgreementKey("agreementKey123");
        options1.setAlertFilterDisplayOption("OL");
        List<Agreement> agreements1 = new ArrayList<>();
        Agreement agreement1 = new Agreement();
        agreement1.setAgreementKey("00000074548");
        agreement1.setAgreementName("TD Visa Infinite");
        agreements1.add(agreement1);
        options1.setAgreement(agreements1);

        options2.setSelectedAgreementKey("agreementKey123");
        options2.setAlertFilterDisplayOption("OL");
        List<Agreement> agreements2 = new ArrayList<>();
        Agreement agreement2 = new Agreement();
        agreement2.setAgreementKey("00000074548");
        agreement2.setAgreementName("TD Visa Infinite");
        agreements2.add(agreement2);
        options2.setAgreement(agreements2);

        // Test equality
        assertEquals(options1, options2);
        assertEquals(options1.hashCode(), options2.hashCode());

        // Test inequality
        options2.setSelectedAgreementKey("differentKey");
        assertNotEquals(options1, options2);
        
        options2.setSelectedAgreementKey("agreementKey123");
        options2.setAlertFilterDisplayOption("TH");
        assertNotEquals(options1, options2);
        
        options2.setAlertFilterDisplayOption("OL");
        options2.setAgreement(new ArrayList<>());
        assertNotEquals(options1, options2);
    }

    @Test
    public void testToString() {
        options.setSelectedAgreementKey("agreementKey123");
        options.setAlertFilterDisplayOption("OL");
        
        List<Agreement> agreements = new ArrayList<>();
        Agreement agreement = new Agreement();
        agreement.setAgreementKey("00000074548");
        agreement.setAgreementName("TD Visa Infinite");
        agreements.add(agreement);
        options.setAgreement(agreements);

        String expectedString = "CustomerAlertPreferenceOptions(selectedAgreementKey=agreementKey123, alertFilterDisplayOption=OL, agreement=[" +
                "Agreement(agreementKey=00000074548, agreementName=TD Visa Infinite)])";
        assertEquals(expectedString, options.toString());
    }
}
