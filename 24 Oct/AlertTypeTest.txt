package com.td.mbna.msec.notification.model;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class AlertTypeTest {

    private AlertType alertType;

    @BeforeEach
    public void setUp() {
        alertType = new AlertType();
    }

    @Test
    public void testGetAndSetAlertTypeCd() {
        String expectedAlertTypeCd = "ALERT_TYPE_1";
        alertType.setAlertTypeCd(expectedAlertTypeCd);
        assertEquals(expectedAlertTypeCd, alertType.getAlertTypeCd());
    }

    @Test
    public void testGetAndSetAlertSetupVal() {
        String expectedAlertSetupVal = "Setup Value";
        alertType.setAlertSetupVal(expectedAlertSetupVal);
        assertEquals(expectedAlertSetupVal, alertType.getAlertSetupVal());
    }

    @Test
    public void testGetAndSetDeliveryMethodCd() {
        String expectedDeliveryMethodCd = "DELIVERY_METHOD_1";
        alertType.setDeliveryMethodCd(expectedDeliveryMethodCd);
        assertEquals(expectedDeliveryMethodCd, alertType.getDeliveryMethodCd());
    }

    @Test
    public void testEqualsAndHashCode() {
        AlertType alertType1 = new AlertType();
        AlertType alertType2 = new AlertType();

        alertType1.setAlertTypeCd("ALERT_TYPE_1");
        alertType1.setAlertSetupVal("Setup Value");
        alertType1.setDeliveryMethodCd("DELIVERY_METHOD_1");

        alertType2.setAlertTypeCd("ALERT_TYPE_1");
        alertType2.setAlertSetupVal("Setup Value");
        alertType2.setDeliveryMethodCd("DELIVERY_METHOD_1");

        // Test equality
        assertEquals(alertType1, alertType2);
        assertEquals(alertType1.hashCode(), alertType2.hashCode());

        // Test inequality
        alertType2.setAlertTypeCd("ALERT_TYPE_2");
        assertNotEquals(alertType1, alertType2);
        
        alertType2.setAlertTypeCd("ALERT_TYPE_1");
        alertType2.setAlertSetupVal(null);
        assertNotEquals(alertType1, alertType2);
        
        alertType2.setAlertSetupVal("Setup Value");
        alertType2.setDeliveryMethodCd(null);
        assertNotEquals(alertType1, alertType2);
    }

    @Test
    public void testToString() {
        alertType.setAlertTypeCd("ALERT_TYPE_1");
        alertType.setAlertSetupVal("Setup Value");
        alertType.setDeliveryMethodCd("DELIVERY_METHOD_1");

        String expectedString = "AlertType [alertTypeCd=ALERT_TYPE_1, alertSetupVal=Setup Value, deliveryMethodCd=DELIVERY_METHOD_1]";
        assertEquals(expectedString, alertType.toString());
    }
}
