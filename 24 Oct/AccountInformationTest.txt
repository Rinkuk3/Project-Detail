package com.td.mbna.msec.kyc.dto;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

public class AccountInformationTest {

    private AccountInformation accountInfo;

    @BeforeEach
    public void setUp() {
        accountInfo = new AccountInformation();
        accountInfo.setAccountId("12345");
        accountInfo.setLogo("logo.png");
        accountInfo.setSmlogo("smlogo.png");
        accountInfo.setMobileSmLogo("mobilesmlogo.png");
        accountInfo.setCptDescription("Account Description");
        accountInfo.setCardNameShortFr("Nom de la carte");
        accountInfo.setCardNameShort("Short Card Name");
        accountInfo.setEndingIn("1234");
        accountInfo.setIsEnrolled(true);
        accountInfo.setPrimaryCardHolderInfo(new PrimaryCardHolderInfo()); // Assuming a no-arg constructor exists
        List<AuthorizedUser> authorizedUserList = new ArrayList<>();
        authorizedUserList.add(new AuthorizedUser()); // Assuming a no-arg constructor exists
        accountInfo.setAuthorizedUsers(authorizedUserList);
    }

    @Test
    public void testGetAndSetAccountId() {
        accountInfo.setAccountId("54321");
        assertEquals("54321", accountInfo.getAccountId());
    }

    @Test
    public void testGetAndSetLogo() {
        accountInfo.setLogo("newlogo.png");
        assertEquals("newlogo.png", accountInfo.getLogo());
    }

    @Test
    public void testGetAndSetSmlogo() {
        accountInfo.setSmlogo("newsmlogo.png");
        assertEquals("newsmlogo.png", accountInfo.getSmlogo());
    }

    @Test
    public void testGetAndSetMobileSmLogo() {
        accountInfo.setMobileSmLogo("newmobilesmlogo.png");
        assertEquals("newmobilesmlogo.png", accountInfo.getMobileSmLogo());
    }

    @Test
    public void testGetAndSetCptDescription() {
        accountInfo.setCptDescription("New Account Description");
        assertEquals("New Account Description", accountInfo.getCptDescription());
    }

    @Test
    public void testGetAndSetCardNameShortFr() {
        accountInfo.setCardNameShortFr("Nouveau nom de carte");
        assertEquals("Nouveau nom de carte", accountInfo.getCardNameShortFr());
    }

    @Test
    public void testGetAndSetCardNameShort() {
        accountInfo.setCardNameShort("Nom court de carte");
        assertEquals("Nom court de carte", accountInfo.getCardNameShort());
    }

    @Test
    public void testGetAndSetEndingIn() {
        accountInfo.setEndingIn("5678");
        assertEquals("5678", accountInfo.getEndingIn());
    }

    @Test
    public void testGetAndSetIsEnrolled() {
        accountInfo.setIsEnrolled(false);
        assertFalse(accountInfo.getIsEnrolled());
    }

    @Test
    public void testGetAndSetPrimaryCardHolderInfo() {
        PrimaryCardHolderInfo primaryCardHolderInfo = new PrimaryCardHolderInfo();
        accountInfo.setPrimaryCardHolderInfo(primaryCardHolderInfo);
        assertEquals(primaryCardHolderInfo, accountInfo.getPrimaryCardHolderInfo());
    }

    @Test
    public void testGetAndSetAuthorizedUsers() {
        List<AuthorizedUser> users = new ArrayList<>();
        users.add(new AuthorizedUser());
        accountInfo.setAuthorizedUsers(users);
        assertEquals(users, accountInfo.getAuthorizedUsers());
    }

    @Test
    public void testEqualsAndHashCode() {
        AccountInformation accountInfo1 = new AccountInformation();
        accountInfo1.setAccountId("12345");
        accountInfo1.setLogo("logo.png");
        accountInfo1.setSmlogo("smlogo.png");
        accountInfo1.setMobileSmLogo("mobilesmlogo.png");
        accountInfo1.setCptDescription("Account Description");
        accountInfo1.setCardNameShortFr("Nom de la carte");
        accountInfo1.setCardNameShort("Short Card Name");
        accountInfo1.setEndingIn("1234");
        accountInfo1.setIsEnrolled(true);
        accountInfo1.setPrimaryCardHolderInfo(new PrimaryCardHolderInfo());
        accountInfo1.setAuthorizedUsers(new ArrayList<>());

        AccountInformation accountInfo2 = new AccountInformation();
        accountInfo2.setAccountId("12345");
        accountInfo2.setLogo("logo.png");
        accountInfo2.setSmlogo("smlogo.png");
        accountInfo2.setMobileSmLogo("mobilesmlogo.png");
        accountInfo2.setCptDescription("Account Description");
        accountInfo2.setCardNameShortFr("Nom de la carte");
        accountInfo2.setCardNameShort("Short Card Name");
        accountInfo2.setEndingIn("1234");
        accountInfo2.setIsEnrolled(true);
        accountInfo2.setPrimaryCardHolderInfo(new PrimaryCardHolderInfo());
        accountInfo2.setAuthorizedUsers(new ArrayList<>());

        // Test equality
        assertEquals(accountInfo1, accountInfo2);
        assertEquals(accountInfo1.hashCode(), accountInfo2.hashCode());

        // Test inequality
        accountInfo2.setAccountId("54321");
        assertNotEquals(accountInfo1, accountInfo2);
    }

    @Test
    public void testToString() {
        String stringRepresentation = accountInfo.toString();
        assertTrue(stringRepresentation.contains("accountId=12345"));
        assertTrue(stringRepresentation.contains("logo=logo.png"));
        assertTrue(stringRepresentation.contains("smlogo=smlogo.png"));
        assertTrue(stringRepresentation.contains("mobileSmLogo=mobilesmlogo.png"));
        assertTrue(stringRepresentation.contains("cptDescription=Account Description"));
        assertTrue(stringRepresentation.contains("cardNameShortFr=Nom de la carte"));
        assertTrue(stringRepresentation.contains("cardNameShort=Short Card Name"));
        assertTrue(stringRepresentation.contains("endingIn=1234"));
        assertTrue(stringRepresentation.contains("isEnrolled=true"));
    }
}
