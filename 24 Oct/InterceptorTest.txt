package com.td.mbna.msec.interceptor.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class InterceptorTest {

    private Interceptor interceptor;
    private Button button1;
    private Button button2;

    @BeforeEach
    void setUp() {
        interceptor = new Interceptor();
        button1 = new Button();
        button1.setText("Button 1");
        button2 = new Button();
        button2.setText("Button 2");
    }

    @Test
    void testSetAndGetId() {
        interceptor.setId("12345");
        assertEquals("12345", interceptor.getId());
    }

    @Test
    void testSetAndGetName() {
        interceptor.setName("Interceptor Name");
        assertEquals("Interceptor Name", interceptor.getName());
    }

    @Test
    void testSetAndGetImageUrl() {
        interceptor.setImageurl("http://image.url");
        assertEquals("http://image.url", interceptor.getImageurl());
    }

    @Test
    void testSetAndGetTitle() {
        interceptor.setTitle("Title");
        assertEquals("Title", interceptor.getTitle());
    }

    @Test
    void testSetAndGetBodyCopy() {
        interceptor.setBodycopy("This is the body copy.");
        assertEquals("This is the body copy.", interceptor.getBodycopy());
    }

    @Test
    void testSetAndGetLegalNote() {
        interceptor.setLegalnote("Legal note content.");
        assertEquals("Legal note content.", interceptor.getLegalnote());
    }

    @Test
    void testSetAndGetAccountId() {
        interceptor.setAccountId("acc123");
        assertEquals("acc123", interceptor.getAccountId());
    }

    @Test
    void testSetAndGetOfferId() {
        interceptor.setOfferId("off123");
        assertEquals("off123", interceptor.getOfferId());
    }

    @Test
    void testSetAndGetContent() {
        interceptor.setContent("Content here.");
        assertEquals("Content here.", interceptor.getContent());
    }

    @Test
    void testSetAndGetClosable() {
        interceptor.setClosable(true);
        assertTrue(interceptor.isClosable());

        interceptor.setClosable(false);
        assertFalse(interceptor.isClosable());
    }

    @Test
    void testSetAndGetIsMarketingIntercept() {
        interceptor.setMarketingIntercept(true);
        assertTrue(interceptor.isMarketingIntercept());

        interceptor.setMarketingIntercept(false);
        assertFalse(interceptor.isMarketingIntercept());
    }

    @Test
    void testSetAndGetDeeplinkSuppressed() {
        interceptor.setDeeplinkSuppressed(true);
        assertTrue(interceptor.isDeeplinkSuppressed());

        interceptor.setDeeplinkSuppressed(false);
        assertFalse(interceptor.isDeeplinkSuppressed());
    }

    @Test
    void testSetAndGetButtons() {
        List<Button> buttons = Arrays.asList(button1, button2);
        interceptor.setButtons(buttons);
        assertEquals(buttons, interceptor.getButtons());
    }

    @Test
    void testSetAndGetLink() {
        Button linkButton = new Button();
        linkButton.setText("Link");
        interceptor.setLink(linkButton);
        assertEquals(linkButton, interceptor.getLink());
    }

    @Test
    void testSetAndGetLabel() {
        Button labelButton = new Button();
        labelButton.setText("Label");
        interceptor.setLabel(labelButton);
        assertEquals(labelButton, interceptor.getLabel());
    }

    @Test
    void testHashCodeAndEquals() {
        Interceptor anotherInterceptor = new Interceptor();
        anotherInterceptor.setId("12345");

        interceptor.setId("12345");
        assertEquals(interceptor, anotherInterceptor);
        assertEquals(interceptor.hashCode(), anotherInterceptor.hashCode());

        anotherInterceptor.setId("54321");
        assertNotEquals(interceptor, anotherInterceptor);
    }

    @Test
    void testToString() {
        interceptor.setId("12345");
        interceptor.setName("Interceptor Name");
        interceptor.setTitle("Title");

        String expectedString = "Interceptor(id=12345, name=Interceptor Name, imageurl=null, title=Title, bodycopy=null, legalnote=null, accountId=null, offerId=null, content=null, closable=false, isMarketingIntercept=false, deeplinkSuppressed=false, buttons=null, link=null, label=null)";
        assertEquals(expectedString, interceptor.toString());
    }
}
