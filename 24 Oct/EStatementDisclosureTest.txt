package com.td.mbna.msec.statement.domain;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class EStatementDisclosureTest {

    @Test
    void testConstructorAndGetters() {
        // Arrange
        String expectedPreConsentDisclosureText = "Pre-consent disclosure";
        String expectedDisclosureText = "Disclosure text";
        String expectedCampaignDisclosureText = "Campaign disclosure";

        // Act
        EStatementDisclosure disclosure = new EStatementDisclosure();
        disclosure.setPreConsentDisclosureText(expectedPreConsentDisclosureText);
        disclosure.setDisclosureText(expectedDisclosureText);
        disclosure.setCampaignDisclosureText(expectedCampaignDisclosureText);
        
        // Assert
        assertEquals(expectedPreConsentDisclosureText, disclosure.getPreConsentDisclosureText());
        assertEquals(expectedDisclosureText, disclosure.getDisclosureText());
        assertEquals(expectedCampaignDisclosureText, disclosure.getCampaignDisclosureText());
    }

    @Test
    void testSetters() {
        // Arrange
        EStatementDisclosure disclosure = new EStatementDisclosure();

        // Act
        String newPreConsentDisclosureText = "New pre-consent disclosure";
        String newDisclosureText = "New disclosure text";
        String newCampaignDisclosureText = "New campaign disclosure";
        
        disclosure.setPreConsentDisclosureText(newPreConsentDisclosureText);
        disclosure.setDisclosureText(newDisclosureText);
        disclosure.setCampaignDisclosureText(newCampaignDisclosureText);

        // Assert
        assertEquals(newPreConsentDisclosureText, disclosure.getPreConsentDisclosureText());
        assertEquals(newDisclosureText, disclosure.getDisclosureText());
        assertEquals(newCampaignDisclosureText, disclosure.getCampaignDisclosureText());
    }

    @Test
    void testEquals() {
        // Arrange
        EStatementDisclosure disclosure1 = new EStatementDisclosure();
        disclosure1.setPreConsentDisclosureText("Text1");
        disclosure1.setDisclosureText("Text2");
        disclosure1.setCampaignDisclosureText("Text3");

        EStatementDisclosure disclosure2 = new EStatementDisclosure();
        disclosure2.setPreConsentDisclosureText("Text1");
        disclosure2.setDisclosureText("Text2");
        disclosure2.setCampaignDisclosureText("Text3");

        EStatementDisclosure disclosure3 = new EStatementDisclosure();
        disclosure3.setPreConsentDisclosureText("Different");
        disclosure3.setDisclosureText("Text2");
        disclosure3.setCampaignDisclosureText("Text3");

        // Act & Assert
        assertEquals(disclosure1, disclosure2); // same fields
        assertNotEquals(disclosure1, disclosure3); // different fields
    }

    @Test
    void testHashCode() {
        // Arrange
        EStatementDisclosure disclosure = new EStatementDisclosure();
        disclosure.setPreConsentDisclosureText("Text1");
        disclosure.setDisclosureText("Text2");
        disclosure.setCampaignDisclosureText("Text3");

        // Act
        int expectedHashCode = disclosure.getPreConsentDisclosureText().hashCode() * 31 +
                               disclosure.getDisclosureText().hashCode() * 31 +
                               disclosure.getCampaignDisclosureText().hashCode();

        // Assert
        assertEquals(expectedHashCode, disclosure.hashCode());
    }

    @Test
    void testToString() {
        // Arrange
        EStatementDisclosure disclosure = new EStatementDisclosure();
        disclosure.setPreConsentDisclosureText("Pre-consent text");
        disclosure.setDisclosureText("Disclosure text");
        disclosure.setCampaignDisclosureText("Campaign text");

        // Act
        String expectedString = "EStatementDisclosure(preConsentDisclosureText=Pre-consent text, disclosureText=Disclosure text, campaignDisclosureText=Campaign text)";

        // Assert
        assertEquals(expectedString, disclosure.toString());
    }
}
