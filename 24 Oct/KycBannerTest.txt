package com.td.mbna.msec.kyc.dto;

import com.td.mbna.msec.interceptor.model.Button;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class KycBannerTest {

    @Test
    public void testDefaultConstructor() {
        KycBanner kycBanner = new KycBanner();

        // Test default values
        assertNull(kycBanner.getBannerTitle());
        assertNull(kycBanner.getBannerBody());
        assertNull(kycBanner.getDisclaimerTitle());
        assertNull(kycBanner.getDisclaimerBody());
        assertNull(kycBanner.getButtons());
    }

    @Test
    public void testSetAndGetBannerTitle() {
        KycBanner kycBanner = new KycBanner();
        kycBanner.setBannerTitle("Welcome to KYC");
        assertEquals("Welcome to KYC", kycBanner.getBannerTitle());
    }

    @Test
    public void testSetAndGetBannerBody() {
        KycBanner kycBanner = new KycBanner();
        kycBanner.setBannerBody("Please provide your information.");
        assertEquals("Please provide your information.", kycBanner.getBannerBody());
    }

    @Test
    public void testSetAndGetDisclaimerTitle() {
        KycBanner kycBanner = new KycBanner();
        kycBanner.setDisclaimerTitle("Disclaimer");
        assertEquals("Disclaimer", kycBanner.getDisclaimerTitle());
    }

    @Test
    public void testSetAndGetDisclaimerBody() {
        KycBanner kycBanner = new KycBanner();
        kycBanner.setDisclaimerBody("Your data is safe with us.");
        assertEquals("Your data is safe with us.", kycBanner.getDisclaimerBody());
    }

    @Test
    public void testSetAndGetButtons() {
        KycBanner kycBanner = new KycBanner();
        Button button1 = new Button(); // Assuming Button has a default constructor
        Button button2 = new Button(); // Assuming Button has a default constructor
        Button[] buttons = {button1, button2};
        
        kycBanner.setButtons(buttons);
        assertArrayEquals(buttons, kycBanner.getButtons());
    }

    @Test
    public void testEqualsAndHashCode() {
        KycBanner kycBanner1 = new KycBanner();
        KycBanner kycBanner2 = new KycBanner();

        assertEquals(kycBanner1, kycBanner2);
        assertEquals(kycBanner1.hashCode(), kycBanner2.hashCode());

        kycBanner1.setBannerTitle("Welcome to KYC");
        assertNotEquals(kycBanner1, kycBanner2);

        kycBanner2.setBannerTitle("Welcome to KYC");
        assertEquals(kycBanner1, kycBanner2);
        assertEquals(kycBanner1.hashCode(), kycBanner2.hashCode());

        kycBanner1.setBannerBody("Please provide your information.");
        assertNotEquals(kycBanner1, kycBanner2);

        kycBanner2.setBannerBody("Please provide your information.");
        assertEquals(kycBanner1, kycBanner2);
        assertEquals(kycBanner1.hashCode(), kycBanner2.hashCode());

        kycBanner1.setDisclaimerTitle("Disclaimer");
        assertNotEquals(kycBanner1, kycBanner2);

        kycBanner2.setDisclaimerTitle("Disclaimer");
        assertEquals(kycBanner1, kycBanner2);
        assertEquals(kycBanner1.hashCode(), kycBanner2.hashCode());

        kycBanner1.setDisclaimerBody("Your data is safe with us.");
        assertNotEquals(kycBanner1, kycBanner2);

        kycBanner2.setDisclaimerBody("Your data is safe with us.");
        assertEquals(kycBanner1, kycBanner2);
        assertEquals(kycBanner1.hashCode(), kycBanner2.hashCode());

        Button button1 = new Button(); // Assuming Button has a default constructor
        Button button2 = new Button(); // Assuming Button has a default constructor
        kycBanner1.setButtons(new Button[]{button1});
        kycBanner2.setButtons(new Button[]{button2});
        assertNotEquals(kycBanner1, kycBanner2);

        kycBanner2.setButtons(new Button[]{button1});
        assertEquals(kycBanner1, kycBanner2);
        assertEquals(kycBanner1.hashCode(), kycBanner2.hashCode());
    }

    @Test
    public void testToString() {
        KycBanner kycBanner = new KycBanner();
        kycBanner.setBannerTitle("Welcome to KYC");
        kycBanner.setBannerBody("Please provide your information.");
        kycBanner.setDisclaimerTitle("Disclaimer");
        kycBanner.setDisclaimerBody("Your data is safe with us.");
        
        // Use the expected format based on the @Data annotation, or adjust accordingly.
        String expectedString = "KycBanner(bannerTitle=Welcome to KYC, bannerBody=Please provide your information., " +
                "disclaimerTitle=Disclaimer, disclaimerBody=Your data is safe with us., buttons=null)"; // Adjust if the format differs
        assertEquals(expectedString, kycBanner.toString());
    }
}
