package com.td.mbna.msec.notification.model;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class UpdateCustomerNotificationAlertsResponseTest {

    private UpdateCustomerNotificationAlertsResponse response;

    @BeforeEach
    public void setUp() {
        response = new UpdateCustomerNotificationAlertsResponse();
        response.setSsoToken("test-sso-token");
        response.setTicketId("test-ticket-id");
        response.setUcpEditAlertsUrl("http://ucp.edit.alerts.url");
        response.setErrorCode("NO_ERROR");
        response.setErrorMessage("No error occurred");
    }

    @Test
    public void testGetAndSetSsoToken() {
        response.setSsoToken("new-sso-token");
        assertEquals("new-sso-token", response.getSsoToken());
    }

    @Test
    public void testGetAndSetTicketId() {
        response.setTicketId("new-ticket-id");
        assertEquals("new-ticket-id", response.getTicketId());
    }

    @Test
    public void testGetAndSetUcpEditAlertsUrl() {
        response.setUcpEditAlertsUrl("http://new.ucp.edit.alerts.url");
        assertEquals("http://new.ucp.edit.alerts.url", response.getUcpEditAlertsUrl());
    }

    @Test
    public void testGetAndSetErrorCode() {
        response.setErrorCode("ERROR_404");
        assertEquals("ERROR_404", response.getErrorCode());
    }

    @Test
    public void testGetAndSetErrorMessage() {
        response.setErrorMessage("An error occurred");
        assertEquals("An error occurred", response.getErrorMessage());
    }

    @Test
    public void testEqualsAndHashCode() {
        UpdateCustomerNotificationAlertsResponse response1 = new UpdateCustomerNotificationAlertsResponse();
        response1.setSsoToken("token1");
        response1.setTicketId("ticket1");
        response1.setUcpEditAlertsUrl("http://edit.url1");
        response1.setErrorCode("NO_ERROR");
        response1.setErrorMessage("No error");

        UpdateCustomerNotificationAlertsResponse response2 = new UpdateCustomerNotificationAlertsResponse();
        response2.setSsoToken("token1");
        response2.setTicketId("ticket1");
        response2.setUcpEditAlertsUrl("http://edit.url1");
        response2.setErrorCode("NO_ERROR");
        response2.setErrorMessage("No error");

        // Test equality
        assertEquals(response1, response2);
        assertEquals(response1.hashCode(), response2.hashCode());

        // Test inequality
        response2.setSsoToken("token2");
        assertNotEquals(response1, response2);
    }

    @Test
    public void testToString() {
        String stringRepresentation = response.toString();
        assertTrue(stringRepresentation.contains("ssoToken=test-sso-token"));
        assertTrue(stringRepresentation.contains("ticketId=test-ticket-id"));
        assertTrue(stringRepresentation.contains("ucpEditAlertsUrl=http://ucp.edit.alerts.url"));
        assertTrue(stringRepresentation.contains("errorCode=NO_ERROR"));
        assertTrue(stringRepresentation.contains("errorMessage=No error occurred"));
    }

    @Test
    public void testSerialVersionUID() {
        assertEquals(-4075389475881733051L, UpdateCustomerNotificationAlertsResponse.serialVersionUID);
    }
}
