package com.td.mbna.msec.interceptor.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class TargetUrlTest {

    private TargetUrl targetUrl;
    private FormVariable[] formVariables;

    @BeforeEach
    void setUp() {
        targetUrl = new TargetUrl();
        formVariables = new FormVariable[2];

        FormVariable formVar1 = new FormVariable();
        formVar1.setName("var1");
        formVar1.setValue("value1");

        FormVariable formVar2 = new FormVariable();
        formVar2.setName("var2");
        formVar2.setValue("value2");

        formVariables[0] = formVar1;
        formVariables[1] = formVar2;
    }

    @Test
    void testSetAndGetMethod() {
        targetUrl.setMethod("POST");
        assertEquals("POST", targetUrl.getMethod());
    }

    @Test
    void testSetAndGetAction() {
        targetUrl.setAction("/submitForm");
        assertEquals("/submitForm", targetUrl.getAction());
    }

    @Test
    void testSetAndGetGoPaperless() {
        targetUrl.setGoPaperless(true);
        assertTrue(targetUrl.isGoPaperless());

        targetUrl.setGoPaperless(false);
        assertFalse(targetUrl.isGoPaperless());
    }

    @Test
    void testSetAndGetPSO() {
        targetUrl.setPSO(true);
        assertTrue(targetUrl.isPSO());

        targetUrl.setPSO(false);
        assertFalse(targetUrl.isPSO());
    }

    @Test
    void testSetAndGetFormVariables() {
        targetUrl.setFormVariables(formVariables);
        assertArrayEquals(formVariables, targetUrl.getFormVariables());

        FormVariable[] emptyVariables = new FormVariable[0];
        targetUrl.setFormVariables(emptyVariables);
        assertArrayEquals(emptyVariables, targetUrl.getFormVariables());
    }

    @Test
    void testToString() {
        targetUrl.setMethod("POST");
        targetUrl.setAction("/submitForm");
        targetUrl.setGoPaperless(true);
        targetUrl.setPSO(false);
        targetUrl.setFormVariables(formVariables);

        String expected = "TargetUrl(method=POST, action=/submitForm, goPaperless=true, PSO=false, formVariables=[FormVariable(name=var1, value=value1), FormVariable(name=var2, value=value2)])";
        assertEquals(expected, targetUrl.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        TargetUrl targetUrl1 = new TargetUrl();
        targetUrl1.setMethod("POST");
        targetUrl1.setAction("/submitForm");
        targetUrl1.setGoPaperless(true);
        targetUrl1.setPSO(false);
        targetUrl1.setFormVariables(formVariables);

        TargetUrl targetUrl2 = new TargetUrl();
        targetUrl2.setMethod("POST");
        targetUrl2.setAction("/submitForm");
        targetUrl2.setGoPaperless(true);
        targetUrl2.setPSO(false);
        targetUrl2.setFormVariables(formVariables);

        assertEquals(targetUrl1, targetUrl2);
        assertEquals(targetUrl1.hashCode(), targetUrl2.hashCode());

        targetUrl2.setGoPaperless(false);
        assertNotEquals(targetUrl1, targetUrl2);
    }
}
