package com.td.mbna.msec.offers.domain;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class OfferCategoryTest {

    @Test
    void testGetText() {
        // Test each enum value to ensure getText() returns the correct string
        assertEquals("BALANCE-TRANSFER-PROMO", OfferCategory.BALANCE_TRANSFER_PROMO.getText());
        assertEquals("INSTALLMENT_PLAN", OfferCategory.INSTALLMENT_PLAN.getText());
        assertEquals("BALANCE-TRANSFER-CONTRACT", OfferCategory.BALANCE_TRANSFER_CONTRACT.getText());
        assertEquals("CREDIT-LINE-INCREASE", OfferCategory.CREDIT_LINE_INCREASE.getText());
        assertEquals("PRODUCT-CHANGE", OfferCategory.PRODUCT_CHANGE.getText());
        assertEquals("RETAIL", OfferCategory.RETAIL.getText());
        assertEquals("CASH-ADVANCE", OfferCategory.CASH_ADVANCE.getText());
        assertEquals("PAPERLESS", OfferCategory.PAPERLESS.getText());
        assertEquals("ADD-AUTHORIZED-USER", OfferCategory.ADD_AUTHORIZED_USER.getText());
        assertEquals("MIN-PAY-OFFER", OfferCategory.MINIMUM_PAYMENT_DEFERRAL.getText());
        assertEquals("APPROVED_CREDIT_LINE_INCREASE", OfferCategory.APPROVED_CREDIT_LINE_INCREASE.getText());
    }

    @Test
    void testFromString() {
        // Test the fromString method for various cases
        assertEquals(OfferCategory.BALANCE_TRANSFER_PROMO, OfferCategory.fromString("BALANCE-TRANSFER-PROMO"));
        assertEquals(OfferCategory.INSTALLMENT_PLAN, OfferCategory.fromString("INSTALLMENT_PLAN"));
        assertEquals(OfferCategory.BALANCE_TRANSFER_CONTRACT, OfferCategory.fromString("BALANCE-TRANSFER-CONTRACT"));
        assertEquals(OfferCategory.CREDIT_LINE_INCREASE, OfferCategory.fromString("CREDIT-LINE-INCREASE"));
        assertEquals(OfferCategory.PRODUCT_CHANGE, OfferCategory.fromString("PRODUCT-CHANGE"));
        assertEquals(OfferCategory.RETAIL, OfferCategory.fromString("RETAIL"));
        assertEquals(OfferCategory.CASH_ADVANCE, OfferCategory.fromString("CASH-ADVANCE"));
        assertEquals(OfferCategory.PAPERLESS, OfferCategory.fromString("PAPERLESS"));
        assertEquals(OfferCategory.ADD_AUTHORIZED_USER, OfferCategory.fromString("ADD-AUTHORIZED-USER"));
        assertEquals(OfferCategory.MINIMUM_PAYMENT_DEFERRAL, OfferCategory.fromString("MIN-PAY-OFFER"));
        assertEquals(OfferCategory.APPROVED_CREDIT_LINE_INCREASE, OfferCategory.fromString("APPROVED_CREDIT_LINE_INCREASE"));
        
        // Test case-insensitivity
        assertEquals(OfferCategory.BALANCE_TRANSFER_PROMO, OfferCategory.fromString("balance-transfer-promo"));
        assertEquals(OfferCategory.INSTALLMENT_PLAN, OfferCategory.fromString("INSTALLMENT_PLAN"));
        
        // Test an invalid string
        assertNull(OfferCategory.fromString("INVALID_CATEGORY"));
    }
}
