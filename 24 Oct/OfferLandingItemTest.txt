package com.td.mbna.msec.offerslanding.model;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class OfferLandingItemTest {

    @Test
    public void testGettersAndSetters() {
        // Create an instance of OfferLandingItem
        OfferLandingItem offerLandingItem = new OfferLandingItem();

        // Test boolean properties
        offerLandingItem.setPublish(true);
        assertEquals(true, offerLandingItem.isPublish());

        offerLandingItem.setEligibleForIPOffer(false);
        assertEquals(false, offerLandingItem.isEligibleForIPOffer());

        offerLandingItem.setAllowedSpecialOffers(true);
        assertEquals(true, offerLandingItem.isAllowedSpecialOffers());

        offerLandingItem.setRequiredProductUpgradeOffer(true);
        assertEquals(true, offerLandingItem.isRequiredProductUpgradeOffer());

        offerLandingItem.setAllowedCreditLimitIncrease(false);
        assertEquals(false, offerLandingItem.isAllowedCreditLimitIncrease());

        offerLandingItem.setRequiredCliOffer(true);
        assertEquals(true, offerLandingItem.isRequiredCliOffer());

        offerLandingItem.setAllowedBalanceTransfer(true);
        assertEquals(true, offerLandingItem.isAllowedBalanceTransfer());

        offerLandingItem.setRequireBtOffer(false);
        assertEquals(false, offerLandingItem.isRequireBtOffer());

        offerLandingItem.setAllowedBalanceProtection(true);
        assertEquals(true, offerLandingItem.isAllowedBalanceProtection());

        offerLandingItem.setRequiredBpOffer(false);
        assertEquals(false, offerLandingItem.isRequiredBpOffer());

        offerLandingItem.setAllowedStandardEForms(true);
        assertEquals(true, offerLandingItem.isAllowedStandardEForms());

        offerLandingItem.setAllowedToAddAU(false);
        assertEquals(false, offerLandingItem.isAllowedToAddAU());

        offerLandingItem.setAllowedPaperSuppression(true);
        assertEquals(true, offerLandingItem.isAllowedPaperSuppression());

        // Test string properties
        String requiredIpEligibleTrans = "eligibleTransaction";
        offerLandingItem.setRequiredIpEligibleTrans(requiredIpEligibleTrans);
        assertEquals(requiredIpEligibleTrans, offerLandingItem.getRequiredIpEligibleTrans());

        String emailRequired = "email@example.com";
        offerLandingItem.setEmailRequired(emailRequired);
        assertEquals(emailRequired, offerLandingItem.getEmailRequired());

        String accountCurrentSetting = "Current Setting";
        offerLandingItem.setAccountCurrentSetting(accountCurrentSetting);
        assertEquals(accountCurrentSetting, offerLandingItem.getAccountCurrentSetting());

        // Test integer property
        int accountNewlyOpened = 30;
        offerLandingItem.setAccountNewlyOpened(accountNewlyOpened);
        assertEquals(accountNewlyOpened, offerLandingItem.getAccountNewlyOpened());

        // Test UI properties
        String categoryId = "category1";
        offerLandingItem.setCategoryId(categoryId);
        assertEquals(categoryId, offerLandingItem.getCategoryId());

        String title = "Special Offer Title";
        offerLandingItem.setTitle(title);
        assertEquals(title, offerLandingItem.getTitle());

        String description = "This is a special offer description.";
        offerLandingItem.setDescription(description);
        assertEquals(description, offerLandingItem.getDescription());

        String img = "image.jpg";
        offerLandingItem.setImg(img);
        assertEquals(img, offerLandingItem.getImg());

        String omniTag = "omniTag1";
        offerLandingItem.setOmniTag(omniTag);
        assertEquals(omniTag, offerLandingItem.getOmniTag());

        // Test links
        Link link1 = new Link();
        link1.setText("Link 1");
        link1.setLink("http://link1.com");

        Link link2 = new Link();
        link2.setText("Link 2");
        link2.setLink("http://link2.com");

        offerLandingItem.setLinks(new Link[]{link1, link2});
        assertEquals(2, offerLandingItem.getLinks().length);
        assertEquals(link1, offerLandingItem.getLinks()[0]);
        assertEquals(link2, offerLandingItem.getLinks()[1]);
    }
}
