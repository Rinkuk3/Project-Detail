package com.td.mbna.msec.notification.model;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class GenerateTicketIdFromAlertsRequestTest {

    private GenerateTicketIdFromAlertsRequest request;

    @BeforeEach
    public void setUp() {
        request = new GenerateTicketIdFromAlertsRequest();
        request.setConnectId("Connect123");
        request.setPartyId("Party123");
        request.setConsumerConfig(new ConsumerConfig());
        request.setSessionManagement(new SessionManagement());
        request.setCustomerAlertPreferenceOptions(new CustomerAlertPreferenceOptions());
    }

    @Test
    public void testGetAndSetConnectId() {
        request.setConnectId("NewConnectId");
        assertEquals("NewConnectId", request.getConnectId());
    }

    @Test
    public void testGetAndSetPartyId() {
        request.setPartyId("NewPartyId");
        assertEquals("NewPartyId", request.getPartyId());
    }

    @Test
    public void testGetAndSetConsumerConfig() {
        ConsumerConfig newConfig = new ConsumerConfig();
        request.setConsumerConfig(newConfig);
        assertEquals(newConfig, request.getConsumerConfig());
    }

    @Test
    public void testGetAndSetSessionManagement() {
        SessionManagement newSession = new SessionManagement();
        request.setSessionManagement(newSession);
        assertEquals(newSession, request.getSessionManagement());
    }

    @Test
    public void testGetAndSetCustomerAlertPreferenceOptions() {
        CustomerAlertPreferenceOptions newOptions = new CustomerAlertPreferenceOptions();
        request.setCustomerAlertPreferenceOptions(newOptions);
        assertEquals(newOptions, request.getCustomerAlertPreferenceOptions());
    }

    @Test
    public void testEqualsAndHashCode() {
        GenerateTicketIdFromAlertsRequest request1 = new GenerateTicketIdFromAlertsRequest();
        request1.setConnectId("Connect123");
        request1.setPartyId("Party123");
        request1.setConsumerConfig(new ConsumerConfig());
        request1.setSessionManagement(new SessionManagement());
        request1.setCustomerAlertPreferenceOptions(new CustomerAlertPreferenceOptions());

        GenerateTicketIdFromAlertsRequest request2 = new GenerateTicketIdFromAlertsRequest();
        request2.setConnectId("Connect123");
        request2.setPartyId("Party123");
        request2.setConsumerConfig(new ConsumerConfig());
        request2.setSessionManagement(new SessionManagement());
        request2.setCustomerAlertPreferenceOptions(new CustomerAlertPreferenceOptions());

        // Test equality
        assertEquals(request1, request2);
        assertEquals(request1.hashCode(), request2.hashCode());

        // Test inequality
        request2.setConnectId("DifferentConnectId");
        assertNotEquals(request1, request2);
    }

    @Test
    public void testToString() {
        String expectedString = "GenerateTicketIdFromAlertsRequest(connectId=Connect123, partyId=Party123, consumerConfig=ConsumerConfig@*, sessionManagement=SessionManagement@*, customerAlertPreferenceOptions=CustomerAlertPreferenceOptions@*)";
        assertTrue(request.toString().contains("Connect123"));
        assertTrue(request.toString().contains("Party123"));
    }

    @Test
    public void testSerialVersionUID() {
        // Check if the serialVersionUID matches
        assertEquals(2530184914053722944L, GenerateTicketIdFromAlertsRequest.serialVersionUID);
    }
}
