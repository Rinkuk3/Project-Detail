package com.td.api.mbcca.response.account.featureview;

import org.junit.jupiter.api.Test;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.*;

class TermsFeatureTest {

    @Test
    void testGettersAndSetters() {
        TermsFeature termsFeature = new TermsFeature();

        // Setting values
        termsFeature.setLastUpdateDt("2024-12-20");
        termsFeature.setAgreementFeeFeatureId("AF001");
        termsFeature.setTransactionFeeFeatureId("TF001");
        termsFeature.setMembershipFeeFeatureId("MF001");
        termsFeature.setTriadPendingAgreementFeeFeatureId("TPAF001");
        termsFeature.setTriadPendingTransactionFeeFeatureId("TPTF001");
        termsFeature.setTriadPendingMembershipFeeFeatureId("TPMF001");
        termsFeature.setFeatureGroupId("FG001");
        TermBalance termBalance = new TermBalance();
        termsFeature.setTermBalance(Arrays.asList(termBalance));

        // Getting and asserting values
        assertEquals("2024-12-20", termsFeature.getLastUpdateDt());
        assertEquals("AF001", termsFeature.getAgreementFeeFeatureId());
        assertEquals("TF001", termsFeature.getTransactionFeeFeatureId());
        assertEquals("MF001", termsFeature.getMembershipFeeFeatureId());
        assertEquals("TPAF001", termsFeature.getTriadPendingAgreementFeeFeatureId());
        assertEquals("TPTF001", termsFeature.getTriadPendingTransactionFeeFeatureId());
        assertEquals("TPMF001", termsFeature.getTriadPendingMembershipFeeFeatureId());
        assertEquals("FG001", termsFeature.getFeatureGroupId());
        assertNotNull(termsFeature.getTermBalance());
        assertEquals(1, termsFeature.getTermBalance().size());
    }

    @Test
    void testToString() {
        TermsFeature termsFeature = new TermsFeature();
        termsFeature.setLastUpdateDt("2024-12-20");
        termsFeature.setAgreementFeeFeatureId("AF001");
        termsFeature.setTransactionFeeFeatureId("TF001");
        termsFeature.setMembershipFeeFeatureId("MF001");
        termsFeature.setTriadPendingAgreementFeeFeatureId("TPAF001");
        termsFeature.setTriadPendingTransactionFeeFeatureId("TPTF001");
        termsFeature.setTriadPendingMembershipFeeFeatureId("TPMF001");
        termsFeature.setFeatureGroupId("FG001");

        String expectedString = "com.td.api.mbcca.response.account.featureview.TermsFeature@" + 
                                Integer.toHexString(termsFeature.hashCode()) + 
                                "[lastUpdateDt=2024-12-20,agreementFeeFeatureId=AF001,transactionFeeFeatureId=TF001,membershipFeeFeatureId=MF001," + 
                                "triadPendingAgreementFeeFeatureId=TPAF001,triadPendingTransactionFeeFeatureId=TPTF001," + 
                                "triadPendingMembershipFeeFeatureId=TPMF001,featureGroupId=FG001,termBalance=<null>]";

        assertEquals(expectedString, termsFeature.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        TermsFeature termsFeature1 = new TermsFeature();
        termsFeature1.setLastUpdateDt("2024-12-20");
        termsFeature1.setAgreementFeeFeatureId("AF001");
        termsFeature1.setTransactionFeeFeatureId("TF001");
        termsFeature1.setMembershipFeeFeatureId("MF001");
        termsFeature1.setTriadPendingAgreementFeeFeatureId("TPAF001");
        termsFeature1.setTriadPendingTransactionFeeFeatureId("TPTF001");
        termsFeature1.setTriadPendingMembershipFeeFeatureId("TPMF001");
        termsFeature1.setFeatureGroupId("FG001");

        TermsFeature termsFeature2 = new TermsFeature();
        termsFeature2.setLastUpdateDt("2024-12-20");
        termsFeature2.setAgreementFeeFeatureId("AF001");
        termsFeature2.setTransactionFeeFeatureId("TF001");
        termsFeature2.setMembershipFeeFeatureId("MF001");
        termsFeature2.setTriadPendingAgreementFeeFeatureId("TPAF001");
        termsFeature2.setTriadPendingTransactionFeeFeatureId("TPTF001");
        termsFeature2.setTriadPendingMembershipFeeFeatureId("TPMF001");
        termsFeature2.setFeatureGroupId("FG001");

        assertTrue(termsFeature1.equals(termsFeature2));
        assertEquals(termsFeature1.hashCode(), termsFeature2.hashCode());

        termsFeature2.setFeatureGroupId("FG002");
        assertFalse(termsFeature1.equals(termsFeature2));
    }

}
