import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.List;

class RequestPayloadTest {

    @Test
    void testSetGetAccountNo() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setAccountNo("12345");
        
        assertEquals("12345", requestPayload.getAccountNo());
    }

    @Test
    void testSetGetDisclosureInfo() {
        RequestPayload requestPayload = new RequestPayload();
        List<DisclosureInfoType> disclosureInfoList = new ArrayList<>();
        disclosureInfoList.add(new DisclosureInfoType());
        
        requestPayload.setDisclosureInfo(disclosureInfoList);
        
        assertEquals(disclosureInfoList, requestPayload.getDisclosureInfo());
    }

    @Test
    void testSetGetLanguagePref() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setLanguagePref("EN");
        
        assertEquals("EN", requestPayload.getLanguagePref());
    }

    @Test
    void testSetGetRoleCD() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setRoleCD("Admin");
        
        assertEquals("Admin", requestPayload.getRoleCD());
    }

    @Test
    void testSetGetSelectedOffer() {
        RequestPayload requestPayload = new RequestPayload();
        PromotionOfferType offer = new PromotionOfferType();
        requestPayload.setSelectedOffer(offer);
        
        assertEquals(offer, requestPayload.getSelectedOffer());
    }

    @Test
    void testToString() {
        RequestPayload requestPayload = new RequestPayload();
        requestPayload.setAccountNo("12345");
        requestPayload.setLanguagePref("EN");
        requestPayload.setRoleCD("Admin");
        
        List<DisclosureInfoType> disclosureInfoList = new ArrayList<>();
        disclosureInfoList.add(new DisclosureInfoType());
        requestPayload.setDisclosureInfo(disclosureInfoList);
        
        PromotionOfferType offer = new PromotionOfferType();
        requestPayload.setSelectedOffer(offer);

        String expectedString = "RequestPayload@" + Integer.toHexString(System.identityHashCode(requestPayload)) + 
                "[accountNo=12345,disclosureInfo=" + disclosureInfoList + ",languagePref=EN,roleCD=Admin,selectedOffer=" + offer + "]";
        
        assertEquals(expectedString, requestPayload.toString());
    }

    @Test
    void testEquals() {
        RequestPayload requestPayload1 = new RequestPayload();
        RequestPayload requestPayload2 = new RequestPayload();
        
        requestPayload1.setAccountNo("12345");
        requestPayload1.setLanguagePref("EN");
        requestPayload1.setRoleCD("Admin");
        
        List<DisclosureInfoType> disclosureInfoList = new ArrayList<>();
        disclosureInfoList.add(new DisclosureInfoType());
        requestPayload1.setDisclosureInfo(disclosureInfoList);
        
        PromotionOfferType offer = new PromotionOfferType();
        requestPayload1.setSelectedOffer(offer);

        requestPayload2.setAccountNo("12345");
        requestPayload2.setLanguagePref("EN");
        requestPayload2.setRoleCD("Admin");
        requestPayload2.setDisclosureInfo(disclosureInfoList);
        requestPayload2.setSelectedOffer(offer);
        
        assertEquals(requestPayload1, requestPayload2);

        requestPayload2.setAccountNo("54321");
        assertNotEquals(requestPayload1, requestPayload2);
    }

    @Test
    void testHashCode() {
        RequestPayload requestPayload1 = new RequestPayload();
        RequestPayload requestPayload2 = new RequestPayload();
        
        requestPayload1.setAccountNo("12345");
        requestPayload1.setLanguagePref("EN");
        requestPayload1.setRoleCD("Admin");
        
        List<DisclosureInfoType> disclosureInfoList = new ArrayList<>();
        disclosureInfoList.add(new DisclosureInfoType());
        requestPayload1.setDisclosureInfo(disclosureInfoList);
        
        PromotionOfferType offer = new PromotionOfferType();
        requestPayload1.setSelectedOffer(offer);

        requestPayload2.setAccountNo("12345");
        requestPayload2.setLanguagePref("EN");
        requestPayload2.setRoleCD("Admin");
        requestPayload2.setDisclosureInfo(disclosureInfoList);
        requestPayload2.setSelectedOffer(offer);
        
        assertEquals(requestPayload1.hashCode(), requestPayload2.hashCode());
        
        requestPayload2.setAccountNo("54321");
        assertNotEquals(requestPayload1.hashCode(), requestPayload2.hashCode());
    }
}
