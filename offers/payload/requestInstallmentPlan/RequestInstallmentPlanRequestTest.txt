import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class RequestInstallmentPlanRequestTest {

    @Test
    void testSetGetRequestPayload() {
        RequestInstallmentPlanRequest request = new RequestInstallmentPlanRequest();
        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        
        assertEquals(payload, request.getRequestPayload());
    }

    @Test
    void testToString() {
        RequestInstallmentPlanRequest request = new RequestInstallmentPlanRequest();
        request.setSessionInfo("sessionInfo");
        request.setCustId("custId");
        request.setAliasCustId("aliasCustId");
        request.setAcctNum("acctNum");
        request.setAcctType("acctType");
        request.setLanguagePref("EN");
        request.setAuditInfo("auditInfo");
        request.setIsPrimaryUser(true);
        request.setReserved1("reserved1");
        request.setCustInterface("interface");
        request.setIsMultiCard(true);
        request.setCardNum("cardNum");

        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        
        String expectedString = "RequestInstallmentPlanRequest@" + Integer.toHexString(System.identityHashCode(request)) + 
                                "[sessionInfo=sessionInfo,custId=custId,aliasCustId=aliasCustId,acctNum=acctNum,acctType=acctType," +
                                "languagePref=EN,auditInfo=auditInfo,isPrimaryUser=true,reserved1=reserved1,custInterface=interface," +
                                "isMultiCard=true,cardNum=cardNum,requestPayload=" + payload + "]";
        
        assertEquals(expectedString, request.toString());
    }

    @Test
    void testHashCode() {
        RequestInstallmentPlanRequest request1 = new RequestInstallmentPlanRequest();
        RequestInstallmentPlanRequest request2 = new RequestInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request1.setRequestPayload(payload);
        request2.setRequestPayload(payload);
        
        assertEquals(request1.hashCode(), request2.hashCode());
        
        request1.setAcctNum("acct1");
        assertNotEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testEquals() {
        RequestInstallmentPlanRequest request1 = new RequestInstallmentPlanRequest();
        RequestInstallmentPlanRequest request2 = new RequestInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request1.setRequestPayload(payload);
        request2.setRequestPayload(payload);
        
        assertEquals(request1, request2);
        
        request1.setAcctNum("acct1");
        assertNotEquals(request1, request2);
    }

    @Test
    void testNotEquals() {
        RequestInstallmentPlanRequest request1 = new RequestInstallmentPlanRequest();
        RequestInstallmentPlanRequest request2 = new RequestInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request1.setRequestPayload(payload);
        request2.setRequestPayload(payload);
        
        request1.setAcctNum("acct1");
        
        assertNotEquals(request1, request2);
    }

    @Test
    void testDefaultValues() {
        RequestInstallmentPlanRequest request = new RequestInstallmentPlanRequest();
        
        assertNull(request.getRequestPayload());
        assertNull(request.getSessionInfo());
        assertNull(request.getCustId());
        assertNull(request.getAliasCustId());
        assertNull(request.getAcctNum());
        assertNull(request.getAcctType());
        assertNull(request.getLanguagePref());
        assertNull(request.getAuditInfo());
        assertNull(request.getReserved1());
        assertNull(request.getCustInterface());
        assertNull(request.getIsMultiCard());
        assertNull(request.getCardNum());
    }
}
