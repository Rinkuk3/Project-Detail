import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class ResponsePayloadTest {

    @Test
    void testSetGetStatus() {
        ResponsePayload payload = new ResponsePayload();
        
        payload.setStatus(true);
        assertTrue(payload.getStatus());

        payload.setStatus(false);
        assertFalse(payload.getStatus());

        payload.setStatus(null);
        assertNull(payload.getStatus());
    }

    @Test
    void testToString() {
        ResponsePayload payload = new ResponsePayload();
        
        payload.setStatus(true);
        String expectedString = "ResponsePayload@" + Integer.toHexString(System.identityHashCode(payload)) + "[status=true]";
        assertEquals(expectedString, payload.toString());

        payload.setStatus(null);
        expectedString = "ResponsePayload@" + Integer.toHexString(System.identityHashCode(payload)) + "[status=<null>]";
        assertEquals(expectedString, payload.toString());
    }

    @Test
    void testHashCode() {
        ResponsePayload payload1 = new ResponsePayload();
        ResponsePayload payload2 = new ResponsePayload();
        
        payload1.setStatus(true);
        payload2.setStatus(true);

        assertEquals(payload1.hashCode(), payload2.hashCode());

        payload2.setStatus(false);
        assertNotEquals(payload1.hashCode(), payload2.hashCode());
    }

    @Test
    void testEquals() {
        ResponsePayload payload1 = new ResponsePayload();
        ResponsePayload payload2 = new ResponsePayload();

        payload1.setStatus(true);
        payload2.setStatus(true);
        
        assertEquals(payload1, payload2);

        payload2.setStatus(false);
        assertNotEquals(payload1, payload2);

        payload1.setStatus(null);
        payload2.setStatus(null);
        assertEquals(payload1, payload2);
        
        assertNotEquals(payload1, new Object());
    }
}
