import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CancelInstallmentPlanRequestTest {

    @Test
    void testGetRequestPayload() {
        CancelInstallmentPlanRequest request = new CancelInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        
        assertEquals(payload, request.getRequestPayload());
    }

    @Test
    void testSetRequestPayload() {
        CancelInstallmentPlanRequest request = new CancelInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        
        assertNotNull(request.getRequestPayload());
        assertEquals(payload, request.getRequestPayload());
    }

    @Test
    void testEquals() {
        CancelInstallmentPlanRequest request1 = new CancelInstallmentPlanRequest();
        CancelInstallmentPlanRequest request2 = new CancelInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request1.setRequestPayload(payload);
        request2.setRequestPayload(payload);
        
        assertEquals(request1, request2);
    }

    @Test
    void testNotEquals() {
        CancelInstallmentPlanRequest request1 = new CancelInstallmentPlanRequest();
        CancelInstallmentPlanRequest request2 = new CancelInstallmentPlanRequest();
        
        RequestPayload payload1 = new RequestPayload();
        RequestPayload payload2 = new RequestPayload();
        
        request1.setRequestPayload(payload1);
        request2.setRequestPayload(payload2);
        
        assertNotEquals(request1, request2);
    }

    @Test
    void testHashCode() {
        CancelInstallmentPlanRequest request1 = new CancelInstallmentPlanRequest();
        CancelInstallmentPlanRequest request2 = new CancelInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request1.setRequestPayload(payload);
        request2.setRequestPayload(payload);
        
        assertEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testToString() {
        CancelInstallmentPlanRequest request = new CancelInstallmentPlanRequest();
        
        RequestPayload payload = new RequestPayload();
        request.setRequestPayload(payload);
        
        String expectedString = "CancelInstallmentPlanRequest(requestPayload=" + payload + ")";
        assertEquals(expectedString, request.toString());
    }
}
