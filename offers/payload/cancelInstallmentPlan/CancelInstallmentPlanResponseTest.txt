import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CancelInstallmentPlanResponseTest {

    @Test
    void testGetResponsePayload() {
        CancelInstallmentPlanResponse response = new CancelInstallmentPlanResponse();
        
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        
        assertEquals(payload, response.getResponsePayload());
    }

    @Test
    void testSetResponsePayload() {
        CancelInstallmentPlanResponse response = new CancelInstallmentPlanResponse();
        
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        
        assertNotNull(response.getResponsePayload());
        assertEquals(payload, response.getResponsePayload());
    }

    @Test
    void testEquals() {
        CancelInstallmentPlanResponse response1 = new CancelInstallmentPlanResponse();
        CancelInstallmentPlanResponse response2 = new CancelInstallmentPlanResponse();
        
        ResponsePayload payload = new ResponsePayload();
        response1.setResponsePayload(payload);
        response2.setResponsePayload(payload);
        
        assertEquals(response1, response2);
    }

    @Test
    void testNotEquals() {
        CancelInstallmentPlanResponse response1 = new CancelInstallmentPlanResponse();
        CancelInstallmentPlanResponse response2 = new CancelInstallmentPlanResponse();
        
        ResponsePayload payload1 = new ResponsePayload();
        ResponsePayload payload2 = new ResponsePayload();
        
        response1.setResponsePayload(payload1);
        response2.setResponsePayload(payload2);
        
        assertNotEquals(response1, response2);
    }

    @Test
    void testHashCode() {
        CancelInstallmentPlanResponse response1 = new CancelInstallmentPlanResponse();
        CancelInstallmentPlanResponse response2 = new CancelInstallmentPlanResponse();
        
        ResponsePayload payload = new ResponsePayload();
        response1.setResponsePayload(payload);
        response2.setResponsePayload(payload);
        
        assertEquals(response1.hashCode(), response2.hashCode());
    }

    @Test
    void testToString() {
        CancelInstallmentPlanResponse response = new CancelInstallmentPlanResponse();
        
        ResponsePayload payload = new ResponsePayload();
        response.setResponsePayload(payload);
        
        String expectedString = "CancelInstallmentPlanResponse[status=<null>,errorMsgs=<null>,responsePayload=" + payload + "]";
        assertEquals(expectedString, response.toString());
    }
}
