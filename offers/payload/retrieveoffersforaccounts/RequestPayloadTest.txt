import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;

class RequestPayloadTest {

    @Test
    void testSetGetAccountOfferInput() {
        RequestPayload requestPayload = new RequestPayload();
        List<AccountOfferInputType> accountOfferInputList = Arrays.asList(new AccountOfferInputType(), new AccountOfferInputType());
        
        requestPayload.setAccountOfferInput(accountOfferInputList);
        
        assertEquals(accountOfferInputList, requestPayload.getAccountOfferInput());

        requestPayload.setAccountOfferInput(null);
        assertNull(requestPayload.getAccountOfferInput());
    }

    @Test
    void testToString() {
        RequestPayload requestPayload = new RequestPayload();
        List<AccountOfferInputType> accountOfferInputList = Arrays.asList(new AccountOfferInputType(), new AccountOfferInputType());
        requestPayload.setAccountOfferInput(accountOfferInputList);
        
        String expectedString = "RequestPayload@" + Integer.toHexString(System.identityHashCode(requestPayload)) + "[accountOfferInput=" + accountOfferInputList + "]";
        assertEquals(expectedString, requestPayload.toString());

        requestPayload.setAccountOfferInput(null);
        expectedString = "RequestPayload@" + Integer.toHexString(System.identityHashCode(requestPayload)) + "[accountOfferInput=<null>]";
        assertEquals(expectedString, requestPayload.toString());
    }

    @Test
    void testHashCode() {
        RequestPayload requestPayload1 = new RequestPayload();
        RequestPayload requestPayload2 = new RequestPayload();
        List<AccountOfferInputType> accountOfferInputList = Arrays.asList(new AccountOfferInputType(), new AccountOfferInputType());

        requestPayload1.setAccountOfferInput(accountOfferInputList);
        requestPayload2.setAccountOfferInput(accountOfferInputList);
        
        assertEquals(requestPayload1.hashCode(), requestPayload2.hashCode());

        requestPayload2.setAccountOfferInput(null);
        assertNotEquals(requestPayload1.hashCode(), requestPayload2.hashCode());
    }

    @Test
    void testEquals() {
        RequestPayload requestPayload1 = new RequestPayload();
        RequestPayload requestPayload2 = new RequestPayload();
        List<AccountOfferInputType> accountOfferInputList = Arrays.asList(new AccountOfferInputType(), new AccountOfferInputType());

        requestPayload1.setAccountOfferInput(accountOfferInputList);
        requestPayload2.setAccountOfferInput(accountOfferInputList);
        
        assertEquals(requestPayload1, requestPayload2);

        requestPayload2.setAccountOfferInput(null);
        assertNotEquals(requestPayload1, requestPayload2);

        requestPayload1.setAccountOfferInput(null);
        requestPayload2.setAccountOfferInput(null);
        assertEquals(requestPayload1, requestPayload2);
        
        assertNotEquals(requestPayload1, new Object());
    }
}
