import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import com.td.mbna.msec.midtier.offers.payload.requestretailregistration.RequestRetailRegistrationResponse;
import com.td.mbna.msec.midtier.offers.payload.requestretailregistration.ResponsePayload;

class RequestRetailRegistrationResponseTest {

    @Test
    void testSetGetResponsePayload() {
        RequestRetailRegistrationResponse response = new RequestRetailRegistrationResponse();
        ResponsePayload responsePayload = new ResponsePayload();
        
        // Test setting and getting responsePayload
        response.setResponsePayload(responsePayload);
        assertEquals(responsePayload, response.getResponsePayload());
        
        response.setResponsePayload(null);
        assertNull(response.getResponsePayload());
    }

    @Test
    void testToString() {
        RequestRetailRegistrationResponse response = new RequestRetailRegistrationResponse();
        ResponsePayload responsePayload = new ResponsePayload();
        
        response.setResponsePayload(responsePayload);
        response.setStatus("success");
        response.setErrorMessages("no errors");
        
        String expectedString = "RequestRetailRegistrationResponse@" + Integer.toHexString(System.identityHashCode(response)) + "[status=success,errorMsgs=no errors,responsePayload=" + responsePayload + "]";
        assertEquals(expectedString, response.toString());
    }

    @Test
    void testHashCode() {
        RequestRetailRegistrationResponse response1 = new RequestRetailRegistrationResponse();
        RequestRetailRegistrationResponse response2 = new RequestRetailRegistrationResponse();
        
        ResponsePayload responsePayload = new ResponsePayload();
        response1.setResponsePayload(responsePayload);
        response2.setResponsePayload(responsePayload);
        
        response1.setStatus("success");
        response1.setErrorMessages("no errors");
        
        response2.setStatus("success");
        response2.setErrorMessages("no errors");
        
        assertEquals(response1.hashCode(), response2.hashCode());
        
        response2.setStatus("failure");
        assertNotEquals(response1.hashCode(), response2.hashCode());
    }

    @Test
    void testEquals() {
        RequestRetailRegistrationResponse response1 = new RequestRetailRegistrationResponse();
        RequestRetailRegistrationResponse response2 = new RequestRetailRegistrationResponse();
        
        ResponsePayload responsePayload = new ResponsePayload();
        response1.setResponsePayload(responsePayload);
        response2.setResponsePayload(responsePayload);
        
        response1.setStatus("success");
        response1.setErrorMessages("no errors");
        
        response2.setStatus("success");
        response2.setErrorMessages("no errors");
        
        assertEquals(response1, response2);
        
        response2.setStatus("failure");
        assertNotEquals(response1, response2);
        
        response2.setStatus("success");
        response2.setErrorMessages("some errors");
        assertNotEquals(response1, response2);
    }
}
