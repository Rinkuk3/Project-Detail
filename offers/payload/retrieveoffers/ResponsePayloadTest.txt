import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import java.util.ArrayList;
import com.td.mbna.msec.midtier.types.common.PromotionOfferType;

class ResponsePayloadTest {

    @Test
    void testSetGetPromotionOffer() {
        ResponsePayload responsePayload = new ResponsePayload();
        List<PromotionOfferType> promotionOfferList = new ArrayList<>();
        PromotionOfferType promotionOffer = new PromotionOfferType();
        promotionOfferList.add(promotionOffer);
        
        responsePayload.setPromotionOffer(promotionOfferList);
        assertEquals(promotionOfferList, responsePayload.getPromotionOffer());

        responsePayload.setPromotionOffer(null);
        assertNull(responsePayload.getPromotionOffer());
    }

    @Test
    void testToString() {
        ResponsePayload responsePayload = new ResponsePayload();
        List<PromotionOfferType> promotionOfferList = new ArrayList<>();
        PromotionOfferType promotionOffer = new PromotionOfferType();
        promotionOfferList.add(promotionOffer);
        
        responsePayload.setPromotionOffer(promotionOfferList);
        String expectedString = "ResponsePayload@" + Integer.toHexString(System.identityHashCode(responsePayload)) + "[promotionOffer=" + promotionOfferList + "]";
        assertEquals(expectedString, responsePayload.toString());

        responsePayload.setPromotionOffer(null);
        expectedString = "ResponsePayload@" + Integer.toHexString(System.identityHashCode(responsePayload)) + "[promotionOffer=<null>]";
        assertEquals(expectedString, responsePayload.toString());
    }

    @Test
    void testHashCode() {
        ResponsePayload responsePayload1 = new ResponsePayload();
        ResponsePayload responsePayload2 = new ResponsePayload();
        List<PromotionOfferType> promotionOfferList = new ArrayList<>();
        PromotionOfferType promotionOffer = new PromotionOfferType();
        promotionOfferList.add(promotionOffer);

        responsePayload1.setPromotionOffer(promotionOfferList);
        responsePayload2.setPromotionOffer(promotionOfferList);
        
        assertEquals(responsePayload1.hashCode(), responsePayload2.hashCode());

        responsePayload2.setPromotionOffer(null);
        assertNotEquals(responsePayload1.hashCode(), responsePayload2.hashCode());
    }

    @Test
    void testEquals() {
        ResponsePayload responsePayload1 = new ResponsePayload();
        ResponsePayload responsePayload2 = new ResponsePayload();
        List<PromotionOfferType> promotionOfferList = new ArrayList<>();
        PromotionOfferType promotionOffer = new PromotionOfferType();
        promotionOfferList.add(promotionOffer);

        responsePayload1.setPromotionOffer(promotionOfferList);
        responsePayload2.setPromotionOffer(promotionOfferList);
        
        assertEquals(responsePayload1, responsePayload2);

        responsePayload2.setPromotionOffer(null);
        assertNotEquals(responsePayload1, responsePayload2);

        responsePayload1.setPromotionOffer(null);
        responsePayload2.setPromotionOffer(null);
        assertEquals(responsePayload1, responsePayload2);
        
        assertNotEquals(responsePayload1, new Object());
    }
}
