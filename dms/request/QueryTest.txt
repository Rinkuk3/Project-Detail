package com.td.api.dms.request;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class QueryTest {

    private Query query;

    @BeforeEach
    void setUp() {
        query = new Query();
    }

    @Test
    void testGetSetAttribute() {
        Attributes attribute = Attributes.AccountNumber;
        query.setAttribute(attribute);
        assertEquals(attribute, query.getAttribute());
    }

    @Test
    void testGetSetOperator() {
        Operators operator = Operators.EQUALS;
        query.setOperator(operator);
        assertEquals(operator, query.getOperator());
    }

    @Test
    void testGetSetValue() {
        query.setValue(Arrays.asList("value1", "value2"));
        assertEquals(Arrays.asList("value1", "value2"), query.getValue());
    }

    @Test
    void testToString() {
        query.setAttribute(Attributes.AccountNumber);
        query.setOperator(Operators.EQUALS);
        query.setValue(Arrays.asList("value1", "value2"));

        String expected = "com.td.api.dms.request.Query@" + Integer.toHexString(System.identityHashCode(query)) + 
                          "[attribute=AccountNumber,operator=EQUALS,value=[value1, value2],]";
        assertEquals(expected, query.toString());
    }

    @Test
    void testHashCode() {
        Query query1 = new Query();
        Query query2 = new Query();

        query1.setAttribute(Attributes.AccountNumber);
        query1.setOperator(Operators.EQUALS);
        query1.setValue(Arrays.asList("value1", "value2"));

        query2.setAttribute(Attributes.AccountNumber);
        query2.setOperator(Operators.EQUALS);
        query2.setValue(Arrays.asList("value1", "value2"));

        assertEquals(query1.hashCode(), query2.hashCode());

        query2.setOperator(Operators.BETWEEN);
        assertNotEquals(query1.hashCode(), query2.hashCode());
    }

    @Test
    void testEquals() {
        Query query1 = new Query();
        Query query2 = new Query();

        query1.setAttribute(Attributes.AccountNumber);
        query1.setOperator(Operators.EQUALS);
        query1.setValue(Arrays.asList("value1", "value2"));

        query2.setAttribute(Attributes.AccountNumber);
        query2.setOperator(Operators.EQUALS);
        query2.setValue(Arrays.asList("value1", "value2"));

        assertTrue(query1.equals(query2));

        query2.setOperator(Operators.BETWEEN);
        assertFalse(query1.equals(query2));

        assertFalse(query1.equals(null));
        assertFalse(query1.equals(new Object()));
    }
}
