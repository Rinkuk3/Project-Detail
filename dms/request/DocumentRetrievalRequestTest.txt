package com.td.api.dms.request;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class DocumentRetrievalRequestTest {

    @Test
    void testGetSetDocumentId() {
        DocumentRetrievalRequest request = new DocumentRetrievalRequest();
        request.setDocumentId("12345");
        assertEquals("12345", request.getDocumentId());
    }

    @Test
    void testGetSetDocumentFolder() {
        DocumentRetrievalRequest request = new DocumentRetrievalRequest();
        request.setDocumentFolder("Folder1");
        assertEquals("Folder1", request.getDocumentFolder());
    }

    @Test
    void testToString() {
        DocumentRetrievalRequest request = new DocumentRetrievalRequest();
        request.setDocumentId("12345");
        request.setDocumentFolder("Folder1");
        String expectedString = "com.td.api.dms.request.DocumentRetrievalRequest@" + Integer.toHexString(request.hashCode()) + "[documentId=12345,documentFolder=Folder1,]";
        assertEquals(expectedString, request.toString());
    }

    @Test
    void testHashCode() {
        DocumentRetrievalRequest request1 = new DocumentRetrievalRequest();
        request1.setDocumentId("12345");
        request1.setDocumentFolder("Folder1");

        DocumentRetrievalRequest request2 = new DocumentRetrievalRequest();
        request2.setDocumentId("12345");
        request2.setDocumentFolder("Folder1");

        assertEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testEquals() {
        DocumentRetrievalRequest request1 = new DocumentRetrievalRequest();
        request1.setDocumentId("12345");
        request1.setDocumentFolder("Folder1");

        DocumentRetrievalRequest request2 = new DocumentRetrievalRequest();
        request2.setDocumentId("12345");
        request2.setDocumentFolder("Folder1");

        assertTrue(request1.equals(request2));

        DocumentRetrievalRequest request3 = new DocumentRetrievalRequest();
        request3.setDocumentId("67890");
        request3.setDocumentFolder("Folder2");

        assertFalse(request1.equals(request3));
    }
}
