import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class RewardsSamlRequestTest {

    private RewardsSamlRequest rewardsSamlRequest;

    @BeforeEach
    public void setUp() {
        rewardsSamlRequest = new RewardsSamlRequest();
    }

    @Test
    public void testGetSetParameters() {
        Parameters parameters = new Parameters();
        parameters.setAccountId("accountIdValue");
        parameters.setSubject("subjectValue");
        parameters.setLocale("en-US");

        rewardsSamlRequest.setParameters(parameters);
        assertEquals(parameters, rewardsSamlRequest.getParameters());
    }

    @Test
    public void testGetSetPingConnectionID() {
        String pingConnectionID = "TSYS-MBNA";
        rewardsSamlRequest.setPingConnectionID(pingConnectionID);
        assertEquals(pingConnectionID, rewardsSamlRequest.getPingConnectionID());
    }

    @Test
    public void testToString() {
        Parameters parameters = new Parameters();
        parameters.setAccountId("accountIdValue");
        parameters.setSubject("subjectValue");
        parameters.setLocale("en-US");

        rewardsSamlRequest.setParameters(parameters);
        rewardsSamlRequest.setPingConnectionID("TSYS-MBNA");

        String expectedString = "com.td.api.rewards.request.getrewardssaml.RewardsSamlRequest@" +
                Integer.toHexString(System.identityHashCode(rewardsSamlRequest)) +
                "[parameters=" + parameters.toString() +
                ",pingConnectionID=TSYS-MBNA]";

        assertTrue(rewardsSamlRequest.toString().contains("parameters"));
        assertTrue(rewardsSamlRequest.toString().contains("pingConnectionID=TSYS-MBNA"));
    }

    @Test
    public void testHashCode() {
        Parameters parameters = new Parameters();
        parameters.setAccountId("accountIdValue");
        parameters.setSubject("subjectValue");
        parameters.setLocale("en-US");

        rewardsSamlRequest.setParameters(parameters);
        rewardsSamlRequest.setPingConnectionID("TSYS-MBNA");

        RewardsSamlRequest otherRequest = new RewardsSamlRequest();
        otherRequest.setParameters(parameters);
        otherRequest.setPingConnectionID("TSYS-MBNA");

        assertEquals(rewardsSamlRequest.hashCode(), otherRequest.hashCode());

        otherRequest.setPingConnectionID("DifferentValue");
        assertNotEquals(rewardsSamlRequest.hashCode(), otherRequest.hashCode());
    }

    @Test
    public void testEquals() {
        Parameters parameters = new Parameters();
        parameters.setAccountId("accountIdValue");
        parameters.setSubject("subjectValue");
        parameters.setLocale("en-US");

        rewardsSamlRequest.setParameters(parameters);
        rewardsSamlRequest.setPingConnectionID("TSYS-MBNA");

        RewardsSamlRequest otherRequest = new RewardsSamlRequest();
        otherRequest.setParameters(parameters);
        otherRequest.setPingConnectionID("TSYS-MBNA");

        assertTrue(rewardsSamlRequest.equals(otherRequest));

        otherRequest.setPingConnectionID("DifferentValue");
        assertFalse(rewardsSamlRequest.equals(otherRequest));

        assertFalse(rewardsSamlRequest.equals(null));

        assertFalse(rewardsSamlRequest.equals(new Object()));
    }

    @Test
    public void testEqualsWithNullFields() {
        RewardsSamlRequest nullFieldsRequest = new RewardsSamlRequest();
        nullFieldsRequest.setParameters(null);
        nullFieldsRequest.setPingConnectionID(null);

        rewardsSamlRequest.setParameters(null);
        rewardsSamlRequest.setPingConnectionID(null);

        assertTrue(rewardsSamlRequest.equals(nullFieldsRequest));
    }
}
