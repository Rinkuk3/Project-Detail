import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AlertEventResponseTest {

    @Test
    void testGetterAndSetterForStatus() {
        AlertEventResponse response = new AlertEventResponse();
        Status status = new Status();
        response.setStatus(status);
        assertEquals(status, response.getStatus());
    }

    @Test
    void testGetterAndSetterForAlert() {
        AlertEventResponse response = new AlertEventResponse();
        Alert alert = new Alert();
        response.setAlert(alert);
        assertEquals(alert, response.getAlert());
    }

    @Test
    void testToString() {
        AlertEventResponse response = new AlertEventResponse();
        Status status = new Status();
        response.setStatus(status);

        Alert alert = new Alert();
        response.setAlert(alert);

        String expected = "AlertEventResponse(status=Status, alert=Alert(alertId=null))";
        assertEquals(expected, response.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        AlertEventResponse response1 = new AlertEventResponse();
        Status status1 = new Status();
        response1.setStatus(status1);
        Alert alert1 = new Alert();
        response1.setAlert(alert1);

        AlertEventResponse response2 = new AlertEventResponse();
        Status status2 = new Status();
        response2.setStatus(status2);
        Alert alert2 = new Alert();
        response2.setAlert(alert2);

        assertEquals(response1, response2);
        assertEquals(response1.hashCode(), response2.hashCode());
    }

    @Test
    void testEqualsWithNull() {
        AlertEventResponse response = new AlertEventResponse();
        assertNotEquals(response, null);
    }

    @Test
    void testEqualsWithDifferentType() {
        AlertEventResponse response = new AlertEventResponse();
        assertNotEquals(response, new Object());
    }

    @Test
    void testHashCodeWithDifferentValues() {
        AlertEventResponse response1 = new AlertEventResponse();
        Status status1 = new Status();
        response1.setStatus(status1);
        Alert alert1 = new Alert();
        response1.setAlert(alert1);

        AlertEventResponse response2 = new AlertEventResponse();
        Status status2 = new Status();
        response2.setStatus(status2);
        Alert alert2 = new Alert();
        response2.setAlert(alert2);

        assertNotEquals(response1.hashCode(), response2.hashCode());
    }
}
