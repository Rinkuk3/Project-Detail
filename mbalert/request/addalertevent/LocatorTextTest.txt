import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LocatorTextTest {

    @Test
    void testGetterAndSetterForLocatorTxt() {
        LocatorText locatorText = new LocatorText();
        locatorText.setLocatorTxt("SampleLocatorText");
        assertEquals("SampleLocatorText", locatorText.getLocatorTxt());
    }

    @Test
    void testGetterAndSetterForTypeCd() {
        LocatorText locatorText = new LocatorText();
        locatorText.setTypeCd("Type123");
        assertEquals("Type123", locatorText.getTypeCd());
    }

    @Test
    void testToString() {
        LocatorText locatorText = new LocatorText();
        locatorText.setLocatorTxt("SampleLocatorText");
        locatorText.setTypeCd("Type123");
        String expected = "LocatorText(locatorTxt=SampleLocatorText, typeCd=Type123)";
        assertEquals(expected, locatorText.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        LocatorText locatorText1 = new LocatorText();
        locatorText1.setLocatorTxt("SampleLocatorText");
        locatorText1.setTypeCd("Type123");
        
        LocatorText locatorText2 = new LocatorText();
        locatorText2.setLocatorTxt("SampleLocatorText");
        locatorText2.setTypeCd("Type123");
        
        assertEquals(locatorText1, locatorText2);
        assertEquals(locatorText1.hashCode(), locatorText2.hashCode());
    }

    @Test
    void testEqualsWithNull() {
        LocatorText locatorText = new LocatorText();
        assertNotEquals(locatorText, null);
    }

    @Test
    void testEqualsWithDifferentType() {
        LocatorText locatorText = new LocatorText();
        assertNotEquals(locatorText, new Object());
    }

    @Test
    void testHashCodeWithDifferentValues() {
        LocatorText locatorText1 = new LocatorText();
        locatorText1.setLocatorTxt("SampleLocatorText");
        locatorText1.setTypeCd("Type123");
        
        LocatorText locatorText2 = new LocatorText();
        locatorText2.setLocatorTxt("DifferentLocatorText");
        locatorText2.setTypeCd("Type456");
        
        assertNotEquals(locatorText1.hashCode(), locatorText2.hashCode());
    }
}
