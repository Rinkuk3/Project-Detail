import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;

class TelephoneNumberTest {

    @Test
    void testGetterAndSetterForLocatorUsageTypeCd() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setLocatorUsageTypeCd("Locator123");
        assertEquals("Locator123", telephoneNumber.getLocatorUsageTypeCd());
    }

    @Test
    void testGetterAndSetterForDeliveryStatusCd() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setDeliveryStatusCd("Delivered");
        assertEquals("Delivered", telephoneNumber.getDeliveryStatusCd());
    }

    @Test
    void testGetterAndSetterForLocatorText() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        LocatorText locatorText = new LocatorText();
        locatorText.setLocatorTxt("Sample Text");
        locatorText.setTypeCd("Type123");
        telephoneNumber.setLocatorText(Arrays.asList(locatorText));
        
        assertEquals(1, telephoneNumber.getLocatorText().size());
        assertEquals("Sample Text", telephoneNumber.getLocatorText().get(0).getLocatorTxt());
    }

    @Test
    void testGetterAndSetterForAltrExtension() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        AltrExtension altrExtension = new AltrExtension();
        altrExtension.setExtensionDetail("ExtensionDetail123");
        telephoneNumber.setAltrExtension(altrExtension);
        
        assertEquals("ExtensionDetail123", telephoneNumber.getAltrExtension().getExtensionDetail());
    }

    @Test
    void testGetterAndSetterForTelephoneNum() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setTelephoneNum("1234567890");
        assertEquals("1234567890", telephoneNumber.getTelephoneNum());
    }

    @Test
    void testGetterAndSetterForShortNum() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setShortNum("987");
        assertEquals("987", telephoneNumber.getShortNum());
    }

    @Test
    void testGetterAndSetterForCountryCodeNum() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setCountryCodeNum("+1");
        assertEquals("+1", telephoneNumber.getCountryCodeNum());
    }

    @Test
    void testGetterAndSetterForAreaCodeNum() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setAreaCodeNum("408");
        assertEquals("408", telephoneNumber.getAreaCodeNum());
    }

    @Test
    void testGetterAndSetterForFeatureLocator() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        FeatureLocator featureLocator = new FeatureLocator();
        featureLocator.setFeature("Feature123");
        telephoneNumber.setFeatureLocator(Arrays.asList(featureLocator));
        
        assertEquals(1, telephoneNumber.getFeatureLocator().size());
        assertEquals("Feature123", telephoneNumber.getFeatureLocator().get(0).getFeature());
    }

    @Test
    void testGetterAndSetterForMobileCountryCd() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setMobileCountryCd("US");
        assertEquals("US", telephoneNumber.getMobileCountryCd());
    }

    @Test
    void testGetterAndSetterForMobileNetworkCd() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setMobileNetworkCd("Verizon");
        assertEquals("Verizon", telephoneNumber.getMobileNetworkCd());
    }

    @Test
    void testGetterAndSetterForAlertLocatorSequenceNum() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setAlertLocatorSequenceNum("Seq123");
        assertEquals("Seq123", telephoneNumber.getAlertLocatorSequenceNum());
    }

    @Test
    void testToString() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setLocatorUsageTypeCd("Locator123");
        telephoneNumber.setDeliveryStatusCd("Delivered");

        LocatorText locatorText = new LocatorText();
        locatorText.setLocatorTxt("Sample Text");
        locatorText.setTypeCd("Type123");
        telephoneNumber.setLocatorText(Arrays.asList(locatorText));

        AltrExtension altrExtension = new AltrExtension();
        altrExtension.setExtensionDetail("ExtensionDetail123");
        telephoneNumber.setAltrExtension(altrExtension);

        telephoneNumber.setTelephoneNum("1234567890");
        telephoneNumber.setShortNum("987");
        telephoneNumber.setCountryCodeNum("+1");
        telephoneNumber.setAreaCodeNum("408");

        FeatureLocator featureLocator = new FeatureLocator();
        featureLocator.setFeature("Feature123");
        telephoneNumber.setFeatureLocator(Arrays.asList(featureLocator));

        telephoneNumber.setMobileCountryCd("US");
        telephoneNumber.setMobileNetworkCd("Verizon");
        telephoneNumber.setAlertLocatorSequenceNum("Seq123");

        String expected = "TelephoneNumber(locatorUsageTypeCd=Locator123, deliveryStatusCd=Delivered, " +
                          "locatorText=[LocatorText(locatorTxt=Sample Text, typeCd=Type123)], " +
                          "altrExtension=AltrExtension(extensionDetail=ExtensionDetail123), telephoneNum=1234567890, " +
                          "shortNum=987, countryCodeNum=+1, areaCodeNum=408, " +
                          "featureLocator=[FeatureLocator(feature=Feature123)], mobileCountryCd=US, mobileNetworkCd=Verizon, " +
                          "alertLocatorSequenceNum=Seq123)";
        assertEquals(expected, telephoneNumber.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        TelephoneNumber telephoneNumber1 = new TelephoneNumber();
        telephoneNumber1.setLocatorUsageTypeCd("Locator123");
        telephoneNumber1.setDeliveryStatusCd("Delivered");

        LocatorText locatorText1 = new LocatorText();
        locatorText1.setLocatorTxt("Sample Text");
        locatorText1.setTypeCd("Type123");
        telephoneNumber1.setLocatorText(Arrays.asList(locatorText1));

        AltrExtension altrExtension1 = new AltrExtension();
        altrExtension1.setExtensionDetail("ExtensionDetail123");
        telephoneNumber1.setAltrExtension(altrExtension1);

        telephoneNumber1.setTelephoneNum("1234567890");
        telephoneNumber1.setShortNum("987");
        telephoneNumber1.setCountryCodeNum("+1");
        telephoneNumber1.setAreaCodeNum("408");

        FeatureLocator featureLocator1 = new FeatureLocator();
        featureLocator1.setFeature("Feature123");
        telephoneNumber1.setFeatureLocator(Arrays.asList(featureLocator1));

        telephoneNumber1.setMobileCountryCd("US");
        telephoneNumber1.setMobileNetworkCd("Verizon");
        telephoneNumber1.setAlertLocatorSequenceNum("Seq123");

        TelephoneNumber telephoneNumber2 = new TelephoneNumber();
        telephoneNumber2.setLocatorUsageTypeCd("Locator123");
        telephoneNumber2.setDeliveryStatusCd("Delivered");

        LocatorText locatorText2 = new LocatorText();
        locatorText2.setLocatorTxt("Sample Text");
        locatorText2.setTypeCd("Type123");
        telephoneNumber2.setLocatorText(Arrays.asList(locatorText2));

        AltrExtension altrExtension2 = new AltrExtension();
        altrExtension2.setExtensionDetail("ExtensionDetail123");
        telephoneNumber2.setAltrExtension(altrExtension2);

        telephoneNumber2.setTelephoneNum("1234567890");
        telephoneNumber2.setShortNum("987");
        telephoneNumber2.setCountryCodeNum("+1");
        telephoneNumber2.setAreaCodeNum("408");

        FeatureLocator featureLocator2 = new FeatureLocator();
        featureLocator2.setFeature("Feature123");
        telephoneNumber2.setFeatureLocator(Arrays.asList(featureLocator2));

        telephoneNumber2.setMobileCountryCd("US");
        telephoneNumber2.setMobileNetworkCd("Verizon");
        telephoneNumber2.setAlertLocatorSequenceNum("Seq123");

        assertEquals(telephoneNumber1, telephoneNumber2);
        assertEquals(telephoneNumber1.hashCode(), telephoneNumber2.hashCode());
    }

    @Test
    void testEqualsWithNull() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        assertNotEquals(telephoneNumber, null);
    }

    @Test
    void testEqualsWithDifferentType() {
        TelephoneNumber telephoneNumber = new TelephoneNumber();
        assertNotEquals(telephoneNumber, new Object());
    }

    @Test
    void testHashCodeWithDifferentValues() {
        TelephoneNumber telephoneNumber1 = new TelephoneNumber();
        telephoneNumber1.setLocatorUsageTypeCd("Locator123");
        telephoneNumber1.setDeliveryStatusCd("Delivered");

        LocatorText locatorText1 = new LocatorText();
        locatorText1.setLocatorTxt("Sample Text");
        locatorText1.setTypeCd("Type123");
        telephoneNumber1.setLocatorText(Arrays.asList(locatorText1));

        AltrExtension altrExtension1 = new AltrExtension();
        altrExtension1.setExtensionDetail("ExtensionDetail123");
        telephoneNumber1.setAltrExtension(altrExtension1);

        telephoneNumber1.setTelephoneNum("1234567890");
        telephoneNumber1.setShortNum("987");
        telephoneNumber1.setCountryCodeNum("+1");
        telephoneNumber1.setAreaCodeNum("408");

        FeatureLocator featureLocator1 = new FeatureLocator();
        featureLocator1.setFeature("Feature123");
        telephoneNumber1.setFeatureLocator(Arrays.asList(featureLocator1));

        telephoneNumber1.setMobileCountryCd("US");
        telephoneNumber1.setMobileNetworkCd("Verizon");
        telephoneNumber1.setAlertLocatorSequenceNum("Seq123");

        TelephoneNumber telephoneNumber2 = new TelephoneNumber();
        telephoneNumber2.setLocatorUsageTypeCd("Locator456");
        telephoneNumber2.setDeliveryStatusCd("Pending");

        LocatorText locatorText2 = new LocatorText();
        locatorText2.setLocatorTxt("Different Text");
        locatorText2.setTypeCd("Type456");
        telephoneNumber2.setLocatorText(Arrays.asList(locatorText2));

        AltrExtension altrExtension2 = new AltrExtension();
        altrExtension2.setExtensionDetail("DifferentExtension");
        telephoneNumber2.setAltrExtension(altrExtension2);

        telephoneNumber2.setTelephoneNum("9876543210");
        telephoneNumber2.setShortNum("654");
        telephoneNumber2.setCountryCodeNum("+44");
        telephoneNumber2.setAreaCodeNum("123");

        FeatureLocator featureLocator2 = new FeatureLocator();
        featureLocator2.setFeature("Feature456");
        telephoneNumber2.setFeatureLocator(Arrays.asList(featureLocator2));

        telephoneNumber2.setMobileCountryCd("UK");
        telephoneNumber2.setMobileNetworkCd("TMobile");
        telephoneNumber2.setAlertLocatorSequenceNum("Seq456");

        assertNotEquals(telephoneNumber1.hashCode(), telephoneNumber2.hashCode());
    }
}
