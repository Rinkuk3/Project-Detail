package com.td.api.mbalert.request.addalertevent;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AltrExtension_TemplateItemTest {

    @Test
    void testAltrExtension_TemplateItem() {
        // Create an instance of AltrExtension_TemplateItem
        AltrExtension_TemplateItem altrExtensionTemplateItem = new AltrExtension_TemplateItem();

        // Test default value (template list should be empty by default)
        assertNotNull(altrExtensionTemplateItem.getTemplate());
        assertTrue(altrExtensionTemplateItem.getTemplate().isEmpty());

        // Create a TemplateItem instance
        TemplateItem templateItem = new TemplateItem();
        templateItem.setKeyName("metaDataContentVal");
        templateItem.setKeyVal("sampleValue");

        // Add the TemplateItem to the template list
        altrExtensionTemplateItem.getTemplate().add(templateItem);

        // Test that the template list contains the added TemplateItem
        assertFalse(altrExtensionTemplateItem.getTemplate().isEmpty());
        assertEquals(1, altrExtensionTemplateItem.getTemplate().size());
        assertEquals("metaDataContentVal", altrExtensionTemplateItem.getTemplate().get(0).getKeyName());
        assertEquals("sampleValue", altrExtensionTemplateItem.getTemplate().get(0).getKeyVal());
    }

    @Test
    void testEqualsAndHashCode() {
        // Create two instances of AltrExtension_TemplateItem
        AltrExtension_TemplateItem altrExtensionTemplateItem1 = new AltrExtension_TemplateItem();
        AltrExtension_TemplateItem altrExtensionTemplateItem2 = new AltrExtension_TemplateItem();

        TemplateItem templateItem1 = new TemplateItem();
        templateItem1.setKeyName("metaDataContentVal");
        templateItem1.setKeyVal("value1");

        TemplateItem templateItem2 = new TemplateItem();
        templateItem2.setKeyName("metaDataContentVal");
        templateItem2.setKeyVal("value1");

        altrExtensionTemplateItem1.getTemplate().add(templateItem1);
        altrExtensionTemplateItem2.getTemplate().add(templateItem2);

        // Test equality method
        assertTrue(altrExtensionTemplateItem1.equals(altrExtensionTemplateItem2));
        altrExtensionTemplateItem2.getTemplate().add(new TemplateItem());  // Modify second list
        assertFalse(altrExtensionTemplateItem1.equals(altrExtensionTemplateItem2));

        // Test hashCode method
        assertEquals(altrExtensionTemplateItem1.hashCode(), altrExtensionTemplateItem2.hashCode());
    }

    @Test
    void testToString() {
        // Create an instance of AltrExtension_TemplateItem
        AltrExtension_TemplateItem altrExtensionTemplateItem = new AltrExtension_TemplateItem();

        TemplateItem templateItem = new TemplateItem();
        templateItem.setKeyName("metaDataContentVal");
        templateItem.setKeyVal("sampleValue");

        altrExtensionTemplateItem.getTemplate().add(templateItem);

        // Test toString method
        String toStringResult = altrExtensionTemplateItem.toString();

        assertTrue(toStringResult.contains("template"));
        assertTrue(toStringResult.contains("metaDataContentVal"));
        assertTrue(toStringResult.contains("sampleValue"));
    }
}
