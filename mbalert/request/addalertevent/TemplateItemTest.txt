import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class TemplateItemTest {

    @Test
    void testGetterAndSetterForKeyName() {
        TemplateItem templateItem = new TemplateItem();
        templateItem.setKeyName("KeyName1");
        assertEquals("KeyName1", templateItem.getKeyName());
    }

    @Test
    void testGetterAndSetterForKeyVal() {
        TemplateItem templateItem = new TemplateItem();
        templateItem.setKeyVal("KeyVal1");
        assertEquals("KeyVal1", templateItem.getKeyVal());
    }

    @Test
    void testToString() {
        TemplateItem templateItem = new TemplateItem();
        templateItem.setKeyName("KeyName1");
        templateItem.setKeyVal("KeyVal1");

        String expected = "TemplateItem(keyName=KeyName1, keyVal=KeyVal1)";
        assertEquals(expected, templateItem.toString());
    }

    @Test
    void testEqualsAndHashCode() {
        TemplateItem templateItem1 = new TemplateItem();
        templateItem1.setKeyName("KeyName1");
        templateItem1.setKeyVal("KeyVal1");

        TemplateItem templateItem2 = new TemplateItem();
        templateItem2.setKeyName("KeyName1");
        templateItem2.setKeyVal("KeyVal1");

        assertEquals(templateItem1, templateItem2);
        assertEquals(templateItem1.hashCode(), templateItem2.hashCode());
    }

    @Test
    void testEqualsWithNull() {
        TemplateItem templateItem = new TemplateItem();
        assertNotEquals(templateItem, null);
    }

    @Test
    void testEqualsWithDifferentType() {
        TemplateItem templateItem = new TemplateItem();
        assertNotEquals(templateItem, new Object());
    }

    @Test
    void testHashCodeWithDifferentValues() {
        TemplateItem templateItem1 = new TemplateItem();
        templateItem1.setKeyName("KeyName1");
        templateItem1.setKeyVal("KeyVal1");

        TemplateItem templateItem2 = new TemplateItem();
        templateItem2.setKeyName("KeyName2");
        templateItem2.setKeyVal("KeyVal2");

        assertNotEquals(templateItem1.hashCode(), templateItem2.hashCode());
    }
}
