import com.td.mbna.msec.account.domain.mobile.MobileImage;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class MobileImageTest {

    @Test
    void testGettersAndSetters() {
        // Arrange
        MobileImage mobileImage = new MobileImage();
        String expectedUrl = "https://example.com/image.jpg";
        String expectedAlt = "Example Image";

        // Act
        mobileImage.setUrl(expectedUrl);
        mobileImage.setAlt(expectedAlt);

        // Assert
        assertEquals(expectedUrl, mobileImage.getUrl());
        assertEquals(expectedAlt, mobileImage.getAlt());
    }

    @Test
    void testEqualsAndHashCode_EqualObjects() {
        // Arrange
        MobileImage mobileImage1 = new MobileImage();
        mobileImage1.setUrl("https://example.com/image.jpg");
        mobileImage1.setAlt("Example Image");

        MobileImage mobileImage2 = new MobileImage();
        mobileImage2.setUrl("https://example.com/image.jpg");
        mobileImage2.setAlt("Example Image");

        // Act & Assert
        assertEquals(mobileImage1, mobileImage2);
        assertEquals(mobileImage1.hashCode(), mobileImage2.hashCode());
    }

    @Test
    void testEqualsAndHashCode_DifferentObjects() {
        // Arrange
        MobileImage mobileImage1 = new MobileImage();
        mobileImage1.setUrl("https://example.com/image1.jpg");
        mobileImage1.setAlt("Image 1");

        MobileImage mobileImage2 = new MobileImage();
        mobileImage2.setUrl("https://example.com/image2.jpg");
        mobileImage2.setAlt("Image 2");

        // Act & Assert
        assertNotEquals(mobileImage1, mobileImage2);
        assertNotEquals(mobileImage1.hashCode(), mobileImage2.hashCode());
    }

    @Test
    void testEquals_NullAndDifferentClass() {
        // Arrange
        MobileImage mobileImage = new MobileImage();
        mobileImage.setUrl("https://example.com/image.jpg");
        mobileImage.setAlt("Example Image");

        // Act & Assert
        assertNotEquals(mobileImage, null);
        assertNotEquals(mobileImage, new Object());
    }

    @Test
    void testEquals_NullFields() {
        // Arrange
        MobileImage mobileImage1 = new MobileImage();
        MobileImage mobileImage2 = new MobileImage();

        // Act & Assert
        assertEquals(mobileImage1, mobileImage2);
        assertEquals(mobileImage1.hashCode(), mobileImage2.hashCode());
    }

    @Test
    void testEquals_DifferentUrlOrAlt() {
        // Arrange
        MobileImage mobileImage1 = new MobileImage();
        mobileImage1.setUrl("https://example.com/image1.jpg");
        mobileImage1.setAlt("Alt 1");

        MobileImage mobileImage2 = new MobileImage();
        mobileImage2.setUrl("https://example.com/image2.jpg");
        mobileImage2.setAlt("Alt 1");

        MobileImage mobileImage3 = new MobileImage();
        mobileImage3.setUrl("https://example.com/image1.jpg");
        mobileImage3.setAlt("Alt 2");

        // Act & Assert
        assertNotEquals(mobileImage1, mobileImage2);
        assertNotEquals(mobileImage1, mobileImage3);
    }

    @Test
    void testHashCode_WithNullFields() {
        // Arrange
        MobileImage mobileImage = new MobileImage();
        
        // Act & Assert
        assertNotNull(mobileImage.hashCode());
    }
}
