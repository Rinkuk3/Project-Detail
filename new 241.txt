import org.junit.jupiter.api.Test;
import static org.assertj.core.api.Assertions.assertThat;

public class VefyCardDetailsResponseTest {

    @Test
    public void testGettersAndSetters() {
        // Arrange
        VefyCardDetailsResponse response = new VefyCardDetailsResponse();

        // Act
        response.setSuccess(true);
        response.setErrorCode("ERR001");

        // Assert
        assertThat(response.getSuccess()).isTrue();
        assertThat(response.getErrorCode()).isEqualTo("ERR001");
    }

    @Test
    public void testDefaultValues() {
        // Act
        VefyCardDetailsResponse response = new VefyCardDetailsResponse();

        // Assert
        assertThat(response.getSuccess()).isNull();
        assertThat(response.getErrorCode()).isNull();
    }

    @Test
    public void testToString() {
        // Arrange
        VefyCardDetailsResponse response = new VefyCardDetailsResponse();
        response.setSuccess(true);
        response.setErrorCode("ERR001");

        // Act
        String toStringResult = response.toString();

        // Assert
        assertThat(toStringResult).contains("success=true", "errorCode=ERR001");
    }

    @Test
    public void testEqualsAndHashCode() {
        // Arrange
        VefyCardDetailsResponse response1 = new VefyCardDetailsResponse();
        response1.setSuccess(true);
        response1.setErrorCode("ERR001");

        VefyCardDetailsResponse response2 = new VefyCardDetailsResponse();
        response2.setSuccess(true);
        response2.setErrorCode("ERR001");

        VefyCardDetailsResponse response3 = new VefyCardDetailsResponse();
        response3.setSuccess(false);
        response3.setErrorCode("ERR002");

        // Act & Assert
        assertThat(response1).isEqualTo(response2);
        assertThat(response1).isNotEqualTo(response3);
        assertThat(response1.hashCode()).isEqualTo(response2.hashCode());
        assertThat(response1.hashCode()).isNotEqualTo(response3.hashCode());
    }
}
