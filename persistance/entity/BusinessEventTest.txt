package com.td.mbna.msec.midtier.persistance.entity;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class BusinessEventTest {

    @Test
    public void testGetTransactionType() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionType("Type1");
        assertEquals("Type1", businessEvent.getTransactionType());
    }

    @Test
    public void testSetTransactionType() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionType("Type1");
        assertEquals("Type1", businessEvent.getTransactionType());
    }

    @Test
    public void testGetTransactionSubType() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionSubType("SubType1");
        assertEquals("SubType1", businessEvent.getTransactionSubType());
    }

    @Test
    public void testSetTransactionSubType() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionSubType("SubType1");
        assertEquals("SubType1", businessEvent.getTransactionSubType());
    }

    @Test
    public void testGetBusinessEventDesc_WithNullDescription() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setBusinessEventDesc("Business Event *");
        assertEquals("Business Event *", businessEvent.getBusinessEventDesc(null));
    }

    @Test
    public void testGetBusinessEventDesc_WithNonNullDescription() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setBusinessEventDesc("Business Event *");
        assertEquals("Business Event Description", businessEvent.getBusinessEventDesc("Description"));
    }

    @Test
    public void testSetBusinessEventDesc() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setBusinessEventDesc("Business Event *");
        assertEquals("Business Event *", businessEvent.getBusinessEventDesc(null));
    }

    @Test
    public void testGetEventCode() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setEventCode("E123");
        assertEquals("E123", businessEvent.getEventCode());
    }

    @Test
    public void testSetEventCode() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setEventCode("E123");
        assertEquals("E123", businessEvent.getEventCode());
    }

    @Test
    public void testToString() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionType("Type1");
        businessEvent.setTransactionSubType("SubType1");
        businessEvent.setBusinessEventDesc("Business Event *");
        businessEvent.setEventCode("E123");

        String result = businessEvent.toString();
        assertNotNull(result);
        assertTrue(result.contains("transactionType"));
        assertTrue(result.contains("transactionSubType"));
        assertTrue(result.contains("businessEventDesc"));
        assertTrue(result.contains("eventCode"));
    }

    @Test
    public void testEquals_SameObject() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionType("Type1");
        businessEvent.setTransactionSubType("SubType1");
        businessEvent.setBusinessEventDesc("Business Event *");
        businessEvent.setEventCode("E123");

        assertTrue(businessEvent.equals(businessEvent));
    }

    @Test
    public void testEquals_Null() {
        BusinessEvent businessEvent = new BusinessEvent();
        assertFalse(businessEvent.equals(null));
    }

    @Test
    public void testEquals_DifferentClass() {
        BusinessEvent businessEvent = new BusinessEvent();
        assertFalse(businessEvent.equals(new Object()));
    }

    @Test
    public void testEquals_SameValues() {
        BusinessEvent businessEvent1 = new BusinessEvent();
        businessEvent1.setTransactionType("Type1");
        businessEvent1.setTransactionSubType("SubType1");
        businessEvent1.setBusinessEventDesc("Business Event *");
        businessEvent1.setEventCode("E123");

        BusinessEvent businessEvent2 = new BusinessEvent();
        businessEvent2.setTransactionType("Type1");
        businessEvent2.setTransactionSubType("SubType1");
        businessEvent2.setBusinessEventDesc("Business Event *");
        businessEvent2.setEventCode("E123");

        assertTrue(businessEvent1.equals(businessEvent2));
    }

    @Test
    public void testEquals_DifferentValues() {
        BusinessEvent businessEvent1 = new BusinessEvent();
        businessEvent1.setTransactionType("Type1");
        businessEvent1.setTransactionSubType("SubType1");
        businessEvent1.setBusinessEventDesc("Business Event *");
        businessEvent1.setEventCode("E123");

        BusinessEvent businessEvent2 = new BusinessEvent();
        businessEvent2.setTransactionType("Type2");
        businessEvent2.setTransactionSubType("SubType2");
        businessEvent2.setBusinessEventDesc("Business Event Description");
        businessEvent2.setEventCode("E124");

        assertFalse(businessEvent1.equals(businessEvent2));
    }

    @Test
    public void testHashCode() {
        BusinessEvent businessEvent = new BusinessEvent();
        businessEvent.setTransactionType("Type1");
        businessEvent.setTransactionSubType("SubType1");
        businessEvent.setBusinessEventDesc("Business Event *");
        businessEvent.setEventCode("E123");

        int hashCode = businessEvent.hashCode();
        assertNotEquals(0, hashCode);
    }
}
