package com.td.mbna.msec.midtier.persistance.entity;

import org.junit.jupiter.api.Test;
import java.math.BigDecimal;
import java.util.Date;

import static org.junit.jupiter.api.Assertions.*;

public class BusinessEventAuditTest {

    @Test
    public void testGetAuditID() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setAuditID(1);
        assertEquals(1, businessEventAudit.getAuditID());
    }

    @Test
    public void testSetAuditID() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setAuditID(1);
        assertEquals(1, businessEventAudit.getAuditID());
    }

    @Test
    public void testGetConnectId() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setConnectId("Connect123");
        assertEquals("Connect123", businessEventAudit.getConnectId());
    }

    @Test
    public void testSetConnectId() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setConnectId("Connect123");
        assertEquals("Connect123", businessEventAudit.getConnectId());
    }

    @Test
    public void testGetMdmCifId() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setMdmCifId("CifId123");
        assertEquals("CifId123", businessEventAudit.getMdmCifId());
    }

    @Test
    public void testSetMdmCifId() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setMdmCifId("CifId123");
        assertEquals("CifId123", businessEventAudit.getMdmCifId());
    }

    @Test
    public void testGetStartDateTime() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        Date date = new Date();
        businessEventAudit.setStartDateTime(date);
        assertEquals(date, businessEventAudit.getStartDateTime());
    }

    @Test
    public void testSetStartDateTime() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        Date date = new Date();
        businessEventAudit.setStartDateTime(date);
        assertEquals(date, businessEventAudit.getStartDateTime());
    }

    @Test
    public void testGetDeliveryChannelCode() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setDeliveryChannelCode("Web");
        assertEquals("Web", businessEventAudit.getDeliveryChannelCode());
    }

    @Test
    public void testSetDeliveryChannelCode() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setDeliveryChannelCode("Web");
        assertEquals("Web", businessEventAudit.getDeliveryChannelCode());
    }

    @Test
    public void testGetTransactionType() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setTransactionType("Payment");
        assertEquals("Payment", businessEventAudit.getTransactionType());
    }

    @Test
    public void testSetTransactionType() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setTransactionType("Payment");
        assertEquals("Payment", businessEventAudit.getTransactionType());
    }

    @Test
    public void testGetTransactionSubType() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setTransactionSubType("Credit");
        assertEquals("Credit", businessEventAudit.getTransactionSubType());
    }

    @Test
    public void testSetTransactionSubType() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setTransactionSubType("Credit");
        assertEquals("Credit", businessEventAudit.getTransactionSubType());
    }

    @Test
    public void testGetBusinessEvent() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setBusinessEvent("Purchase");
        assertEquals("Purchase", businessEventAudit.getBusinessEvent());
    }

    @Test
    public void testSetBusinessEvent() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setBusinessEvent("Purchase");
        assertEquals("Purchase", businessEventAudit.getBusinessEvent());
    }

    @Test
    public void testGetEventCode() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setEventCode("E123");
        assertEquals("E123", businessEventAudit.getEventCode());
    }

    @Test
    public void testSetEventCode() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setEventCode("E123");
        assertEquals("E123", businessEventAudit.getEventCode());
    }

    @Test
    public void testGetApplicationLogonID() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setApplicationLogonID("Logon123");
        assertEquals("Logon123", businessEventAudit.getApplicationLogonID());
    }

    @Test
    public void testSetApplicationLogonID() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setApplicationLogonID("Logon123");
        assertEquals("Logon123", businessEventAudit.getApplicationLogonID());
    }

    @Test
    public void testGetProcessingTime() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setProcessingTime(500L);
        assertEquals(500L, businessEventAudit.getProcessingTime());
    }

    @Test
    public void testSetProcessingTime() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setProcessingTime(500L);
        assertEquals(500L, businessEventAudit.getProcessingTime());
    }

    @Test
    public void testGetApplicationResponseCode() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setApplicationResponseCode("200");
        assertEquals("200", businessEventAudit.getApplicationResponseCode());
    }

    @Test
    public void testSetApplicationResponseCode() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setApplicationResponseCode("200");
        assertEquals("200", businessEventAudit.getApplicationResponseCode());
    }

    @Test
    public void testGetRedactedCardNumber() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setRedactedCardNumber("****1234");
        assertEquals("****1234", businessEventAudit.getRedactedCardNumber());
    }

    @Test
    public void testSetRedactedCardNumber() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setRedactedCardNumber("****1234");
        assertEquals("****1234", businessEventAudit.getRedactedCardNumber());
    }

    @Test
    public void testGetBalanceTransferAmount() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setBalanceTransferAmount(BigDecimal.valueOf(100.50));
        assertEquals(BigDecimal.valueOf(100.50), businessEventAudit.getBalanceTransferAmount());
    }

    @Test
    public void testSetBalanceTransferAmount() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setBalanceTransferAmount(BigDecimal.valueOf(100.50));
        assertEquals(BigDecimal.valueOf(100.50), businessEventAudit.getBalanceTransferAmount());
    }

    @Test
    public void testTruncate() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        assertEquals("12345", businessEventAudit.truncate("123456789", 5));
    }

    @Test
    public void testReplacePipe() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        assertEquals("Hello-World", businessEventAudit.replacePipe("Hello|World"));
    }

    @Test
    public void testToString() {
        BusinessEventAudit businessEventAudit = new BusinessEventAudit();
        businessEventAudit.setAuditID(1);
        businessEventAudit.setConnectId("Connect123");
        businessEventAudit.setMdmCifId("CifId123");
        businessEventAudit.setStartDateTime(new Date());
        businessEventAudit.setDeliveryChannelCode("Web");
        businessEventAudit.setTransactionType("Payment");
        businessEventAudit.setTransactionSubType("Credit");
        businessEventAudit.setBusinessEvent("Purchase");
        businessEventAudit.setEventCode("E123");
        businessEventAudit.setApplicationLogonID("Logon123");
        businessEventAudit.setProcessingTime(500L);
        businessEventAudit.setApplicationResponseCode("200");

        String result = businessEventAudit.toString();
        assertNotNull(result);
        assertTrue(result.contains("auditID"));
        assertTrue(result.contains("connectId"));
        assertTrue(result.contains("mdmCifId"));
        assertTrue(result.contains("startDateTime"));
        assertTrue(result.contains("deliveryChannelCode"));
    }
}
