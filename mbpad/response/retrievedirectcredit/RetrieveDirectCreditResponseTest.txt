import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;

class RetrieveDirectCreditResponseTest {

    @Test
    void testPagination() {
        RetrieveDirectCreditResponse response = new RetrieveDirectCreditResponse();
        
        Pagination pagination = new Pagination(1, 10);
        response.setPagination(pagination);
        
        assertEquals(pagination, response.getPagination());
    }

    @Test
    void testDirectCredit() {
        RetrieveDirectCreditResponse response = new RetrieveDirectCreditResponse();
        
        DirectCredit directCredit = new DirectCredit();
        response.setDirectCredit(directCredit);
        
        assertEquals(directCredit, response.getDirectCredit());
    }

    @Test
    void testTransaction() {
        RetrieveDirectCreditResponse response = new RetrieveDirectCreditResponse();
        
        Transaction transaction1 = new Transaction("T123", "Payment", 100.0);
        Transaction transaction2 = new Transaction("T124", "Refund", 50.0);
        response.setTransaction(Arrays.asList(transaction1, transaction2));
        
        assertEquals(2, response.getTransaction().size());
        assertEquals(transaction1, response.getTransaction().get(0));
        assertEquals(transaction2, response.getTransaction().get(1));
    }

    @Test
    void testSetterAndGetter() {
        RetrieveDirectCreditResponse response = new RetrieveDirectCreditResponse();
        
        Pagination pagination = new Pagination(2, 20);
        DirectCredit directCredit = new DirectCredit();
        Transaction transaction1 = new Transaction("T125", "Deposit", 200.0);
        Transaction transaction2 = new Transaction("T126", "Withdrawal", 150.0);
        
        response.setPagination(pagination);
        response.setDirectCredit(directCredit);
        response.setTransaction(Arrays.asList(transaction1, transaction2));
        
        assertNotNull(response.getPagination());
        assertNotNull(response.getDirectCredit());
        assertNotNull(response.getTransaction());
        
        assertEquals(pagination, response.getPagination());
        assertEquals(directCredit, response.getDirectCredit());
        assertEquals(2, response.getTransaction().size());
        assertEquals(transaction1, response.getTransaction().get(0));
        assertEquals(transaction2, response.getTransaction().get(1));
    }

    @Test
    void testEqualsAndHashCode() {
        RetrieveDirectCreditResponse response1 = new RetrieveDirectCreditResponse();
        RetrieveDirectCreditResponse response2 = new RetrieveDirectCreditResponse();
        
        Pagination pagination = new Pagination(1, 10);
        DirectCredit directCredit = new DirectCredit();
        Transaction transaction1 = new Transaction("T127", "Payment", 100.0);
        Transaction transaction2 = new Transaction("T128", "Refund", 50.0);
        
        response1.setPagination(pagination);
        response1.setDirectCredit(directCredit);
        response1.setTransaction(Arrays.asList(transaction1, transaction2));
        
        response2.setPagination(pagination);
        response2.setDirectCredit(directCredit);
        response2.setTransaction(Arrays.asList(transaction1, transaction2));
        
        assertEquals(response1, response2);
        assertEquals(response1.hashCode(), response2.hashCode());
    }

    @Test
    void testToString() {
        RetrieveDirectCreditResponse response = new RetrieveDirectCreditResponse();
        
        Pagination pagination = new Pagination(1, 10);
        DirectCredit directCredit = new DirectCredit();
        Transaction transaction1 = new Transaction("T129", "Deposit", 200.0);
        Transaction transaction2 = new Transaction("T130", "Withdrawal", 150.0);
        
        response.setPagination(pagination);
        response.setDirectCredit(directCredit);
        response.setTransaction(Arrays.asList(transaction1, transaction2));
        
        String expectedString = "RetrieveDirectCreditResponse(pagination=" + pagination + 
                                ", directCredit=" + directCredit + 
                                ", transaction=" + Arrays.asList(transaction1, transaction2) + ")";
        assertEquals(expectedString, response.toString());
    }
}
