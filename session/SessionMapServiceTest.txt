package com.td.mbna.msec.midtier.session;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.*;

import javax.servlet.http.HttpServletRequest;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class SessionMapServiceTest {

    @Mock
    private HttpServletRequest mockHttpServletRequest;

    @InjectMocks
    private SessionMapService sessionMapService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetSession() {
        // Create a mock session map
        SessionDataMap<String, Object> sessionDataMap = mock(SessionDataMap.class);
        
        // Mock the creation of the session map
        when(mockHttpServletRequest.getSession(false)).thenReturn(null);

        // Call the getSession method
        Map<String, Object> session = sessionMapService.getSession();
        
        // Verify the returned session is not null
        assertNotNull(session);
        
        // Verify that the correct constructor is being called to create the session data map
        assertTrue(session instanceof SessionDataMap);
    }

    @Test
    void testGetHttpServletRequest() {
        // Test the getter method for HttpServletRequest
        HttpServletRequest request = sessionMapService.getHttpServletRequest();
        
        // Verify that the returned HttpServletRequest is the mock one
        assertEquals(mockHttpServletRequest, request);
    }
}
