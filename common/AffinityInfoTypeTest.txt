package com.td.mbna.msec.midtier.types.common;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AffinityInfoTypeTest {

    @Test
    void testGetSetFailed() {
        AffinityInfoType affinityInfo = new AffinityInfoType();
        affinityInfo.setFailed(true);
        assertTrue(affinityInfo.getFailed());

        affinityInfo.setFailed(false);
        assertFalse(affinityInfo.getFailed());
    }

    @Test
    void testGetSetAffinityCode() {
        AffinityInfoType affinityInfo = new AffinityInfoType();
        String code = "AFF123";
        affinityInfo.setAffinityCode(code);
        assertEquals(code, affinityInfo.getAffinityCode());
    }

    @Test
    void testGetSetProductCodes() {
        AffinityInfoType affinityInfo = new AffinityInfoType();
        String productCodes = "PROD001,PROD002";
        affinityInfo.setProductCodes(productCodes);
        assertEquals(productCodes, affinityInfo.getProductCodes());
    }

    @Test
    void testGetSetEnglishInfo() {
        AffinityInfoType affinityInfo = new AffinityInfoType();
        AffinityInfoTypeLanguageSpecific englishInfo = new AffinityInfoTypeLanguageSpecific();
        affinityInfo.setEnglishInfo(englishInfo);
        assertEquals(englishInfo, affinityInfo.getEnglishInfo());
    }

    @Test
    void testGetSetFrenchInfo() {
        AffinityInfoType affinityInfo = new AffinityInfoType();
        AffinityInfoTypeLanguageSpecific frenchInfo = new AffinityInfoTypeLanguageSpecific();
        affinityInfo.setFrenchInfo(frenchInfo);
        assertEquals(frenchInfo, affinityInfo.getFrenchInfo());
    }

    @Test
    void testToString() {
        AffinityInfoType affinityInfo = new AffinityInfoType();
        affinityInfo.setFailed(true);
        affinityInfo.setAffinityCode("AFF123");
        affinityInfo.setProductCodes("PROD001,PROD002");
        String toString = affinityInfo.toString();
        assertTrue(toString.contains("failed=true"));
        assertTrue(toString.contains("affinityCode=AFF123"));
        assertTrue(toString.contains("productCodes=PROD001,PROD002"));
    }

    @Test
    void testEqualsAndHashCode() {
        AffinityInfoType affinityInfo1 = new AffinityInfoType();
        AffinityInfoType affinityInfo2 = new AffinityInfoType();

        affinityInfo1.setFailed(true);
        affinityInfo1.setAffinityCode("AFF123");
        affinityInfo1.setProductCodes("PROD001,PROD002");

        affinityInfo2.setFailed(true);
        affinityInfo2.setAffinityCode("AFF123");
        affinityInfo2.setProductCodes("PROD001,PROD002");

        assertEquals(affinityInfo1, affinityInfo2);
        assertEquals(affinityInfo1.hashCode(), affinityInfo2.hashCode());

        affinityInfo2.setAffinityCode("DIFFERENT_CODE");
        assertNotEquals(affinityInfo1, affinityInfo2);
        assertNotEquals(affinityInfo1.hashCode(), affinityInfo2.hashCode());
    }
}
