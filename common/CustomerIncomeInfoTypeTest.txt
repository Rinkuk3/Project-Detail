package com.td.mbna.msec.midtier.types.common;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.math.BigDecimal;

class CustomerIncomeInfoTypeTest {

    @Test
    void testGetOccupation() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setOccupation("Engineer");
        assertEquals("Engineer", incomeInfo.getOccupation());
    }

    @Test
    void testSetOccupation() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setOccupation("Engineer");
        assertEquals("Engineer", incomeInfo.getOccupation());
    }

    @Test
    void testGetIncome() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setIncome(new BigDecimal("5000.00"));
        assertEquals(new BigDecimal("5000.00"), incomeInfo.getIncome());
    }

    @Test
    void testSetIncome() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setIncome(new BigDecimal("5000.00"));
        assertEquals(new BigDecimal("5000.00"), incomeInfo.getIncome());
    }

    @Test
    void testGetIncomeFrequency() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setIncomeFrequency("Monthly");
        assertEquals("Monthly", incomeInfo.getIncomeFrequency());
    }

    @Test
    void testSetIncomeFrequency() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setIncomeFrequency("Monthly");
        assertEquals("Monthly", incomeInfo.getIncomeFrequency());
    }

    @Test
    void testGetHousingStatus() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setHousingStatus("Owned");
        assertEquals("Owned", incomeInfo.getHousingStatus());
    }

    @Test
    void testSetHousingStatus() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setHousingStatus("Owned");
        assertEquals("Owned", incomeInfo.getHousingStatus());
    }

    @Test
    void testGetHousingPayment() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setHousingPayment(new BigDecimal("1200.00"));
        assertEquals(new BigDecimal("1200.00"), incomeInfo.getHousingPayment());
    }

    @Test
    void testSetHousingPayment() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setHousingPayment(new BigDecimal("1200.00"));
        assertEquals(new BigDecimal("1200.00"), incomeInfo.getHousingPayment());
    }

    @Test
    void testGetAdditionalIncome() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setAdditionalIncome(new BigDecimal("1500.00"));
        assertEquals(new BigDecimal("1500.00"), incomeInfo.getAdditionalIncome());
    }

    @Test
    void testSetAdditionalIncome() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setAdditionalIncome(new BigDecimal("1500.00"));
        assertEquals(new BigDecimal("1500.00"), incomeInfo.getAdditionalIncome());
    }

    @Test
    void testGetAdditionalIncomeFrequency() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setAdditionalIncomeFrequency("Weekly");
        assertEquals("Weekly", incomeInfo.getAdditionalIncomeFrequency());
    }

    @Test
    void testSetAdditionalIncomeFrequency() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setAdditionalIncomeFrequency("Weekly");
        assertEquals("Weekly", incomeInfo.getAdditionalIncomeFrequency());
    }

    @Test
    void testGetAdditionalIncomeSource() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setAdditionalIncomeSource("Freelance");
        assertEquals("Freelance", incomeInfo.getAdditionalIncomeSource());
    }

    @Test
    void testSetAdditionalIncomeSource() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setAdditionalIncomeSource("Freelance");
        assertEquals("Freelance", incomeInfo.getAdditionalIncomeSource());
    }

    @Test
    void testToString() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        incomeInfo.setOccupation("Engineer");
        incomeInfo.setIncome(new BigDecimal("5000.00"));
        incomeInfo.setIncomeFrequency("Monthly");
        incomeInfo.setHousingStatus("Owned");
        incomeInfo.setHousingPayment(new BigDecimal("1200.00"));
        incomeInfo.setAdditionalIncome(new BigDecimal("1500.00"));
        incomeInfo.setAdditionalIncomeFrequency("Weekly");
        incomeInfo.setAdditionalIncomeSource("Freelance");

        String expected = "com.td.mbna.msec.midtier.types.common.CustomerIncomeInfoType@" +
                Integer.toHexString(System.identityHashCode(incomeInfo)) + 
                "[occupation=Engineer,income=5000.00,incomeFrequency=Monthly,housingStatus=Owned,housingPayment=1200.00,additionalIncome=1500.00,additionalIncomeFrequency=Weekly,additionalIncomeSource=Freelance]";
        
        assertTrue(incomeInfo.toString().contains("occupation=Engineer"));
        assertTrue(incomeInfo.toString().contains("income=5000.00"));
        assertTrue(incomeInfo.toString().contains("housingPayment=1200.00"));
        assertTrue(incomeInfo.toString().contains("additionalIncomeSource=Freelance"));
    }

    @Test
    void testHashCode() {
        CustomerIncomeInfoType incomeInfo1 = new CustomerIncomeInfoType();
        CustomerIncomeInfoType incomeInfo2 = new CustomerIncomeInfoType();
        
        incomeInfo1.setOccupation("Engineer");
        incomeInfo1.setIncome(new BigDecimal("5000.00"));
        incomeInfo1.setIncomeFrequency("Monthly");
        incomeInfo1.setHousingStatus("Owned");
        incomeInfo1.setHousingPayment(new BigDecimal("1200.00"));
        incomeInfo1.setAdditionalIncome(new BigDecimal("1500.00"));
        incomeInfo1.setAdditionalIncomeFrequency("Weekly");
        incomeInfo1.setAdditionalIncomeSource("Freelance");
        
        incomeInfo2.setOccupation("Engineer");
        incomeInfo2.setIncome(new BigDecimal("5000.00"));
        incomeInfo2.setIncomeFrequency("Monthly");
        incomeInfo2.setHousingStatus("Owned");
        incomeInfo2.setHousingPayment(new BigDecimal("1200.00"));
        incomeInfo2.setAdditionalIncome(new BigDecimal("1500.00"));
        incomeInfo2.setAdditionalIncomeFrequency("Weekly");
        incomeInfo2.setAdditionalIncomeSource("Freelance");
        
        assertEquals(incomeInfo1.hashCode(), incomeInfo2.hashCode());
    }

    @Test
    void testEquals() {
        CustomerIncomeInfoType incomeInfo1 = new CustomerIncomeInfoType();
        CustomerIncomeInfoType incomeInfo2 = new CustomerIncomeInfoType();
        
        incomeInfo1.setOccupation("Engineer");
        incomeInfo1.setIncome(new BigDecimal("5000.00"));
        incomeInfo1.setIncomeFrequency("Monthly");
        incomeInfo1.setHousingStatus("Owned");
        incomeInfo1.setHousingPayment(new BigDecimal("1200.00"));
        incomeInfo1.setAdditionalIncome(new BigDecimal("1500.00"));
        incomeInfo1.setAdditionalIncomeFrequency("Weekly");
        incomeInfo1.setAdditionalIncomeSource("Freelance");
        
        incomeInfo2.setOccupation("Engineer");
        incomeInfo2.setIncome(new BigDecimal("5000.00"));
        incomeInfo2.setIncomeFrequency("Monthly");
        incomeInfo2.setHousingStatus("Owned");
        incomeInfo2.setHousingPayment(new BigDecimal("1200.00"));
        incomeInfo2.setAdditionalIncome(new BigDecimal("1500.00"));
        incomeInfo2.setAdditionalIncomeFrequency("Weekly");
        incomeInfo2.setAdditionalIncomeSource("Freelance");
        
        assertTrue(incomeInfo1.equals(incomeInfo2));
        
        incomeInfo2.setIncome(new BigDecimal("6000.00"));
        assertFalse(incomeInfo1.equals(incomeInfo2));
    }

    @Test
    void testEqualsNull() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        assertFalse(incomeInfo.equals(null));
    }

    @Test
    void testEqualsDifferentClass() {
        CustomerIncomeInfoType incomeInfo = new CustomerIncomeInfoType();
        assertFalse(incomeInfo.equals(new Object()));
    }
}
