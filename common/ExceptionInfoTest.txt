package com.td.mbna.msec.midtier.types.common;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ExceptionInfoTest {

    @Test
    void testGettersAndSetters() {
        ExceptionInfo exceptionInfo = new ExceptionInfo();
        
        exceptionInfo.setErrorCode("E123");
        exceptionInfo.setSeverity("High");
        exceptionInfo.setErrorDescription("Test error");
        exceptionInfo.setSoapFaultDescription("Test fault description");
        
        assertEquals("E123", exceptionInfo.getErrorCode());
        assertEquals("High", exceptionInfo.getSeverity());
        assertEquals("Test error", exceptionInfo.getErrorDescription());
        assertEquals("Test fault description", exceptionInfo.getSoapFaultDescription());
    }

    @Test
    void testToString() {
        ExceptionInfo exceptionInfo = new ExceptionInfo();
        exceptionInfo.setErrorCode("E123");
        exceptionInfo.setSeverity("High");
        exceptionInfo.setErrorDescription("Test error");
        exceptionInfo.setSoapFaultDescription("Test fault description");

        String expected = "com.td.mbna.msec.midtier.types.common.ExceptionInfo@" +
                          Integer.toHexString(System.identityHashCode(exceptionInfo)) +
                          "[errorCode=E123,severity=High,errorDescription=Test error,soapFaultDescription=Test fault description]";
        
        assertTrue(exceptionInfo.toString().contains("errorCode=E123"));
        assertTrue(exceptionInfo.toString().contains("severity=High"));
        assertTrue(exceptionInfo.toString().contains("errorDescription=Test error"));
        assertTrue(exceptionInfo.toString().contains("soapFaultDescription=Test fault description"));
    }

    @Test
    void testHashCode() {
        ExceptionInfo exceptionInfo1 = new ExceptionInfo();
        exceptionInfo1.setErrorCode("E123");
        exceptionInfo1.setSeverity("High");
        exceptionInfo1.setErrorDescription("Test error");
        exceptionInfo1.setSoapFaultDescription("Test fault description");

        ExceptionInfo exceptionInfo2 = new ExceptionInfo();
        exceptionInfo2.setErrorCode("E123");
        exceptionInfo2.setSeverity("High");
        exceptionInfo2.setErrorDescription("Test error");
        exceptionInfo2.setSoapFaultDescription("Test fault description");

        assertEquals(exceptionInfo1.hashCode(), exceptionInfo2.hashCode());
    }

    @Test
    void testEquals() {
        ExceptionInfo exceptionInfo1 = new ExceptionInfo();
        exceptionInfo1.setErrorCode("E123");
        exceptionInfo1.setSeverity("High");
        exceptionInfo1.setErrorDescription("Test error");
        exceptionInfo1.setSoapFaultDescription("Test fault description");

        ExceptionInfo exceptionInfo2 = new ExceptionInfo();
        exceptionInfo2.setErrorCode("E123");
        exceptionInfo2.setSeverity("High");
        exceptionInfo2.setErrorDescription("Test error");
        exceptionInfo2.setSoapFaultDescription("Test fault description");

        assertTrue(exceptionInfo1.equals(exceptionInfo2));
    }

    @Test
    void testEqualsDifferentObjects() {
        ExceptionInfo exceptionInfo1 = new ExceptionInfo();
        exceptionInfo1.setErrorCode("E123");

        ExceptionInfo exceptionInfo2 = new ExceptionInfo();
        exceptionInfo2.setErrorCode("E124");

        assertFalse(exceptionInfo1.equals(exceptionInfo2));
    }
}
