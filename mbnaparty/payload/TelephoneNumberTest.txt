package com.td.api.mbna.msec.midtier.mbnaparty.payload;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class TelephoneNumberTest {

    private TelephoneNumber telephoneNumber;

    @BeforeEach
    public void setUp() {
        telephoneNumber = new TelephoneNumber();
    }

    @Test
    public void testGetSetTelephoneNum() {
        String telephoneNum = "1234567890";
        telephoneNumber.setTelephoneNum(telephoneNum);
        assertEquals(telephoneNum, telephoneNumber.getTelephoneNum());
    }

    @Test
    public void testGetSetCountryCodeNum() {
        String countryCodeNum = "+1";
        telephoneNumber.setCountryCodeNum(countryCodeNum);
        assertEquals(countryCodeNum, telephoneNumber.getCountryCodeNum());
    }

    @Test
    public void testGetSetExtensionNum() {
        String extensionNum = "1234";
        telephoneNumber.setExtensionNum(extensionNum);
        assertEquals(extensionNum, telephoneNumber.getExtensionNum());
    }

    @Test
    public void testToString() {
        telephoneNumber.setTelephoneNum("1234567890");
        telephoneNumber.setCountryCodeNum("+1");
        telephoneNumber.setExtensionNum("1234");

        String str = telephoneNumber.toString();
        assertTrue(str.contains("telephoneNum"));
        assertTrue(str.contains("countryCodeNum"));
        assertTrue(str.contains("extensionNum"));
    }

    @Test
    public void testEqualsAndHashCode() {
        TelephoneNumber number1 = new TelephoneNumber();
        TelephoneNumber number2 = new TelephoneNumber();

        number1.setTelephoneNum("1234567890");
        number1.setCountryCodeNum("+1");
        number1.setExtensionNum("1234");

        number2.setTelephoneNum("1234567890");
        number2.setCountryCodeNum("+1");
        number2.setExtensionNum("1234");

        assertEquals(number1, number2);
        assertEquals(number1.hashCode(), number2.hashCode());

        number2.setExtensionNum("5678");
        assertNotEquals(number1, number2);
    }
}
