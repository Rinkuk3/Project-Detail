package com.td.api.mbna.msec.midtier.mbnaparty.payload;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class LocatorTest {

    private Locator locator;
    private EmailAddress emailAddress;
    private StreetAddress streetAddress;
    private TelephoneNumber telephoneNumber;

    @BeforeEach
    public void setUp() {
        locator = new Locator();
        emailAddress = new EmailAddress();
        streetAddress = new StreetAddress();
        telephoneNumber = new TelephoneNumber();
    }

    @Test
    public void testGetSetEmailAddress() {
        emailAddress.setText("test@example.com");
        locator.setEmailAddress(emailAddress);
        
        assertEquals(emailAddress, locator.getEmailAddress());
        assertEquals("test@example.com", locator.getEmailAddress().getText());
    }

    @Test
    public void testGetSetStreetAddress() {
        streetAddress.setStreet("123 Main St");
        locator.setStreetAddress(streetAddress);
        
        assertEquals(streetAddress, locator.getStreetAddress());
        assertEquals("123 Main St", locator.getStreetAddress().getStreet());
    }

    @Test
    public void testGetSetTelephoneNumber() {
        telephoneNumber.setNumber("123-456-7890");
        locator.setTelephoneNumber(telephoneNumber);
        
        assertEquals(telephoneNumber, locator.getTelephoneNumber());
        assertEquals("123-456-7890", locator.getTelephoneNumber().getNumber());
    }

    @Test
    public void testToString() {
        emailAddress.setText("test@example.com");
        streetAddress.setStreet("123 Main St");
        telephoneNumber.setNumber("123-456-7890");

        locator.setEmailAddress(emailAddress);
        locator.setStreetAddress(streetAddress);
        locator.setTelephoneNumber(telephoneNumber);

        String str = locator.toString();
        assertTrue(str.contains("emailAddress"));
        assertTrue(str.contains("streetAddress"));
        assertTrue(str.contains("telephoneNumber"));
    }

    @Test
    public void testEqualsAndHashCode() {
        Locator locator1 = new Locator();
        Locator locator2 = new Locator();

        emailAddress.setText("test@example.com");
        streetAddress.setStreet("123 Main St");
        telephoneNumber.setNumber("123-456-7890");

        locator1.setEmailAddress(emailAddress);
        locator1.setStreetAddress(streetAddress);
        locator1.setTelephoneNumber(telephoneNumber);

        locator2.setEmailAddress(emailAddress);
        locator2.setStreetAddress(streetAddress);
        locator2.setTelephoneNumber(telephoneNumber);

        assertEquals(locator1, locator2);
        assertEquals(locator1.hashCode(), locator2.hashCode());

        locator2.setTelephoneNumber(new TelephoneNumber());
        assertNotEquals(locator1, locator2);
    }
}
