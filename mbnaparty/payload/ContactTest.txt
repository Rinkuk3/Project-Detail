package com.td.api.mbna.msec.midtier.mbnaparty.payload;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.Date;

public class ContactTest {

    private Contact contact;

    @BeforeEach
    public void setUp() {
        contact = new Contact();
    }

    @Test
    public void testGetSetKey() {
        String key = "TestKey";
        contact.setKey(key);

        assertEquals(key, contact.getKey());
    }

    @Test
    public void testGetSetUsageCd() {
        String usageCd = "TestUsageCd";
        contact.setUsageCd(usageCd);

        assertEquals(usageCd, contact.getUsageCd());
    }

    @Test
    public void testGetSetStartDt() {
        String startDt = "2024-12-23";
        contact.setStartDt(startDt);

        assertEquals(startDt, contact.getStartDt());
    }

    @Test
    public void testGetSetUsageDesc() {
        String usageDesc = "Test Usage Description";
        contact.setUsageDesc(usageDesc);

        assertEquals(usageDesc, contact.getUsageDesc());
    }

    @Test
    public void testGetSetLastModifiedDttm() {
        Date lastModifiedDttm = new Date();
        contact.setLastModifiedDttm(lastModifiedDttm);

        assertEquals(lastModifiedDttm, contact.getLastModifiedDttm());
    }

    @Test
    public void testGetSetLocator() {
        Locator locator = new Locator();
        contact.setLocator(locator);

        assertEquals(locator, contact.getLocator());
    }

    @Test
    public void testEqualsAndHashCode() {
        Contact contact1 = new Contact();
        Contact contact2 = new Contact();

        contact1.setKey("Key1");
        contact2.setKey("Key1");

        assertEquals(contact1, contact2);
        assertEquals(contact1.hashCode(), contact2.hashCode());

        contact2.setKey("Key2");
        assertNotEquals(contact1, contact2);
    }

    @Test
    public void testToString() {
        contact.setKey("TestKey");
        contact.setUsageCd("TestUsageCd");
        contact.setStartDt("2024-12-23");
        contact.setUsageDesc("Test Usage Description");
        contact.setLastModifiedDttm(new Date());
        contact.setLocator(new Locator());

        String expectedString = "Contact(key=TestKey, usageCd=TestUsageCd, startDt=2024-12-23, usageDesc=Test Usage Description, lastModifiedDttm=" + contact.getLastModifiedDttm() + ", locator=" + contact.getLocator() + ")";
        assertTrue(contact.toString().startsWith("Contact(key=TestKey"));
    }
}
