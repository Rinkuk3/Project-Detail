package com.td.api.mbna.msec.midtier.mbnaparty.payload;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class PaginationTest {

    private Pagination pagination;

    @BeforeEach
    public void setUp() {
        pagination = new Pagination();
    }

    @Test
    public void testGetSetPage() {
        Object page = 1;
        pagination.setPage(page);
        assertEquals(page, pagination.getPage());
    }

    @Test
    public void testGetSetPageSize() {
        Object pageSize = 20;
        pagination.setPageSize(pageSize);
        assertEquals(pageSize, pagination.getPageSize());
    }

    @Test
    public void testGetSetTotalPageCnt() {
        Object totalPageCnt = 5;
        pagination.setTotalPageCnt(totalPageCnt);
        assertEquals(totalPageCnt, pagination.getTotalPageCnt());
    }

    @Test
    public void testGetSetMatchedCnt() {
        Integer matchedCnt = 100;
        pagination.setMatchedCnt(matchedCnt);
        assertEquals(matchedCnt, pagination.getMatchedCnt());
    }

    @Test
    public void testGetSetSentCnt() {
        Object sentCnt = 50;
        pagination.setSentCnt(sentCnt);
        assertEquals(sentCnt, pagination.getSentCnt());
    }

    @Test
    public void testToString() {
        pagination.setPage(1);
        pagination.setPageSize(20);
        pagination.setTotalPageCnt(5);
        pagination.setMatchedCnt(100);
        pagination.setSentCnt(50);

        String str = pagination.toString();
        assertTrue(str.contains("page"));
        assertTrue(str.contains("pageSize"));
        assertTrue(str.contains("totalPageCnt"));
        assertTrue(str.contains("matchedCnt"));
        assertTrue(str.contains("sentCnt"));
    }

    @Test
    public void testEqualsAndHashCode() {
        Pagination pagination1 = new Pagination();
        Pagination pagination2 = new Pagination();

        pagination1.setPage(1);
        pagination1.setPageSize(20);
        pagination1.setTotalPageCnt(5);
        pagination1.setMatchedCnt(100);
        pagination1.setSentCnt(50);

        pagination2.setPage(1);
        pagination2.setPageSize(20);
        pagination2.setTotalPageCnt(5);
        pagination2.setMatchedCnt(100);
        pagination2.setSentCnt(50);

        assertEquals(pagination1, pagination2);
        assertEquals(pagination1.hashCode(), pagination2.hashCode());

        pagination2.setMatchedCnt(200);
        assertNotEquals(pagination1, pagination2);
    }
}
