package com.td.api.mbna.msec.midtier.mbnaparty.payload;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class StreetAddressTest {

    private StreetAddress streetAddress;

    @BeforeEach
    public void setUp() {
        streetAddress = new StreetAddress();
    }

    @Test
    public void testGetSetAddressLine1() {
        String addressLine1 = "123 Main St";
        streetAddress.setAddressLine1(addressLine1);
        assertEquals(addressLine1, streetAddress.getAddressLine1());
    }

    @Test
    public void testGetSetCity() {
        String city = "Toronto";
        streetAddress.setCity(city);
        assertEquals(city, streetAddress.getCity());
    }

    @Test
    public void testGetSetTerritory() {
        String territory = "ON";
        streetAddress.setTerritory(territory);
        assertEquals(territory, streetAddress.getTerritory());
    }

    @Test
    public void testGetSetPostalCode() {
        String postalCode = "M5A 1A1";
        streetAddress.setPostalCode(postalCode);
        assertEquals(postalCode, streetAddress.getPostalCode());
    }

    @Test
    public void testGetSetCountryCd() {
        String countryCd = "CA";
        streetAddress.setCountryCd(countryCd);
        assertEquals(countryCd, streetAddress.getCountryCd());
    }

    @Test
    public void testToString() {
        streetAddress.setAddressLine1("123 Main St");
        streetAddress.setCity("Toronto");
        streetAddress.setTerritory("ON");
        streetAddress.setPostalCode("M5A 1A1");
        streetAddress.setCountryCd("CA");

        String str = streetAddress.toString();
        assertTrue(str.contains("addressLine1"));
        assertTrue(str.contains("city"));
        assertTrue(str.contains("territory"));
        assertTrue(str.contains("postalCode"));
        assertTrue(str.contains("countryCd"));
    }

    @Test
    public void testEqualsAndHashCode() {
        StreetAddress address1 = new StreetAddress();
        StreetAddress address2 = new StreetAddress();

        address1.setAddressLine1("123 Main St");
        address1.setCity("Toronto");
        address1.setTerritory("ON");
        address1.setPostalCode("M5A 1A1");
        address1.setCountryCd("CA");

        address2.setAddressLine1("123 Main St");
        address2.setCity("Toronto");
        address2.setTerritory("ON");
        address2.setPostalCode("M5A 1A1");
        address2.setCountryCd("CA");

        assertEquals(address1, address2);
        assertEquals(address1.hashCode(), address2.hashCode());

        address2.setCity("Vancouver");
        assertNotEquals(address1, address2);
    }
}
