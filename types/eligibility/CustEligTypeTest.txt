package com.td.mbna.msec.midtier.types.eligibility;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class CustEligTypeTest {

    private CustEligType custEligType;
    private List<EligType> eligTypeList;
    private List<AcctEligType> acctEligList;
    private EligType eligType1;
    private EligType eligType2;
    private AcctEligType acctEligType1;
    private AcctEligType acctEligType2;

    @BeforeEach
    void setUp() {
        custEligType = new CustEligType();

        // Prepare mock EligType data
        eligType1 = new EligType();
        eligType1.setSomeField("value1");

        eligType2 = new EligType();
        eligType2.setSomeField("value2");

        eligTypeList = new ArrayList<>();
        eligTypeList.add(eligType1);
        eligTypeList.add(eligType2);

        // Prepare mock AcctEligType data
        acctEligType1 = new AcctEligType();
        acctEligType1.setAcctId("12345");

        acctEligType2 = new AcctEligType();
        acctEligType2.setAcctId("67890");

        acctEligList = new ArrayList<>();
        acctEligList.add(acctEligType1);
        acctEligList.add(acctEligType2);
    }

    @Test
    void testSetAndGetCustId() {
        custEligType.setCustId("cust123");
        assertEquals("cust123", custEligType.getCustId());
    }

    @Test
    void testSetAndGetCustElig() {
        custEligType.setCustElig(eligTypeList);
        assertNotNull(custEligType.getCustElig());
        assertEquals(2, custEligType.getCustElig().size());
    }

    @Test
    void testSetAndGetAcctsElig() {
        custEligType.setAcctsElig(acctEligList);
        assertNotNull(custEligType.getAcctsElig());
        assertEquals(2, custEligType.getAcctsElig().size());
    }

    @Test
    void testToString() {
        custEligType.setCustId("cust123");
        custEligType.setCustElig(eligTypeList);
        custEligType.setAcctsElig(acctEligList);

        String expectedString = "com.td.mbna.msec.midtier.types.eligibility.CustEligType@" +
                Integer.toHexString(System.identityHashCode(custEligType)) +
                "[custId=cust123,custElig=" + eligTypeList +
                ",acctsElig=" + acctEligList + "]";

        assertEquals(expectedString, custEligType.toString());
    }

    @Test
    void testHashCode() {
        custEligType.setCustId("cust123");
        custEligType.setCustElig(eligTypeList);
        custEligType.setAcctsElig(acctEligList);

        int expectedHashCode = 31 * (31 * (31 + "cust123".hashCode()) + eligTypeList.hashCode()) + acctEligList.hashCode();
        assertEquals(expectedHashCode, custEligType.hashCode());
    }

    @Test
    void testEquals_withSameFields() {
        CustEligType other = new CustEligType();
        other.setCustId("cust123");
        other.setCustElig(eligTypeList);
        other.setAcctsElig(acctEligList);

        assertTrue(custEligType.equals(other));
    }

    @Test
    void testEquals_withDifferentFields() {
        CustEligType other = new CustEligType();
        other.setCustId("different");
        other.setCustElig(new ArrayList<>());
        other.setAcctsElig(new ArrayList<>());

        assertFalse(custEligType.equals(other));
    }

    @Test
    void testEquals_withNull() {
        assertFalse(custEligType.equals(null));
    }

    @Test
    void testHashCode_withEmptyFields() {
        custEligType.setCustId(null);
        custEligType.setCustElig(null);
        custEligType.setAcctsElig(null);

        assertEquals(1, custEligType.hashCode());
    }

    @Test
    void testEquals_withNullFields() {
        CustEligType other = new CustEligType();
        other.setCustId(null);
        other.setCustElig(null);
        other.setAcctsElig(null);

        assertTrue(custEligType.equals(other));
    }

    @Test
    void testToString_withEmptyFields() {
        String expectedString = "com.td.mbna.msec.midtier.types.eligibility.CustEligType@" +
                Integer.toHexString(System.identityHashCode(custEligType)) +
                "[custId=<null>,custElig=<null>,acctsElig=<null>]";

        assertEquals(expectedString, custEligType.toString());
    }
}
