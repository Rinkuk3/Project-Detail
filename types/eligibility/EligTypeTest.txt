package com.td.mbna.msec.midtier.types.eligibility;

import com.td.mbna.msec.midtier.types.common.EligIdType;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class EligTypeTest {

    private EligType eligType;
    private EligIdType eligIdType1;
    private EligIdType eligIdType2;

    @BeforeEach
    void setUp() {
        eligType = new EligType();

        // Mock EligIdType
        eligIdType1 = new EligIdType();
        eligIdType1.setId("elig1");

        eligIdType2 = new EligIdType();
        eligIdType2.setId("elig2");
    }

    @Test
    void testSetAndGetEligId() {
        eligType.setEligId(eligIdType1);
        assertEquals(eligIdType1, eligType.getEligId());
    }

    @Test
    void testSetAndGetEligValue() {
        eligType.setEligValue(true);
        assertTrue(eligType.isEligValue());
    }

    @Test
    void testToString() {
        eligType.setEligId(eligIdType1);
        eligType.setEligValue(true);

        String expectedString = "com.td.mbna.msec.midtier.types.eligibility.EligType@" +
                Integer.toHexString(System.identityHashCode(eligType)) +
                "[eligId=" + eligIdType1 +
                ",eligValue=true]";
        assertEquals(expectedString, eligType.toString());
    }

    @Test
    void testHashCode() {
        eligType.setEligId(eligIdType1);
        eligType.setEligValue(true);

        int expectedHashCode = 31 * (31 + eligIdType1.hashCode()) + true.hashCode();
        assertEquals(expectedHashCode, eligType.hashCode());
    }

    @Test
    void testEquals_withSameFields() {
        EligType other = new EligType();
        other.setEligId(eligIdType1);
        other.setEligValue(true);

        assertTrue(eligType.equals(other));
    }

    @Test
    void testEquals_withDifferentFields() {
        EligType other = new EligType();
        other.setEligId(eligIdType2);
        other.setEligValue(false);

        assertFalse(eligType.equals(other));
    }

    @Test
    void testEquals_withNull() {
        assertFalse(eligType.equals(null));
    }

    @Test
    void testEquals_withDifferentType() {
        assertFalse(eligType.equals("randomType"));
    }

    @Test
    void testHashCode_withNullFields() {
        eligType.setEligId(null);
        eligType.setEligValue(null);

        assertEquals(1, eligType.hashCode());
    }

    @Test
    void testToString_withNullFields() {
        eligType.setEligId(null);
        eligType.setEligValue(null);

        String expectedString = "com.td.mbna.msec.midtier.types.eligibility.EligType@" +
                Integer.toHexString(System.identityHashCode(eligType)) +
                "[eligId=<null>,eligValue=<null>]";
        assertEquals(expectedString, eligType.toString());
    }
}
