package com.td.mbna.msec.midtier.types.common;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.math.BigInteger;

class CustomerActionItemTypeTest {

    @Test
    void testGetActionID() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setActionID(BigInteger.valueOf(123));
        assertEquals(BigInteger.valueOf(123), actionItem.getActionID());
    }

    @Test
    void testSetActionID() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setActionID(BigInteger.valueOf(123));
        assertEquals(BigInteger.valueOf(123), actionItem.getActionID());
    }

    @Test
    void testGetCustomerID() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setCustomerID("customer123");
        assertEquals("customer123", actionItem.getCustomerID());
    }

    @Test
    void testSetCustomerID() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setCustomerID("customer123");
        assertEquals("customer123", actionItem.getCustomerID());
    }

    @Test
    void testGetAccountNumber() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setAccountNumber("account123");
        assertEquals("account123", actionItem.getAccountNumber());
    }

    @Test
    void testSetAccountNumber() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setAccountNumber("account123");
        assertEquals("account123", actionItem.getAccountNumber());
    }

    @Test
    void testGetVisited() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setVisited(true);
        assertTrue(actionItem.getVisited());
    }

    @Test
    void testSetVisited() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setVisited(true);
        assertTrue(actionItem.getVisited());
    }

    @Test
    void testGetDismissed() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setDismissed(false);
        assertFalse(actionItem.getDismissed());
    }

    @Test
    void testSetDismissed() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setDismissed(false);
        assertFalse(actionItem.getDismissed());
    }

    @Test
    void testToString() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        actionItem.setActionID(BigInteger.valueOf(123));
        actionItem.setCustomerID("customer123");
        actionItem.setAccountNumber("account123");
        actionItem.setVisited(true);
        actionItem.setDismissed(false);
        
        String expected = "com.td.mbna.msec.midtier.types.common.CustomerActionItemType@" +
                Integer.toHexString(System.identityHashCode(actionItem)) + "[actionID=123,customerID=customer123,accountNumber=account123,visited=true,dismissed=false]";
        assertTrue(actionItem.toString().contains("actionID=123"));
        assertTrue(actionItem.toString().contains("customerID=customer123"));
        assertTrue(actionItem.toString().contains("accountNumber=account123"));
        assertTrue(actionItem.toString().contains("visited=true"));
        assertTrue(actionItem.toString().contains("dismissed=false"));
    }

    @Test
    void testHashCode() {
        CustomerActionItemType actionItem1 = new CustomerActionItemType();
        CustomerActionItemType actionItem2 = new CustomerActionItemType();
        actionItem1.setActionID(BigInteger.valueOf(123));
        actionItem1.setCustomerID("customer123");
        actionItem1.setAccountNumber("account123");
        actionItem1.setVisited(true);
        actionItem1.setDismissed(false);
        
        actionItem2.setActionID(BigInteger.valueOf(123));
        actionItem2.setCustomerID("customer123");
        actionItem2.setAccountNumber("account123");
        actionItem2.setVisited(true);
        actionItem2.setDismissed(false);
        
        assertEquals(actionItem1.hashCode(), actionItem2.hashCode());
    }

    @Test
    void testEquals() {
        CustomerActionItemType actionItem1 = new CustomerActionItemType();
        CustomerActionItemType actionItem2 = new CustomerActionItemType();
        
        actionItem1.setActionID(BigInteger.valueOf(123));
        actionItem1.setCustomerID("customer123");
        actionItem1.setAccountNumber("account123");
        actionItem1.setVisited(true);
        actionItem1.setDismissed(false);
        
        actionItem2.setActionID(BigInteger.valueOf(123));
        actionItem2.setCustomerID("customer123");
        actionItem2.setAccountNumber("account123");
        actionItem2.setVisited(true);
        actionItem2.setDismissed(false);
        
        assertTrue(actionItem1.equals(actionItem2));

        actionItem2.setCustomerID("customer456");
        assertFalse(actionItem1.equals(actionItem2));
    }

    @Test
    void testEqualsNull() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        assertFalse(actionItem.equals(null));
    }

    @Test
    void testEqualsDifferentClass() {
        CustomerActionItemType actionItem = new CustomerActionItemType();
        assertFalse(actionItem.equals(new Object()));
    }
}
