package com.td.mbna.msec.midtier.types.common;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.math.BigDecimal;

class CustOfferInfoTypeTest {

    @Test
    void testGetOfferId() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        offerInfo.setOfferId("offer123");
        assertEquals("offer123", offerInfo.getOfferId());
    }

    @Test
    void testSetOfferId() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        offerInfo.setOfferId("offer123");
        assertEquals("offer123", offerInfo.getOfferId());
    }

    @Test
    void testGetOfferRate() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        offerInfo.setOfferRate(new BigDecimal("10.5"));
        assertEquals(new BigDecimal("10.5"), offerInfo.getOfferRate());
    }

    @Test
    void testSetOfferRate() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        offerInfo.setOfferRate(new BigDecimal("10.5"));
        assertEquals(new BigDecimal("10.5"), offerInfo.getOfferRate());
    }

    @Test
    void testToString() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        offerInfo.setOfferId("offer123");
        offerInfo.setOfferRate(new BigDecimal("10.5"));
        String expected = "com.td.mbna.msec.midtier.types.common.CustOfferInfoType@" +
                Integer.toHexString(System.identityHashCode(offerInfo)) + "[offerId=offer123,offerRate=10.5]";
        assertTrue(offerInfo.toString().contains("offerId=offer123"));
        assertTrue(offerInfo.toString().contains("offerRate=10.5"));
    }

    @Test
    void testHashCode() {
        CustOfferInfoType offerInfo1 = new CustOfferInfoType();
        CustOfferInfoType offerInfo2 = new CustOfferInfoType();
        offerInfo1.setOfferId("offer123");
        offerInfo1.setOfferRate(new BigDecimal("10.5"));
        offerInfo2.setOfferId("offer123");
        offerInfo2.setOfferRate(new BigDecimal("10.5"));
        assertEquals(offerInfo1.hashCode(), offerInfo2.hashCode());
    }

    @Test
    void testEquals() {
        CustOfferInfoType offerInfo1 = new CustOfferInfoType();
        CustOfferInfoType offerInfo2 = new CustOfferInfoType();
        offerInfo1.setOfferId("offer123");
        offerInfo1.setOfferRate(new BigDecimal("10.5"));
        offerInfo2.setOfferId("offer123");
        offerInfo2.setOfferRate(new BigDecimal("10.5"));
        assertTrue(offerInfo1.equals(offerInfo2));

        offerInfo2.setOfferId("offer456");
        assertFalse(offerInfo1.equals(offerInfo2));
    }

    @Test
    void testEqualsNull() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        assertFalse(offerInfo.equals(null));
    }

    @Test
    void testEqualsDifferentClass() {
        CustOfferInfoType offerInfo = new CustOfferInfoType();
        assertFalse(offerInfo.equals(new Object()));
    }
}
