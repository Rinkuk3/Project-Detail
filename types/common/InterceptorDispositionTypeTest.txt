package com.td.mbna.msec.midtier.types.common;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Date;

import static org.junit.jupiter.api.Assertions.*;

class InterceptorDispositionTypeTest {

    private InterceptorDispositionType interceptorDisposition;

    @BeforeEach
    void setUp() {
        interceptorDisposition = new InterceptorDispositionType();
    }

    @Test
    void testGettersAndSetters() {
        interceptorDisposition.setUcid("UC123");
        interceptorDisposition.setInterceptorType("TypeA");
        interceptorDisposition.setConnectId("C12345");
        interceptorDisposition.setTsysAccountId("Tsys123");
        interceptorDisposition.setInterceptorId("Interceptor123");
        interceptorDisposition.setCardRole("Primary");
        interceptorDisposition.setOfferId("Offer123");
        interceptorDisposition.setDispositionStatus("Approved");
        interceptorDisposition.setTimestamp(new Date());

        assertEquals("UC123", interceptorDisposition.getUcid());
        assertEquals("TypeA", interceptorDisposition.getInterceptorType());
        assertEquals("C12345", interceptorDisposition.getConnectId());
        assertEquals("Tsys123", interceptorDisposition.getTsysAccountId());
        assertEquals("Interceptor123", interceptorDisposition.getInterceptorId());
        assertEquals("Primary", interceptorDisposition.getCardRole());
        assertEquals("Offer123", interceptorDisposition.getOfferId());
        assertEquals("Approved", interceptorDisposition.getDispositionStatus());
        assertNotNull(interceptorDisposition.getTimestamp());
    }

    @Test
    void testEqualsAndHashCode() {
        InterceptorDispositionType interceptorDisposition1 = new InterceptorDispositionType();
        interceptorDisposition1.setUcid("UC123");
        interceptorDisposition1.setInterceptorType("TypeA");
        interceptorDisposition1.setConnectId("C12345");
        interceptorDisposition1.setTsysAccountId("Tsys123");
        interceptorDisposition1.setInterceptorId("Interceptor123");
        interceptorDisposition1.setCardRole("Primary");
        interceptorDisposition1.setOfferId("Offer123");
        interceptorDisposition1.setDispositionStatus("Approved");
        interceptorDisposition1.setTimestamp(new Date());

        InterceptorDispositionType interceptorDisposition2 = new InterceptorDispositionType();
        interceptorDisposition2.setUcid("UC123");
        interceptorDisposition2.setInterceptorType("TypeA");
        interceptorDisposition2.setConnectId("C12345");
        interceptorDisposition2.setTsysAccountId("Tsys123");
        interceptorDisposition2.setInterceptorId("Interceptor123");
        interceptorDisposition2.setCardRole("Primary");
        interceptorDisposition2.setOfferId("Offer123");
        interceptorDisposition2.setDispositionStatus("Approved");
        interceptorDisposition2.setTimestamp(interceptorDisposition1.getTimestamp());

        assertEquals(interceptorDisposition1, interceptorDisposition2);
        assertEquals(interceptorDisposition1.hashCode(), interceptorDisposition2.hashCode());
    }

    @Test
    void testToString() {
        interceptorDisposition.setUcid("UC123");
        interceptorDisposition.setInterceptorType("TypeA");
        interceptorDisposition.setConnectId("C12345");
        interceptorDisposition.setTsysAccountId("Tsys123");
        interceptorDisposition.setInterceptorId("Interceptor123");
        interceptorDisposition.setCardRole("Primary");
        interceptorDisposition.setOfferId("Offer123");
        interceptorDisposition.setDispositionStatus("Approved");
        interceptorDisposition.setTimestamp(new Date());

        String expectedString = "InterceptorDispositionType(ucid=UC123, interceptorType=TypeA, connectId=C12345, tsysAccountId=Tsys123, interceptorId=Interceptor123, cardRole=Primary, offerId=Offer123, dispositionStatus=Approved, timestamp=" + interceptorDisposition.getTimestamp() + ")";
        assertTrue(interceptorDisposition.toString().contains("UC123"));
        assertTrue(interceptorDisposition.toString().contains("TypeA"));
    }

    @Test
    void testConstructor() {
        interceptorDisposition = new InterceptorDispositionType();
        assertNotNull(interceptorDisposition);
    }
}
