import com.td.mbna.msec.midtier.mbnaad.request.response.accesscard.Card;
import com.td.mbna.msec.midtier.mbnaad.request.response.accesscard.CardExpiration;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class CardTest {

    @Test
    void testSetAndGetStatusCd() {
        Card card = new Card();
        card.setStatusCd("ACTIVE");
        assertEquals("ACTIVE", card.getStatusCd());
    }

    @Test
    void testSetAndGetCardNum() {
        Card card = new Card();
        card.setCardNum("1234567890123456");
        assertEquals("1234567890123456", card.getCardNum());
    }

    @Test
    void testSetAndGetCardNumMasked() {
        Card card = new Card();
        card.setCardNumMasked("1234********3456");
        assertEquals("1234********3456", card.getCardNumMasked());
    }

    @Test
    void testSetAndGetOnCardName() {
        Card card = new Card();
        card.setOnCardName("John Doe");
        assertEquals("John Doe", card.getOnCardName());
    }

    @Test
    void testSetAndGetOnCardCompanyName() {
        Card card = new Card();
        card.setOnCardCompanyName("TD Bank");
        assertEquals("TD Bank", card.getOnCardCompanyName());
    }

    @Test
    void testSetAndGetCardExpiration() {
        CardExpiration expiration = new CardExpiration("12/25");
        Card card = new Card();
        card.setCardExpiration(expiration);
        assertEquals(expiration, card.getCardExpiration());
    }

    @Test
    void testSetAndGetDeviceTypeCd() {
        Card card = new Card();
        card.setDeviceTypeCd("VISA");
        assertEquals("VISA", card.getDeviceTypeCd());
    }

    @Test
    void testSetAndGetTypeCd() {
        Card card = new Card();
        card.setTypeCd("CREDIT");
        assertEquals("CREDIT", card.getTypeCd());
    }

    @Test
    void testSetAndGetLastCardRequestDt() {
        Card card = new Card();
        card.setLastCardRequestDt("2024-12-23");
        assertEquals("2024-12-23", card.getLastCardRequestDt());
    }

    @Test
    void testToString() {
        Card card = new Card();
        card.setStatusCd("ACTIVE");
        card.setCardNum("1234567890123456");
        card.setCardNumMasked("1234********3456");
        card.setOnCardName("John Doe");
        card.setOnCardCompanyName("TD Bank");
        card.setDeviceTypeCd("VISA");
        card.setTypeCd("CREDIT");
        card.setLastCardRequestDt("2024-12-23");
        card.setCardExpiration(new CardExpiration("12/25"));
        
        String expectedString = "com.td.mbna.msec.midtier.mbnaad.request.response.accesscard.Card@" +
                                Integer.toHexString(card.hashCode()) +
                                "[statusCd=ACTIVE,cardNum=1234567890123456,cardNumMasked=1234********3456," +
                                "onCardName=John Doe,onCardCompanyName=TD Bank,cardExpiration=12/25," +
                                "deviceTypeCd=VISA,typeCd=CREDIT,lastCardRequestDt=2024-12-23]";
        assertTrue(card.toString().contains("statusCd=ACTIVE"));
    }

    @Test
    void testHashCode() {
        Card card1 = new Card();
        card1.setCardNum("1234567890123456");
        card1.setOnCardName("John Doe");
        card1.setTypeCd("CREDIT");
        card1.setLastCardRequestDt("2024-12-23");
        card1.setOnCardCompanyName("TD Bank");
        card1.setDeviceTypeCd("VISA");
        card1.setStatusCd("ACTIVE");
        card1.setCardExpiration(new CardExpiration("12/25"));
        card1.setCardNumMasked("1234********3456");

        Card card2 = new Card();
        card2.setCardNum("1234567890123456");
        card2.setOnCardName("John Doe");
        card2.setTypeCd("CREDIT");
        card2.setLastCardRequestDt("2024-12-23");
        card2.setOnCardCompanyName("TD Bank");
        card2.setDeviceTypeCd("VISA");
        card2.setStatusCd("ACTIVE");
        card2.setCardExpiration(new CardExpiration("12/25"));
        card2.setCardNumMasked("1234********3456");

        assertEquals(card1.hashCode(), card2.hashCode());
    }

    @Test
    void testEquals() {
        Card card1 = new Card();
        card1.setCardNum("1234567890123456");
        card1.setOnCardName("John Doe");
        card1.setTypeCd("CREDIT");
        card1.setLastCardRequestDt("2024-12-23");
        card1.setOnCardCompanyName("TD Bank");
        card1.setDeviceTypeCd("VISA");
        card1.setStatusCd("ACTIVE");
        card1.setCardExpiration(new CardExpiration("12/25"));
        card1.setCardNumMasked("1234********3456");

        Card card2 = new Card();
        card2.setCardNum("1234567890123456");
        card2.setOnCardName("John Doe");
        card2.setTypeCd("CREDIT");
        card2.setLastCardRequestDt("2024-12-23");
        card2.setOnCardCompanyName("TD Bank");
        card2.setDeviceTypeCd("VISA");
        card2.setStatusCd("ACTIVE");
        card2.setCardExpiration(new CardExpiration("12/25"));
        card2.setCardNumMasked("1234********3456");

        Card card3 = new Card();
        card3.setCardNum("6543210987654321");
        card3.setOnCardName("Jane Doe");
        card3.setTypeCd("DEBIT");
        card3.setLastCardRequestDt("2024-12-24");
        card3.setOnCardCompanyName("Bank of America");
        card3.setDeviceTypeCd("MASTERCARD");
        card3.setStatusCd("INACTIVE");
        card3.setCardExpiration(new CardExpiration("11/24"));
        card3.setCardNumMasked("9876********1234");

        assertTrue(card1.equals(card2));
        assertFalse(card1.equals(card3));
    }
}
