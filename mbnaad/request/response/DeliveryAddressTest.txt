import com.td.mbna.msec.midtier.mbnaad.request.response.error.Status;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class DeliveryAddressTest {

    @Test
    void testSetAndGetCity() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setCity("Toronto");
        assertEquals("Toronto", deliveryAddress.getCity());
    }

    @Test
    void testSetAndGetPostalCode() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setPostalCode("M5H 2N2");
        assertEquals("M5H 2N2", deliveryAddress.getPostalCode());
    }

    @Test
    void testSetAndGetCountryCd() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setCountryCd("CA");
        assertEquals("CA", deliveryAddress.getCountryCd());
    }

    @Test
    void testSetAndGetAddressLine1() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setAddressLine1("123 King St W");
        assertEquals("123 King St W", deliveryAddress.getAddressLine1());
    }

    @Test
    void testSetAndGetAddressLine2() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setAddressLine2("Apt 101");
        assertEquals("Apt 101", deliveryAddress.getAddressLine2());
    }

    @Test
    void testSetAndGetTerritory() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setTerritory("Ontario");
        assertEquals("Ontario", deliveryAddress.getTerritory());
    }

    @Test
    void testSetAndGetStatus() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        Status status = new Status();
        deliveryAddress.setStatus(status);
        assertEquals(status, deliveryAddress.getStatus());
    }

    @Test
    void testToString() {
        DeliveryAddress deliveryAddress = new DeliveryAddress();
        deliveryAddress.setCity("Toronto");
        deliveryAddress.setPostalCode("M5H 2N2");
        deliveryAddress.setCountryCd("CA");
        deliveryAddress.setAddressLine1("123 King St W");
        deliveryAddress.setAddressLine2("Apt 101");
        deliveryAddress.setTerritory("Ontario");
        Status status = new Status();
        deliveryAddress.setStatus(status);

        String expectedString = "com.td.mbna.msec.midtier.mbnaad.request.response.DeliveryAddress@" +
                                Integer.toHexString(deliveryAddress.hashCode()) +
                                "[city=Toronto,postalCode=M5H 2N2,countryCd=CA,addressLine1=123 King St W,addressLine2=Apt 101,territory=Ontario,status=" + status + "]";
        assertTrue(deliveryAddress.toString().contains("city=Toronto"));
        assertTrue(deliveryAddress.toString().contains("postalCode=M5H 2N2"));
    }

    @Test
    void testHashCode() {
        DeliveryAddress deliveryAddress1 = new DeliveryAddress();
        deliveryAddress1.setCity("Toronto");
        deliveryAddress1.setPostalCode("M5H 2N2");

        DeliveryAddress deliveryAddress2 = new DeliveryAddress();
        deliveryAddress2.setCity("Toronto");
        deliveryAddress2.setPostalCode("M5H 2N2");

        DeliveryAddress deliveryAddress3 = new DeliveryAddress();
        deliveryAddress3.setCity("Vancouver");

        assertEquals(deliveryAddress1.hashCode(), deliveryAddress2.hashCode());
        assertNotEquals(deliveryAddress1.hashCode(), deliveryAddress3.hashCode());
    }

    @Test
    void testEquals() {
        DeliveryAddress deliveryAddress1 = new DeliveryAddress();
        deliveryAddress1.setCity("Toronto");
        deliveryAddress1.setPostalCode("M5H 2N2");

        DeliveryAddress deliveryAddress2 = new DeliveryAddress();
        deliveryAddress2.setCity("Toronto");
        deliveryAddress2.setPostalCode("M5H 2N2");

        DeliveryAddress deliveryAddress3 = new DeliveryAddress();
        deliveryAddress3.setCity("Vancouver");

        assertTrue(deliveryAddress1.equals(deliveryAddress2));
        assertFalse(deliveryAddress1.equals(deliveryAddress3));
    }
}
