import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class ElectronicBillingServiceEnrolmentRequestTest {

    private ElectronicBillingServiceEnrolmentRequest enrolmentRequest;

    @BeforeEach
    public void setUp() {
        enrolmentRequest = new ElectronicBillingServiceEnrolmentRequest();
    }

    @Test
    public void testGetServiceProviderPartyId() {
        enrolmentRequest.setServiceProviderPartyId("Provider123");
        assertEquals("Provider123", enrolmentRequest.getServiceProviderPartyId());
    }

    @Test
    public void testSetServiceProviderPartyId() {
        enrolmentRequest.setServiceProviderPartyId("Provider456");
        assertEquals("Provider456", enrolmentRequest.getServiceProviderPartyId());
    }

    @Test
    public void testGetEmailAddress() {
        EmailAddress emailAddress = new EmailAddress();
        enrolmentRequest.setEmailAddress(emailAddress);
        assertEquals(emailAddress, enrolmentRequest.getEmailAddress());
    }

    @Test
    public void testSetEmailAddress() {
        EmailAddress emailAddress = new EmailAddress();
        enrolmentRequest.setEmailAddress(emailAddress);
        assertEquals(emailAddress, enrolmentRequest.getEmailAddress());
    }

    @Test
    public void testToString() {
        enrolmentRequest.setServiceProviderPartyId("Provider123");
        EmailAddress emailAddress = new EmailAddress();
        enrolmentRequest.setEmailAddress(emailAddress);

        String expectedString = "com.td.api.mbcca.request.ebilling.ElectronicBillingServiceEnrolmentRequest@" +
                Integer.toHexString(System.identityHashCode(enrolmentRequest)) +
                "[serviceProviderPartyId=Provider123,emailAddress=" + emailAddress + "]";
        assertTrue(enrolmentRequest.toString().contains("serviceProviderPartyId=Provider123"));
        assertTrue(enrolmentRequest.toString().contains("emailAddress=" + emailAddress));
    }

    @Test
    public void testHashCode() {
        ElectronicBillingServiceEnrolmentRequest enrolmentRequest1 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest1.setServiceProviderPartyId("Provider123");
        enrolmentRequest1.setEmailAddress(new EmailAddress());

        ElectronicBillingServiceEnrolmentRequest enrolmentRequest2 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest2.setServiceProviderPartyId("Provider123");
        enrolmentRequest2.setEmailAddress(new EmailAddress());

        assertEquals(enrolmentRequest1.hashCode(), enrolmentRequest2.hashCode());

        enrolmentRequest2.setServiceProviderPartyId("Provider456");
        assertNotEquals(enrolmentRequest1.hashCode(), enrolmentRequest2.hashCode());
    }

    @Test
    public void testEquals() {
        ElectronicBillingServiceEnrolmentRequest enrolmentRequest1 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest1.setServiceProviderPartyId("Provider123");
        enrolmentRequest1.setEmailAddress(new EmailAddress());

        ElectronicBillingServiceEnrolmentRequest enrolmentRequest2 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest2.setServiceProviderPartyId("Provider123");
        enrolmentRequest2.setEmailAddress(new EmailAddress());

        assertTrue(enrolmentRequest1.equals(enrolmentRequest2));

        enrolmentRequest2.setServiceProviderPartyId("Provider456");
        assertFalse(enrolmentRequest1.equals(enrolmentRequest2));

        enrolmentRequest2.setServiceProviderPartyId("Provider123");
        enrolmentRequest2.setEmailAddress(null);
        assertFalse(enrolmentRequest1.equals(enrolmentRequest2));
    }

    @Test
    public void testEqualsNull() {
        ElectronicBillingServiceEnrolmentRequest enrolmentRequest1 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest1.setServiceProviderPartyId("Provider123");
        enrolmentRequest1.setEmailAddress(null);
        assertFalse(enrolmentRequest1.equals(null));
    }

    @Test
    public void testEqualsDifferentClass() {
        ElectronicBillingServiceEnrolmentRequest enrolmentRequest1 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest1.setServiceProviderPartyId("Provider123");
        enrolmentRequest1.setEmailAddress(null);

        String someString = "RandomString";
        assertFalse(enrolmentRequest1.equals(someString));
    }

    @Test
    public void testEqualsSameInstance() {
        ElectronicBillingServiceEnrolmentRequest enrolmentRequest1 = new ElectronicBillingServiceEnrolmentRequest();
        enrolmentRequest1.setServiceProviderPartyId("Provider123");
        enrolmentRequest1.setEmailAddress(null);

        assertTrue(enrolmentRequest1.equals(enrolmentRequest1));  // Same instance, should return true
    }
}
