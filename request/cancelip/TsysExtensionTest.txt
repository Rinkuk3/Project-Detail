import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

class TsysExtensionTest {

    @Test
    void testGetAndSetVisaChargeBack() {
        TsysExtension tsysExtension = new TsysExtension();
        VisaChargeBack visaChargeBack = new VisaChargeBack(); // Create a mock or real object if needed
        tsysExtension.setVisaChargeBack(visaChargeBack);
        assertEquals(visaChargeBack, tsysExtension.getVisaChargeBack());
    }

    @Test
    void testGetAndSetVisaFee() {
        TsysExtension tsysExtension = new TsysExtension();
        VisaFee visaFee = new VisaFee(); // Create a mock or real object if needed
        tsysExtension.setVisaFee(visaFee);
        assertEquals(visaFee, tsysExtension.getVisaFee());
    }

    @Test
    void testGetAndSetMasterCardFee() {
        TsysExtension tsysExtension = new TsysExtension();
        MasterCardFee masterCardFee = new MasterCardFee(); // Create a mock or real object if needed
        tsysExtension.setMasterCardFee(masterCardFee);
        assertEquals(masterCardFee, tsysExtension.getMasterCardFee());
    }

    @Test
    void testGetAndSetMasterCardChargeBack() {
        TsysExtension tsysExtension = new TsysExtension();
        MasterCardChargeBack masterCardChargeBack = new MasterCardChargeBack(); // Create a mock or real object if needed
        tsysExtension.setMasterCardChargeBack(masterCardChargeBack);
        assertEquals(masterCardChargeBack, tsysExtension.getMasterCardChargeBack());
    }

    @Test
    void testToString() {
        TsysExtension tsysExtension = new TsysExtension();
        VisaChargeBack visaChargeBack = new VisaChargeBack();
        VisaFee visaFee = new VisaFee();
        MasterCardFee masterCardFee = new MasterCardFee();
        MasterCardChargeBack masterCardChargeBack = new MasterCardChargeBack();

        tsysExtension.setVisaChargeBack(visaChargeBack);
        tsysExtension.setVisaFee(visaFee);
        tsysExtension.setMasterCardFee(masterCardFee);
        tsysExtension.setMasterCardChargeBack(masterCardChargeBack);

        String result = tsysExtension.toString();
        assertTrue(result.contains("visaChargeBack=" + visaChargeBack));
        assertTrue(result.contains("visaFee=" + visaFee));
        assertTrue(result.contains("masterCardFee=" + masterCardFee));
        assertTrue(result.contains("masterCardChargeBack=" + masterCardChargeBack));
    }

    @Test
    void testHashCode() {
        TsysExtension tsysExtension1 = new TsysExtension();
        VisaChargeBack visaChargeBack = new VisaChargeBack();
        VisaFee visaFee = new VisaFee();
        MasterCardFee masterCardFee = new MasterCardFee();
        MasterCardChargeBack masterCardChargeBack = new MasterCardChargeBack();

        tsysExtension1.setVisaChargeBack(visaChargeBack);
        tsysExtension1.setVisaFee(visaFee);
        tsysExtension1.setMasterCardFee(masterCardFee);
        tsysExtension1.setMasterCardChargeBack(masterCardChargeBack);

        TsysExtension tsysExtension2 = new TsysExtension();
        tsysExtension2.setVisaChargeBack(visaChargeBack);
        tsysExtension2.setVisaFee(visaFee);
        tsysExtension2.setMasterCardFee(masterCardFee);
        tsysExtension2.setMasterCardChargeBack(masterCardChargeBack);

        assertEquals(tsysExtension1.hashCode(), tsysExtension2.hashCode());
    }

    @Test
    void testEquals() {
        TsysExtension tsysExtension1 = new TsysExtension();
        VisaChargeBack visaChargeBack = new VisaChargeBack();
        VisaFee visaFee = new VisaFee();
        MasterCardFee masterCardFee = new MasterCardFee();
        MasterCardChargeBack masterCardChargeBack = new MasterCardChargeBack();

        tsysExtension1.setVisaChargeBack(visaChargeBack);
        tsysExtension1.setVisaFee(visaFee);
        tsysExtension1.setMasterCardFee(masterCardFee);
        tsysExtension1.setMasterCardChargeBack(masterCardChargeBack);

        TsysExtension tsysExtension2 = new TsysExtension();
        tsysExtension2.setVisaChargeBack(visaChargeBack);
        tsysExtension2.setVisaFee(visaFee);
        tsysExtension2.setMasterCardFee(masterCardFee);
        tsysExtension2.setMasterCardChargeBack(masterCardChargeBack);

        // Test equality
        assertTrue(tsysExtension1.equals(tsysExtension2));

        // Test inequality (change one property)
        tsysExtension2.setMasterCardFee(new MasterCardFee());
        assertFalse(tsysExtension1.equals(tsysExtension2));

        // Test inequality (null fields comparison)
        tsysExtension2.setMasterCardFee(null);
        tsysExtension2.setVisaFee(null);
        assertFalse(tsysExtension1.equals(tsysExtension2));

        // Test equality after setting all properties back
        tsysExtension2.setVisaFee(visaFee);
        tsysExtension2.setMasterCardFee(masterCardFee);
        tsysExtension2.setMasterCardChargeBack(masterCardChargeBack);
        tsysExtension2.setVisaChargeBack(visaChargeBack);
        assertTrue(tsysExtension1.equals(tsysExtension2));
    }
}
