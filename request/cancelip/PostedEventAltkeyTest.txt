import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import java.util.Date;

class PostedEventAltkeyTest {

    @Test
    void testGetAndSetStatementDataDt() {
        PostedEventAltkey eventAltkey = new PostedEventAltkey();
        eventAltkey.setStatementDataDt("2024-12-31");
        assertEquals("2024-12-31", eventAltkey.getStatementDataDt());
    }

    @Test
    void testGetAndSetPostedDttm() {
        PostedEventAltkey eventAltkey = new PostedEventAltkey();
        Date now = new Date();
        eventAltkey.setPostedDttm(now);
        assertEquals(now, eventAltkey.getPostedDttm());
    }

    @Test
    void testToString() {
        PostedEventAltkey eventAltkey = new PostedEventAltkey();
        eventAltkey.setStatementDataDt("2024-12-31");
        Date now = new Date();
        eventAltkey.setPostedDttm(now);

        String result = eventAltkey.toString();
        assertTrue(result.contains("statementDataDt=2024-12-31"));
        assertTrue(result.contains("postedDttm=" + now.toString()));
    }

    @Test
    void testHashCode() {
        PostedEventAltkey eventAltkey1 = new PostedEventAltkey();
        eventAltkey1.setStatementDataDt("2024-12-31");
        Date now = new Date();
        eventAltkey1.setPostedDttm(now);

        PostedEventAltkey eventAltkey2 = new PostedEventAltkey();
        eventAltkey2.setStatementDataDt("2024-12-31");
        eventAltkey2.setPostedDttm(now);

        assertEquals(eventAltkey1.hashCode(), eventAltkey2.hashCode());
    }

    @Test
    void testEquals() {
        PostedEventAltkey eventAltkey1 = new PostedEventAltkey();
        eventAltkey1.setStatementDataDt("2024-12-31");
        Date now = new Date();
        eventAltkey1.setPostedDttm(now);

        PostedEventAltkey eventAltkey2 = new PostedEventAltkey();
        eventAltkey2.setStatementDataDt("2024-12-31");
        eventAltkey2.setPostedDttm(now);

        // Test equality
        assertTrue(eventAltkey1.equals(eventAltkey2));

        // Test inequality (change postedDttm)
        eventAltkey2.setPostedDttm(new Date());
        assertFalse(eventAltkey1.equals(eventAltkey2));

        // Test inequality (change statementDataDt)
        eventAltkey2.setPostedDttm(now);
        eventAltkey2.setStatementDataDt("2024-12-30");
        assertFalse(eventAltkey1.equals(eventAltkey2));

        // Test equality after setting the same values again
        eventAltkey2.setStatementDataDt("2024-12-31");
        eventAltkey2.setPostedDttm(now);
        assertTrue(eventAltkey1.equals(eventAltkey2));
    }
}
