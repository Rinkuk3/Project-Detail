import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

class MasterCardFeeTest {

    @Test
    void testGetAndSetReasonCd() {
        MasterCardFee fee = new MasterCardFee();
        fee.setReasonCd("reason1");
        assertEquals("reason1", fee.getReasonCd());
    }

    @Test
    void testGetAndSetFunctionCd() {
        MasterCardFee fee = new MasterCardFee();
        fee.setFunctionCd("function1");
        assertEquals("function1", fee.getFunctionCd());
    }

    @Test
    void testGetAndSetCardSequenceNum() {
        MasterCardFee fee = new MasterCardFee();
        fee.setCardSequenceNum("12345");
        assertEquals("12345", fee.getCardSequenceNum());
    }

    @Test
    void testToString() {
        MasterCardFee fee = new MasterCardFee();
        fee.setReasonCd("reason1");
        fee.setFunctionCd("function1");
        fee.setCardSequenceNum("12345");

        String result = fee.toString();
        assertTrue(result.contains("reasonCd=reason1"));
        assertTrue(result.contains("functionCd=function1"));
        assertTrue(result.contains("cardSequenceNum=12345"));
    }

    @Test
    void testHashCode() {
        MasterCardFee fee1 = new MasterCardFee();
        fee1.setReasonCd("reason1");
        fee1.setFunctionCd("function1");
        fee1.setCardSequenceNum("12345");

        MasterCardFee fee2 = new MasterCardFee();
        fee2.setReasonCd("reason1");
        fee2.setFunctionCd("function1");
        fee2.setCardSequenceNum("12345");

        assertEquals(fee1.hashCode(), fee2.hashCode());
    }

    @Test
    void testEquals() {
        MasterCardFee fee1 = new MasterCardFee();
        fee1.setReasonCd("reason1");
        fee1.setFunctionCd("function1");
        fee1.setCardSequenceNum("12345");

        MasterCardFee fee2 = new MasterCardFee();
        fee2.setReasonCd("reason1");
        fee2.setFunctionCd("function1");
        fee2.setCardSequenceNum("12345");

        assertTrue(fee1.equals(fee2));

        fee2.setReasonCd("reason2");
        assertFalse(fee1.equals(fee2));

        fee2.setReasonCd("reason1");
        fee2.setFunctionCd("function2");
        assertFalse(fee1.equals(fee2));

        fee2.setFunctionCd("function1");
        fee2.setCardSequenceNum("54321");
        assertFalse(fee1.equals(fee2));
    }
}
