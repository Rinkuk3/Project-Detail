package com.td.api.mbcca.request.cancelip;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AddCreditCardAgreementPostedAdjustmentEventRequestTest {

    private AddCreditCardAgreementPostedAdjustmentEventRequest request;
    private PostedAdjustmentEvent postedAdjustmentEvent;

    @BeforeEach
    void setUp() {
        request = new AddCreditCardAgreementPostedAdjustmentEventRequest();
        postedAdjustmentEvent = new PostedAdjustmentEvent();
    }

    @Test
    void testGetSetPostedAdjustmentEvent() {
        request.setPostedAdjustmentEvent(postedAdjustmentEvent);
        assertEquals(postedAdjustmentEvent, request.getPostedAdjustmentEvent());
    }

    @Test
    void testToString() {
        request.setPostedAdjustmentEvent(postedAdjustmentEvent);
        String result = request.toString();
        assertTrue(result.contains("postedAdjustmentEvent="));
    }

    @Test
    void testHashCode() {
        AddCreditCardAgreementPostedAdjustmentEventRequest request1 = new AddCreditCardAgreementPostedAdjustmentEventRequest();
        AddCreditCardAgreementPostedAdjustmentEventRequest request2 = new AddCreditCardAgreementPostedAdjustmentEventRequest();
        assertEquals(request1.hashCode(), request2.hashCode());

        request1.setPostedAdjustmentEvent(postedAdjustmentEvent);
        request2.setPostedAdjustmentEvent(postedAdjustmentEvent);
        assertEquals(request1.hashCode(), request2.hashCode());
    }

    @Test
    void testEquals() {
        AddCreditCardAgreementPostedAdjustmentEventRequest request1 = new AddCreditCardAgreementPostedAdjustmentEventRequest();
        AddCreditCardAgreementPostedAdjustmentEventRequest request2 = new AddCreditCardAgreementPostedAdjustmentEventRequest();
        assertEquals(request1, request2);

        request1.setPostedAdjustmentEvent(postedAdjustmentEvent);
        request2.setPostedAdjustmentEvent(postedAdjustmentEvent);
        assertEquals(request1, request2);

        request2.setPostedAdjustmentEvent(new PostedAdjustmentEvent());
        assertNotEquals(request1, request2);
    }

    @Test
    void testEquals_Self() {
        assertEquals(request, request);
    }

    @Test
    void testEquals_Null() {
        assertNotEquals(request, null);
    }

    @Test
    void testEquals_DifferentClass() {
        assertNotEquals(request, new Object());
    }

}
