import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

class OriginalAuthorizationEventTest {

    @Test
    void testGetAndSetTerminalChannelTypeCd() {
        OriginalAuthorizationEvent event = new OriginalAuthorizationEvent();
        event.setTerminalChannelTypeCd("channel1");
        assertEquals("channel1", event.getTerminalChannelTypeCd());
    }

    @Test
    void testGetAndSetMailTelephoneOrderTransactionCd() {
        OriginalAuthorizationEvent event = new OriginalAuthorizationEvent();
        event.setMailTelephoneOrderTransactionCd("transaction1");
        assertEquals("transaction1", event.getMailTelephoneOrderTransactionCd());
    }

    @Test
    void testGetAndSetMerchantPointOfServiceTerminalCapabilityCd() {
        OriginalAuthorizationEvent event = new OriginalAuthorizationEvent();
        event.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        assertEquals("capability1", event.getMerchantPointOfServiceTerminalCapabilityCd());
    }

    @Test
    void testGetAndSetMerchantPointOfServiceTerminalEntryCd() {
        OriginalAuthorizationEvent event = new OriginalAuthorizationEvent();
        event.setMerchantPointOfServiceTerminalEntryCd("entry1");
        assertEquals("entry1", event.getMerchantPointOfServiceTerminalEntryCd());
    }

    @Test
    void testToString() {
        OriginalAuthorizationEvent event = new OriginalAuthorizationEvent();
        event.setTerminalChannelTypeCd("channel1");
        event.setMailTelephoneOrderTransactionCd("transaction1");
        event.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        event.setMerchantPointOfServiceTerminalEntryCd("entry1");

        String result = event.toString();
        assertTrue(result.contains("terminalChannelTypeCd=channel1"));
        assertTrue(result.contains("mailTelephoneOrderTransactionCd=transaction1"));
        assertTrue(result.contains("merchantPointOfServiceTerminalCapabilityCd=capability1"));
        assertTrue(result.contains("merchantPointOfServiceTerminalEntryCd=entry1"));
    }

    @Test
    void testHashCode() {
        OriginalAuthorizationEvent event1 = new OriginalAuthorizationEvent();
        event1.setTerminalChannelTypeCd("channel1");
        event1.setMailTelephoneOrderTransactionCd("transaction1");
        event1.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        event1.setMerchantPointOfServiceTerminalEntryCd("entry1");

        OriginalAuthorizationEvent event2 = new OriginalAuthorizationEvent();
        event2.setTerminalChannelTypeCd("channel1");
        event2.setMailTelephoneOrderTransactionCd("transaction1");
        event2.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        event2.setMerchantPointOfServiceTerminalEntryCd("entry1");

        assertEquals(event1.hashCode(), event2.hashCode());
    }

    @Test
    void testEquals() {
        OriginalAuthorizationEvent event1 = new OriginalAuthorizationEvent();
        event1.setTerminalChannelTypeCd("channel1");
        event1.setMailTelephoneOrderTransactionCd("transaction1");
        event1.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        event1.setMerchantPointOfServiceTerminalEntryCd("entry1");

        OriginalAuthorizationEvent event2 = new OriginalAuthorizationEvent();
        event2.setTerminalChannelTypeCd("channel1");
        event2.setMailTelephoneOrderTransactionCd("transaction1");
        event2.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        event2.setMerchantPointOfServiceTerminalEntryCd("entry1");

        assertTrue(event1.equals(event2));

        event2.setTerminalChannelTypeCd("channel2");
        assertFalse(event1.equals(event2));

        event2.setTerminalChannelTypeCd("channel1");
        event2.setMailTelephoneOrderTransactionCd("transaction2");
        assertFalse(event1.equals(event2));

        event2.setMailTelephoneOrderTransactionCd("transaction1");
        event2.setMerchantPointOfServiceTerminalCapabilityCd("capability2");
        assertFalse(event1.equals(event2));

        event2.setMerchantPointOfServiceTerminalCapabilityCd("capability1");
        event2.setMerchantPointOfServiceTerminalEntryCd("entry2");
        assertFalse(event1.equals(event2));
    }
}
