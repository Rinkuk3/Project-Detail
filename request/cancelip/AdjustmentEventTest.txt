package com.td.api.mbcca.request.cancelip;

import com.td.api.mbcca.shared.Cccyamt;
import com.td.api.mbcca.shared.MerchantInfo;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AdjustmentEventTest {

    private AdjustmentEvent adjustmentEvent;
    private Cccyamt transactionCccyamt;
    private MerchantInfo merchantInfo;
    private TsysExtension tsysExtension;

    @BeforeEach
    void setUp() {
        adjustmentEvent = new AdjustmentEvent();
        transactionCccyamt = new Cccyamt();
        merchantInfo = new MerchantInfo();
        tsysExtension = new TsysExtension();
    }

    @Test
    void testGetSetActivityTypeCd() {
        String activityTypeCd = "Activity123";
        adjustmentEvent.setActivityTypeCd(activityTypeCd);
        assertEquals(activityTypeCd, adjustmentEvent.getActivityTypeCd());
    }

    @Test
    void testGetSetAdjustmentTypeCd() {
        String adjustmentTypeCd = "Adjustment123";
        adjustmentEvent.setAdjustmentTypeCd(adjustmentTypeCd);
        assertEquals(adjustmentTypeCd, adjustmentEvent.getAdjustmentTypeCd());
    }

    @Test
    void testGetSetEventTypeCd() {
        String eventTypeCd = "Event123";
        adjustmentEvent.setEventTypeCd(eventTypeCd);
        assertEquals(eventTypeCd, adjustmentEvent.getEventTypeCd());
    }

    @Test
    void testGetSetTransactionCategoryCd() {
        String transactionCategoryCd = "Category123";
        adjustmentEvent.setTransactionCategoryCd(transactionCategoryCd);
        assertEquals(transactionCategoryCd, adjustmentEvent.getTransactionCategoryCd());
    }

    @Test
    void testGetSetRetailEventDt() {
        String retailEventDt = "2024-12-26";
        adjustmentEvent.setRetailEventDt(retailEventDt);
        assertEquals(retailEventDt, adjustmentEvent.getRetailEventDt());
    }

    @Test
    void testGetSetCardNum() {
        String cardNum = "1234567890123456";
        adjustmentEvent.setCardNum(cardNum);
        assertEquals(cardNum, adjustmentEvent.getCardNum());
    }

    @Test
    void testGetSetAcquirerReferenceNum() {
        String acquirerReferenceNum = "Acquirer123";
        adjustmentEvent.setAcquirerReferenceNum(acquirerReferenceNum);
        assertEquals(acquirerReferenceNum, adjustmentEvent.getAcquirerReferenceNum());
    }

    @Test
    void testGetSetTransactionCccyamt() {
        adjustmentEvent.setTransactionCccyamt(transactionCccyamt);
        assertEquals(transactionCccyamt, adjustmentEvent.getTransactionCccyamt());
    }

    @Test
    void testGetSetTextTypeCd() {
        String textTypeCd = "Text123";
        adjustmentEvent.setTextTypeCd(textTypeCd);
        assertEquals(textTypeCd, adjustmentEvent.getTextTypeCd());
    }

    @Test
    void testGetSetMerchantInfo() {
        adjustmentEvent.setMerchantInfo(merchantInfo);
        assertEquals(merchantInfo, adjustmentEvent.getMerchantInfo());
    }

    @Test
    void testGetSetTrackingNum() {
        String trackingNum = "Tracking123";
        adjustmentEvent.setTrackingNum(trackingNum);
        assertEquals(trackingNum, adjustmentEvent.getTrackingNum());
    }

    @Test
    void testGetSetForcePostInd() {
        Boolean forcePostInd = true;
        adjustmentEvent.setForcePostInd(forcePostInd);
        assertEquals(forcePostInd, adjustmentEvent.getForcePostInd());
    }

    @Test
    void testGetSetAccountingFunctionCd() {
        String accountingFunctionCd = "Account123";
        adjustmentEvent.setAccountingFunctionCd(accountingFunctionCd);
        assertEquals(accountingFunctionCd, adjustmentEvent.getAccountingFunctionCd());
    }

    @Test
    void testGetSetPaymentTokenNum() {
        String paymentTokenNum = "Token123";
        adjustmentEvent.setPaymentTokenNum(paymentTokenNum);
        assertEquals(paymentTokenNum, adjustmentEvent.getPaymentTokenNum());
    }

    @Test
    void testGetSetPaymentTokenAssuranceLevelCd() {
        String paymentTokenAssuranceLevelCd = "Assurance123";
        adjustmentEvent.setPaymentTokenAssuranceLevelCd(paymentTokenAssuranceLevelCd);
        assertEquals(paymentTokenAssuranceLevelCd, adjustmentEvent.getPaymentTokenAssuranceLevelCd());
    }

    @Test
    void testGetSetPaymentTokenRequesterId() {
        String paymentTokenRequesterId = "Requester123";
        adjustmentEvent.setPaymentTokenRequesterId(paymentTokenRequesterId);
        assertEquals(paymentTokenRequesterId, adjustmentEvent.getPaymentTokenRequesterId());
    }

    @Test
    void testGetSetTsysExtension() {
        adjustmentEvent.setTsysExtension(tsysExtension);
        assertEquals(tsysExtension, adjustmentEvent.getTsysExtension());
    }

    @Test
    void testGetSetTransactionLevelProcessingTypeCd() {
        String transactionLevelProcessingTypeCd = "Processing123";
        adjustmentEvent.setTransactionLevelProcessingTypeCd(transactionLevelProcessingTypeCd);
        assertEquals(transactionLevelProcessingTypeCd, adjustmentEvent.getTransactionLevelProcessingTypeCd());
    }

    @Test
    void testGetSetTransactionLevelProcessingFeatureId() {
        String transactionLevelProcessingFeatureId = "Feature123";
        adjustmentEvent.setTransactionLevelProcessingFeatureId(transactionLevelProcessingFeatureId);
        assertEquals(transactionLevelProcessingFeatureId, adjustmentEvent.getTransactionLevelProcessingFeatureId());
    }

    @Test
    void testToString() {
        adjustmentEvent.setActivityTypeCd("Activity123");
        adjustmentEvent.setAdjustmentTypeCd("Adjustment123");
        String result = adjustmentEvent.toString();
        assertTrue(result.contains("activityTypeCd"));
        assertTrue(result.contains("adjustmentTypeCd"));
    }

    @Test
    void testHashCode() {
        AdjustmentEvent event1 = new AdjustmentEvent();
        AdjustmentEvent event2 = new AdjustmentEvent();
        assertEquals(event1.hashCode(), event2.hashCode());

        event1.setAcquirerReferenceNum("Acquirer123");
        event2.setAcquirerReferenceNum("Acquirer123");
        assertEquals(event1.hashCode(), event2.hashCode());
    }

    @Test
    void testEquals() {
        AdjustmentEvent event1 = new AdjustmentEvent();
        AdjustmentEvent event2 = new AdjustmentEvent();
        assertEquals(event1, event2);

        event1.setAcquirerReferenceNum("Acquirer123");
        event2.setAcquirerReferenceNum("Acquirer123");
        assertEquals(event1, event2);

        event2.setAcquirerReferenceNum("Acquirer124");
        assertNotEquals(event1, event2);
    }

    @Test
    void testEquals_Self() {
        assertEquals(adjustmentEvent, adjustmentEvent);
    }

    @Test
    void testEquals_Null() {
        assertNotEquals(adjustmentEvent, null);
    }

    @Test
    void testEquals_DifferentClass() {
        assertNotEquals(adjustmentEvent, new Object());
    }
}
