import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import java.util.ArrayList;

public class RetrieveCampaignRsTest {

    private RetrieveCampaignRs retrieveCampaignRs;

    @BeforeEach
    public void setUp() {
        retrieveCampaignRs = new RetrieveCampaignRs();
    }

    @Test
    public void testSetAndGetCampaign() {
        Campaign campaign = new Campaign();
        retrieveCampaignRs.setCampaign(campaign);
        assertEquals(campaign, retrieveCampaignRs.getCampaign());
    }

    @Test
    public void testSetAndGetPromotionProductOffer() {
        List<PromotionProductOffer> promotionProductOffer = new ArrayList<>();
        retrieveCampaignRs.setPromotionProductOffer(promotionProductOffer);
        assertEquals(promotionProductOffer, retrieveCampaignRs.getPromotionProductOffer());
    }

    @Test
    public void testToString() {
        Campaign campaign = new Campaign();
        List<PromotionProductOffer> promotionProductOffer = new ArrayList<>();
        
        retrieveCampaignRs.setCampaign(campaign);
        retrieveCampaignRs.setPromotionProductOffer(promotionProductOffer);

        String expected = "com.td.api.mbofp.response.retrievecampaign.RetrieveCampaignRs@" 
                + Integer.toHexString(System.identityHashCode(retrieveCampaignRs)) 
                + "[campaign=" + campaign + ",promotionProductOffer=" + promotionProductOffer + "]";
        
        assertEquals(expected, retrieveCampaignRs.toString());
    }

    @Test
    public void testHashCode() {
        Campaign campaign = new Campaign();
        List<PromotionProductOffer> promotionProductOffer = new ArrayList<>();

        retrieveCampaignRs.setCampaign(campaign);
        retrieveCampaignRs.setPromotionProductOffer(promotionProductOffer);

        int expectedHashCode = 31 + (promotionProductOffer == null ? 0 : promotionProductOffer.hashCode()) 
                + (campaign == null ? 0 : campaign.hashCode());
        
        assertEquals(expectedHashCode, retrieveCampaignRs.hashCode());
    }

    @Test
    public void testEquals() {
        Campaign campaign = new Campaign();
        List<PromotionProductOffer> promotionProductOffer = new ArrayList<>();
        
        retrieveCampaignRs.setCampaign(campaign);
        retrieveCampaignRs.setPromotionProductOffer(promotionProductOffer);

        RetrieveCampaignRs anotherRetrieveCampaignRs = new RetrieveCampaignRs();
        anotherRetrieveCampaignRs.setCampaign(campaign);
        anotherRetrieveCampaignRs.setPromotionProductOffer(promotionProductOffer);

        assertTrue(retrieveCampaignRs.equals(anotherRetrieveCampaignRs));

        anotherRetrieveCampaignRs.setCampaign(new Campaign());
        assertFalse(retrieveCampaignRs.equals(anotherRetrieveCampaignRs));

        anotherRetrieveCampaignRs.setCampaign(campaign);
        anotherRetrieveCampaignRs.setPromotionProductOffer(new ArrayList<>());
        assertFalse(retrieveCampaignRs.equals(anotherRetrieveCampaignRs));

        anotherRetrieveCampaignRs.setPromotionProductOffer(null);
        assertFalse(retrieveCampaignRs.equals(anotherRetrieveCampaignRs));

        anotherRetrieveCampaignRs.setCampaign(null);
        assertFalse(retrieveCampaignRs.equals(anotherRetrieveCampaignRs));
    }
}
