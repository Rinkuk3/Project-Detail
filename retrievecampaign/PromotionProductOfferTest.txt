import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Collections;

public class PromotionProductOfferTest {

    private PromotionProductOffer promotionProductOffer;

    @BeforeEach
    public void setUp() {
        promotionProductOffer = new PromotionProductOffer();
    }

    @Test
    public void testSetAndGetCreditCardProduct() {
        CreditCardProduct creditCardProduct = new CreditCardProduct();
        promotionProductOffer.setCreditCardProduct(creditCardProduct);
        assertEquals(creditCardProduct, promotionProductOffer.getCreditCardProduct());
    }

    @Test
    public void testSetAndGetPromotionOffer() {
        PromotionOffer promotionOffer = new PromotionOffer();
        promotionProductOffer.setPromotionOffer(Collections.singletonList(promotionOffer));
        assertEquals(1, promotionProductOffer.getPromotionOffer().size());
        assertEquals(promotionOffer, promotionProductOffer.getPromotionOffer().get(0));
    }

    @Test
    public void testToString() {
        CreditCardProduct creditCardProduct = new CreditCardProduct();
        promotionProductOffer.setCreditCardProduct(creditCardProduct);
        PromotionOffer promotionOffer = new PromotionOffer();
        promotionProductOffer.setPromotionOffer(Collections.singletonList(promotionOffer));

        String expected = "com.td.api.mbofp.response.retrievecampaign.PromotionProductOffer@" 
                + Integer.toHexString(System.identityHashCode(promotionProductOffer)) 
                + "[creditCardProduct=" + creditCardProduct + ",promotionOffer=" + promotionProductOffer.getPromotionOffer() + "]";

        assertEquals(expected, promotionProductOffer.toString());
    }

    @Test
    public void testHashCode() {
        CreditCardProduct creditCardProduct = new CreditCardProduct();
        promotionProductOffer.setCreditCardProduct(creditCardProduct);
        PromotionOffer promotionOffer = new PromotionOffer();
        promotionProductOffer.setPromotionOffer(Collections.singletonList(promotionOffer));

        int expectedHashCode = 31 * (31 + (promotionProductOffer.getCreditCardProduct() == null ? 0 : promotionProductOffer.getCreditCardProduct().hashCode())) 
                + (promotionProductOffer.getPromotionOffer() == null ? 0 : promotionProductOffer.getPromotionOffer().hashCode());

        assertEquals(expectedHashCode, promotionProductOffer.hashCode());
    }

    @Test
    public void testEquals() {
        CreditCardProduct creditCardProduct = new CreditCardProduct();
        promotionProductOffer.setCreditCardProduct(creditCardProduct);
        PromotionOffer promotionOffer = new PromotionOffer();
        promotionProductOffer.setPromotionOffer(Collections.singletonList(promotionOffer));

        PromotionProductOffer anotherPromotionProductOffer = new PromotionProductOffer();
        anotherPromotionProductOffer.setCreditCardProduct(creditCardProduct);
        anotherPromotionProductOffer.setPromotionOffer(Collections.singletonList(promotionOffer));

        assertTrue(promotionProductOffer.equals(anotherPromotionProductOffer));

        anotherPromotionProductOffer.setCreditCardProduct(new CreditCardProduct());
        assertFalse(promotionProductOffer.equals(anotherPromotionProductOffer));

        anotherPromotionProductOffer.setCreditCardProduct(creditCardProduct);
        anotherPromotionProductOffer.setPromotionOffer(Collections.emptyList());
        assertFalse(promotionProductOffer.equals(anotherPromotionProductOffer));
    }
}
